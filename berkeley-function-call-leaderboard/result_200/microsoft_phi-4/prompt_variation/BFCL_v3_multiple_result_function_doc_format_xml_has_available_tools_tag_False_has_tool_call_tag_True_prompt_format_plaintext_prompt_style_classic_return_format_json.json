{"id": "multiple_4", "result": "```json\n[{\"function\":\"kinematics.calculate_displacement\",\"parameters\":{\"initial_speed\":20,\"acceleration\":10,\"time\":5}}]\n```", "input_token_count": 4677, "output_token_count": 32, "latency": 377.572548866272}
{"id": "multiple_25", "result": "```json\n[{\"function\":\"video_games.store_price\",\"parameters\":{\"game_title\":\"Assassins Creed Valhalla\",\"platform\":\"PlayStation\",\"region\":\"United States\"}}]\n```", "input_token_count": 5053, "output_token_count": 38, "latency": 376.3109769821167}
{"id": "multiple_31", "result": "```json\n[{\"function\":\"geometry_rectangle.calculate\",\"parameters\":{\"width\":7,\"length\":10}}]\n```", "input_token_count": 3791, "output_token_count": 24, "latency": 373.76777482032776}
{"id": "multiple_36", "result": "```json\n[{\"function\":\"kinematics.calculate_speed_from_rest\",\"parameters\":{\"distance\":20,\"time\":4}}]\n```", "input_token_count": 4184, "output_token_count": 27, "latency": 372.4708528518677}
{"id": "multiple_42", "result": "```json\n[{\"function\":\"calculate_final_temperature\",\"parameters\":{\"quantity1\":2,\"temperature1\":300,\"quantity2\":3,\"temperature2\":400}}]\n```", "input_token_count": 3909, "output_token_count": 36, "latency": 372.65685510635376}
{"id": "multiple_46", "result": "```json\n[{\"function\":\"sort_list\",\"parameters\":{\"elements\":[\"Sam\", \"Alice\", \"Jack\"]}}]\n```", "input_token_count": 4099, "output_token_count": 26, "latency": 369.54698848724365}
{"id": "multiple_51", "result": "```json\n[{\"function\":\"dice_roll_probability\",\"parameters\":{\"desired_sum\":7,\"sides_per_die\":6}}]\n```", "input_token_count": 4587, "output_token_count": 28, "latency": 366.8890976905823}
{"id": "multiple_54", "result": "```json\n[{\"function\":\"corporate_finance.dividend_data\",\"parameters\":{\"company\":\"Apple Inc\",\"years\":5}}]\n```", "input_token_count": 3778, "output_token_count": 29, "latency": 365.6762204170227}
{"id": "multiple_71", "result": "<TOOLCALL>\n```json\n[{\"function\":\"get_population\",\"parameters\":{\"year\":1954,\"category\":\"veterans\"}}]\n```</TOOLCALL>", "input_token_count": 4285, "output_token_count": 36, "latency": 363.9277591705322}
{"id": "multiple_75", "result": "<TOOLCALL>`paint_color.trends(room='Living room')`</TOOLCALL>", "input_token_count": 4429, "output_token_count": 21, "latency": 361.9007787704468}
{"id": "multiple_102", "result": "```json\n[{\"function\":\"calculate_displacement\",\"parameters\":{\"initial_velocity\":10,\"time\":5,\"acceleration\":9.8}}]\n```", "input_token_count": 4847, "output_token_count": 32, "latency": 360.378555059433}
{"id": "multiple_132", "result": "```json\n[{\"function\":\"finance.calculate_future_value\",\"parameters\":{\"initial_investment\":20000,\"rate_of_return\":0.08,\"years\":5}}]\n```", "input_token_count": 5056, "output_token_count": 36, "latency": 355.0717191696167}
{"id": "multiple_159", "result": "```json\n[{\"function\":\"calculate_paint_needed\",\"parameters\":{\"coverage_rate\":400,\"length\":30,\"height\":12}}]\n```", "input_token_count": 4805, "output_token_count": 29, "latency": 352.1364016532898}
{"id": "multiple_161", "result": "<TOOLCALL>[find_exhibition(location=\"New York, NY\", art_form=\"sculpture\", month=\"upcoming\", user_ratings=\"high\")]</TOOLCALL><|file_sep|>import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n\n  user: any = {};\n  constructor(private userService: UserService, private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.userService.getUserProfile().subscribe((res: any) => {\n      this.user = res.user;\n    })\n  }\n\n  logout() {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n\n}\n<|file_sep|>import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  email: string = '';\n  password: string = '';\n  error: string = '';\n  constructor(private userService: UserService, private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  login() {\n    this.userService.login(this.email, this.password).subscribe((res: any) => {\n      if (res.success) {\n        this.authService.setToken(res.token);\n        this.router.navigate(['/']);\n      } else {\n        this.error = res.message;\n      }\n    })\n  }\n\n}\n<|file_sep|>import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  name: string = '';\n  email: string = '';\n  password: string = '';\n  error: string = '';\n  constructor(private userService: UserService, private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  register() {\n    this.userService.register(this.name, this.email, this.password).subscribe((res: any) => {\n      if (res.success) {\n        this.authService.setToken(res.token);\n        this.router.navigate(['/']);\n      } else {\n        this.error = res.message;\n      }\n    })\n  }\n\n}\n<|repo_name|>sahilsharma-1999/angulartask<|file_sep|>/src/app/services/user.service.ts\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  register(name: string, email: string, password: string): Observable<any> {\n    return this.http.post('http://localhost:3000/register', { name, email, password });\n  }\n\n  login(email: string, password: string): Observable<any> {\n    return this.http.post('http://localhost:3000/login', { email, password });\n  }\n\n  getUserProfile(): Observable<any> {\n    return this.http.get('http://localhost:3000/user');\n  }\n\n  updateUserProfile(name: string, email: string, password: string): Observable<any> {\n    return this.http.put('http://localhost:3000/user', { name, email, password });\n  }\n}\n<|repo_name|>sahilsharma-1999/angulartask<|file_sep|>/src/app/app-routing.module.ts\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './guards/auth.guard';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent, canActivate: [AuthGuard] },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'user-profile', component: UserProfileComponent, canActivate: [AuthGuard] },\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n<|repo_name|>sahilsharma-1999/angulartask<|file_sep|>/src/app/services/auth.service.ts\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private router: Router) { }\n\n  setToken(token: string) {\n    localStorage.setItem('token', token);\n  }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    this.router.navigate(['/login']);\n  }\n\n  isAuthenticated() {\n    return !!localStorage.getItem('token');\n  }\n}\n<|file_sep|>import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  user: any = {};\n  constructor(private userService: UserService, private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.userService.getUserProfile().subscribe((res: any) => {\n      this.user = res.user;\n    })\n  }\n\n  logout() {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n\n  updateProfile() {\n    this.router.navigate(['/user-profile']);\n  }\n\n}\n<|repo_name|>sahilsharma-1999/angulartask<|file_sep|>/src/app/guards/auth.guard.ts\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  canActivate(): boolean {\n    if (this.authService.isAuthenticated()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n<|repo_name|>jameskyle/ember-cli-leaflet<|file_sep|>/tests/dummy/app/templates/application.hbs\n{{#leaflet-map lat=lat lng=lng zoom=zoom}}\n  {{#leaflet-tile-layer url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\" attribution=\"&copy; <a href='http://osm.org/copyright'>OpenStreetMap</a> contributors\"}}\n  {{/leaflet-tile-layer}}\n\n  {{#leaflet-marker lat=lat lng=lng}}\n    {{#leaflet-popup}}\n      <h1>Hello World!</h1>\n    {{/leaflet-popup}}\n  {{/leaflet-marker}}\n{{/leaflet-map}}\n\n{{outlet}}\n<|repo_name|>jameskyle/ember-cli-leaflet<|file_sep|>/tests/dummy/app/templates/components/leaflet-map.hbs\n{{#leaflet-map lat=lat lng=lng zoom=zoom}}\n  {{#leaflet-tile-layer url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\" attribution=\"&copy; <a href='http://osm.org/copyright'>OpenStreetMap</a> contributors\"}}\n  {{/leaflet-tile-layer}}\n\n  {{#each markers as |marker|}}\n    {{#leaflet-marker lat=marker.lat lng=marker.lng}}\n      {{#leaflet-popup}}\n        <h1>Hello World!</h1>\n      {{/leaflet-popup}}\n    {{/leaflet-marker}}\n  {{/each}}\n{{/leaflet-map}}\n<|repo_name|>jameskyle/ember-cli-leaflet<|file_sep|>/tests/dummy/app/controllers/application.js\nimport Ember from 'ember';\n\nexport default Ember.Controller.extend({\n  lat: 51.505,\n  lng: -0.09,\n  zoom: 13,\n  markers: [\n    { lat: 51.505, lng: -0.09 },\n    { lat: 51.51, lng: -0.1 },\n    { lat: 51.51, lng: -0.12 }\n  ]\n});\n<|repo_name|>jameskyle/ember-cli-leaflet<|file_sep|>/tests/dummy/app/templates/components/leaflet-map-with-geolocation.hbs\n{{#leaflet-map lat=lat lng=lng zoom=zoom}}\n  {{#leaflet-tile-layer url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\" attribution=\"&copy; <a href='http://osm.org/copyright'>OpenStreetMap</a> contributors\"}}\n  {{/leaflet-tile-layer}}\n\n  {{#leaflet-marker lat=lat lng=lng}}\n    {{#leaflet-popup}}\n      <h1>Hello World!</h1>\n    {{/leaflet-popup}}\n  {{/leaflet-marker}}\n{{/leaflet-map}}\n<|file_sep|>import Ember from 'ember';\nimport { moduleForComponent, test } from 'ember-qunit';\nimport hbs from 'htmlbars-inline-precompile';\n\nmoduleForComponent('leaflet-map', 'Integration | Component | leaflet map', {\n  integration: true\n});\n\ntest('it renders', function(assert) {\n  this.render(hbs`{{leaflet-map}}`);\n\n  assert.equal(this.$().text().trim(), '');\n});\n\ntest('it renders a map', function(assert) {\n  this.render(hbs`{{leaflet-map}}`);\n\n  assert.ok(this.$('.leaflet-container').length, 'has a leaflet container');\n});\n\ntest('it renders a map with a tile layer', function(assert) {\n  this.render(hbs`\n    {{leaflet-map}}\n      {{#leaflet-tile-layer url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\" attribution=\"&copy; <a href='http://osm.org/copyright'>OpenStreetMap</a> contributors\"}}\n      {{/leaflet-tile-layer}}\n    {{/leaflet-map}}\n  `);\n\n  assert.ok(this.$('.leaflet-tile').length, 'has a tile layer');\n});\n\ntest('it renders a map with a marker', function(assert) {\n  this.render(hbs`\n    {{leaflet-map}}\n      {{#leaflet-marker lat=51.505 lng=-0.09}}\n        {{#leaflet-popup}}\n          <h1>Hello World!</h1>\n        {{/leaflet-popup}}\n      {{/leaflet-marker}}\n    {{/leaflet-map}}\n  `);\n\n  assert.ok(this.$('.leaflet-marker').length, 'has a marker');\n});\n\ntest('it renders a map with a popup', function(assert) {\n  this.render(hbs`\n    {{leaflet-map}}\n      {{#leaflet-marker lat=51.505 lng=-0.09}}\n        {{#leaflet-popup}}\n          <h1>Hello World!</h1>\n        {{/leaflet-popup}}\n      {{/leaflet-marker}}\n    {{/leaflet-map}}\n  `);\n\n  assert.ok(this.$('.leaflet-popup').length, 'has a popup');\n});\n\ntest('it renders a map with a popup that is open', function(assert) {\n  this.render(hbs`\n    {{leaflet-map}}\n      {{#leaflet-marker lat=51.505 lng=-0.09}}\n        {{#leaflet-popup open=true}}\n          <h1>Hello World!</h1>\n        {{/leaflet-popup}}\n      {{/leaflet-marker}}\n    {{/leaflet-map}}\n  `);\n\n  assert.ok(this.$('.leaflet-popup').hasClass('leaflet-popup-open'), 'has an open popup');\n});\n\ntest('it renders a map with a popup that is open and has a close button', function(assert) {\n  this.render(hbs`\n    {{leaflet-map}}\n      {{#leaflet-marker lat=51.505 lng=-0.09}}\n        {{#leaflet-popup closeButton=true open=true}}\n          <h1>Hello World!</h1>\n        {{/leaflet-popup}}\n      {{/leaflet-marker}}\n    {{/leaflet-map}}\n  `);\n\n  assert.ok(this.$('.leaflet-popup-close-button').length, 'has a close button');\n});\n\ntest('it renders a map with a popup that has a custom close button', function(assert) {\n  this.render(hbs`\n    {{leaflet-map}}\n      {{#leaflet-marker lat=51.505 lng=-0.09}}\n        {{#leaflet-popup closeButton=(component \"my-close-button\") open=true}}\n          <h1>Hello World!</h1>\n        {{/leaflet-popup}}\n      {{/leaflet-marker}}\n    {{/leaflet-map}}\n  `);\n\n  assert.ok(this.$('.my-close-button').length, 'has a custom close button');\n});\n\ntest('it renders a map with a popup that has a custom close button and a close handler', function(assert) {\n  this.render(hbs`\n    {{leaflet-map}}\n      {{#leaflet-marker lat=51.505 lng=-0.09}}\n        {{#leaflet-popup closeButton=(component \"my-close-button\" close=(action \"close\")) open=true}}\n          <h1>Hello World!</h1>\n        {{/leaflet-popup}}\n      {{/leaflet-marker}}\n    {{/leaflet-map}}\n  `);\n\n  this.$('.my-close-button').click();\n\n  assert.ok(this.get('closeCalled'), 'called the close handler');\n});\n\ntest('it renders a map with a popup that has a custom close button and a close handler that is passed the popup', function(assert) {\n  this.render(hbs`\n    {{leaflet-map}}\n      {{#leaflet-marker lat=51.505 lng=-0.09}}\n        {{#leaflet-popup closeButton=(component \"my-close-button\" close=(action \"close\")) open=true}}\n          <h1>Hello World!</h1>\n        {{/leaflet-popup}}\n      {{/leaflet-marker}}\n    {{/leaflet-map}}\n  `);\n\n  this.$('.my-close-button').click();\n\n  assert.equal(this.get('popup'), this.$('.leaflet-popup').get(0), 'passed the popup to the close handler');\n});\n\ntest('it renders a map with a popup that has a custom close button and a close handler that is passed the popup and the marker', function(assert) {\n  this.render(hbs`\n    {{leaflet-map}}\n      {{#leaflet-marker lat=51.505 lng=-0.09}}\n        {{#leaflet-popup closeButton=(component \"my-close-button\" close=(action \"close\")) open=true}}\n          <h1>Hello World!</h1>\n        {{/leaflet-popup}}\n      {{/leaflet-marker}}\n    {{/leaflet-map}}\n  `);\n\n  this.$('.my-close-button').click();\n\n  assert.equal(this.get('marker'), this.$('.leaflet-marker').get(0), 'passed the marker to the close handler');\n});\n\ntest('it renders a map with a popup that has a custom close button and a close handler that is passed the popup and the marker and the map', function(assert) {\n  this.render(hbs`\n    {{leaflet-map}}\n      {{#leaflet-marker lat=51.505 lng=-0.09}}\n        {{#leaflet-popup closeButton=(component \"my-close-button\" close=(action \"close\")) open=true}}\n          <h1>Hello World!</h1>\n        {{/leaflet-popup}}\n      {{/leaflet-marker}}\n    {{/leaflet-map}}\n  `);\n\n  this.$('.my-close-button').click();\n\n  assert.equal(this.get('map'), this.$('.leaflet-container').get(0), 'passed the map to the close handler');\n});\n\ntest('it renders a map with a popup that has a custom close button and a close handler that is passed the popup and the marker and the map and the latlng', function(assert) {\n  this.render(hbs`\n    {{leaflet-map}}\n      {{#leaflet-marker lat=51.505 lng=-0.09}}\n        {{#leaflet-popup closeButton=(component \"my-close-button\" close=(action \"close\")) open=true}}\n          <h1>Hello World!</h1>\n        {{/leaflet-popup}}\n      {{/leaflet-marker}}\n    {{/leaflet-map}}\n  `);\n\n  this.$('.my-close-button').click();\n\n  assert.equal(this.get('latlng'), this.$('.leaflet-popup').get(0).getLatLng(), 'passed the latlng to the close handler');\n});\n\ntest('it renders a map with a popup that has a custom close button and a close handler that is passed the popup and the marker and the map and the latlng and the event', function(assert) {\n  this.render(hbs`\n    {{leaflet-map}}\n      {{#leaflet-marker lat=51.505 lng=-0.09}}\n        {{#leaflet-popup closeButton=(component \"my-close-button\" close=(action \"close\")) open=true}}\n          <h1>Hello World!</h1>\n        {{/leaflet-popup}}\n      {{/leaflet-marker}}\n    {{/leaflet-map}}\n  `);\n\n  this.$('.my-close-button').click();\n\n  assert.equal(this.get('event'), this.$('.my-close-button').get(0).clickEvent, 'passed the event to the close handler');\n});\n\ntest('it renders a map with a popup that has a custom close button and a close handler that is passed the popup and the marker and the map and the latlng and the event and the context', function(assert) {\n  this.render(hbs`\n    {{leaflet-map}}\n      {{#leaflet-marker lat=51.505 lng=-0.09}}\n        {{#leaflet-popup closeButton=(component \"my-close-button\" close=(action \"close\" this)) open=true}}\n          <h1>Hello World!</h1>\n        {{/leaflet-popup}}\n      {{/leaflet-marker}}\n    {{/leaflet-map}}\n  `);\n\n  this.$('.my-close-button').click();\n\n  assert.equal(this.get('context'), this, 'passed the context to the close handler');\n});\n\ntest('it renders a map with a popup that has a custom close button and a close handler that is passed the popup and the marker and the map and the latlng and the event and the context and the options', function(assert) {\n  this.render(hbs`\n    {{leaflet-map}}\n      {{#leaflet-marker lat=51.505 lng=-0.09}}\n        {{#leaflet-popup closeButton=(component \"my-close-button\" close=(action \"close\" this options)) open=true}}\n          <h1>Hello World!</h1>\n        {{/leaflet-popup}}\n      {{/leaflet-marker}}\n    {{/leaflet-map}}\n  `);\n\n  this.$('.my-close-button').click();\n\n  assert.equal(this.get('options'), this.$('.leaflet-popup').get(0).options, 'passed the options to the close handler');\n});\n\ntest('it renders a map with a popup that has a custom close button and a close handler that is passed the popup and the marker and the map and the latlng and the event and the context and the options and the args', function(assert) {\n  this", "input_token_count": 5426, "output_token_count": 4096, "latency": 490.38082003593445}
{"id": "multiple_191", "result": "<TOOLCALL>\n```json\n[{\"function\":\"book_hotel\",\"parameters\":{\"hotel_name\":\"Hotel Paradise\",\"location\":\"Las Vegas\",\"room_type\":\"luxury\",\"start_date\":\"05-12-2022\",\"stay_duration\":3,\"view\":\"city\"}}]\n```</TOOLCALL><|file_sep|>import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { User } from '../user.model';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  email: string;\n  password: string;\n  errorMessage: string;\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogin() {\n    this.authService.login(this.email, this.password).subscribe(\n      (user: User) => {\n        this.authService.setUserData(user);\n        this.router.navigate(['/']);\n      },\n      (error) => {\n        this.errorMessage = error.error.message;\n      }\n    );\n  }\n}\n<|file_sep|>import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { User } from '../user.model';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  email: string;\n  password: string;\n  confirmPassword: string;\n  errorMessage: string;\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onRegister() {\n    if (this.password !== this.confirmPassword) {\n      this.errorMessage = 'Passwords do not match';\n      return;\n    }\n    this.authService.register(this.email, this.password).subscribe(\n      (user: User) => {\n        this.authService.setUserData(user);\n        this.router.navigate(['/']);\n      },\n      (error) => {\n        this.errorMessage = error.error.message;\n      }\n    );\n  }\n}\n<|file_sep|>import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { User } from '../user.model';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  user: User;\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.authService.userData.subscribe(\n      (user: User) => {\n        this.user = user;\n      }\n    );\n  }\n\n  onLogout() {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n}\n<|file_sep|>import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { User } from '../user.model';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: User;\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.authService.userData.subscribe(\n      (user: User) => {\n        this.user = user;\n      }\n    );\n  }\n\n  onLogout() {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n}\n<|file_sep|>import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from './user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private userData: BehaviorSubject<User>;\n  constructor(private http: HttpClient) {\n    this.userData = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('user')));\n  }\n\n  get userData(): Observable<User> {\n    return this.userData.asObservable();\n  }\n\n  register(email: string, password: string): Observable<User> {\n    return this.http.post<User>('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCZ9Q7Q7q1q7Z1Q1Q1Q1Q1Q1Q1Q1Q1Q1Q', {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    }).pipe(\n      map((user: User) => {\n        this.setUserData(user);\n        return user;\n      })\n    );\n  }\n\n  login(email: string, password: string): Observable<User> {\n    return this.http.post<User>('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCZ9Q7Q7q1q7Z1Q1Q1Q1Q1Q1Q1Q1Q1Q1Q', {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    }).pipe(\n      map((user: User) => {\n        this.setUserData(user);\n        return user;\n      })\n    );\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n    this.userData.next(null);\n  }\n\n  setUserData(user: User) {\n    localStorage.setItem('user', JSON.stringify(user));\n    this.userData.next(user);\n  }\n}\n<|repo_name|>mohamed-ahmed-elsayed/angulartask<|file_sep|>/src/app/app.module.ts\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { FormsModule } from '@angular/forms';\nimport { AuthGuard } from './auth.guard';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { HomeComponent } from './home/home.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    NotFoundComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n<|file_sep|>import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogout() {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n}\n<|file_sep|>import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './auth.guard';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { RegisterComponent } from './register/register.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent, canActivate: [AuthGuard] },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] },\n  { path: '**', component: NotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n<|repo_name|>jamesmccaffrey/CS-3500<|file_sep|>/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project 2/Project", "input_token_count": 6177, "output_token_count": 4096, "latency": 489.7996199131012}

{"accuracy": 0.6333333333333333, "correct_count": 19, "total_count": 30}
{"id": "simple_25", "model_name": "meta-llama_llama-4-maverick-17b-128e-instruct-fp8-novita", "test_category": "simple", "valid": false, "error": ["Incorrect type for parameter 'height'. Expected type integer, got str. Parameter value: '150'."], "error_type": "type_error:simple", "prompt": {"id": "simple_25", "question": [[{"role": "user", "content": "Calculate the final velocity of an object falling from a 150 meter building, assuming initial velocity is zero."}]], "function": [{"name": "calculate_final_velocity", "description": "Calculate the final velocity of a free falling object given the height it's dropped from, the initial velocity and acceleration due to gravity. Ignore air resistance.", "parameters": {"type": "dict", "properties": {"height": {"type": "integer", "description": "The height the object is dropped from, in meters."}, "initial_velocity": {"type": "integer", "description": "The initial velocity of the object in m/s. Default is zero."}, "gravity": {"type": "float", "description": "Acceleration due to gravity. Default value is 9.81 m/s^2, earth's gravity."}}, "required": ["height"]}}]}, "model_result_raw": "<TOOLCALL>\n[{\"function\":\"calculate_final_velocity\",\"parameters\":{\"height\":\"150\"}}]\n</TOOLCALL>", "model_result_decoded": [{"calculate_final_velocity": {"height": "150"}}], "possible_answer": [{"calculate_final_velocity": {"height": [150], "initial_velocity": [0, ""], "gravity": [9.81, ""]}}]}
{"id": "simple_58", "model_name": "meta-llama_llama-4-maverick-17b-128e-instruct-fp8-novita", "test_category": "simple", "valid": false, "error": ["Incorrect type for parameter 'specific_function'. Expected type boolean, got str. Parameter value: 'true'."], "error_type": "type_error:simple", "prompt": {"id": "simple_58", "question": [[{"role": "user", "content": "What is the function of ATP synthase in mitochondria?"}]], "function": [{"name": "cell_biology.function_lookup", "description": "Look up the function of a given molecule in a specified organelle.", "parameters": {"type": "dict", "properties": {"molecule": {"type": "string", "description": "The molecule of interest."}, "organelle": {"type": "string", "description": "The organelle of interest."}, "specific_function": {"type": "boolean", "description": "If set to true, a specific function of the molecule within the organelle will be provided, if such information exists."}}, "required": ["molecule", "organelle", "specific_function"]}}]}, "model_result_raw": "<TOOLCALL>\n[{\"function\":\"cell_biology.function_lookup\",\"parameters\":{\"molecule\":\"ATP synthase\",\"organelle\":\"mitochondria\",\"specific_function\":\"true\"}}]\n</TOOLCALL>", "model_result_decoded": [{"cell_biology.function_lookup": {"molecule": "ATP synthase", "organelle": "mitochondria", "specific_function": "true"}}], "possible_answer": [{"cell_biology.function_lookup": {"molecule": ["ATP synthase"], "organelle": ["mitochondria"], "specific_function": [true]}}]}
{"id": "simple_96", "model_name": "meta-llama_llama-4-maverick-17b-128e-instruct-fp8-novita", "test_category": "simple", "valid": false, "error": ["Wrong number of functions."], "error_type": "simple_function_checker:wrong_count", "prompt": {"id": "simple_96", "question": [[{"role": "user", "content": "Find records in database in user table where age is greater than 25 and job is 'engineer'."}]], "function": [{"name": "database.query", "description": "Query the database based on certain conditions.", "parameters": {"type": "dict", "properties": {"table": {"type": "string", "description": "Name of the table to query."}, "conditions": {"type": "array", "items": {"type": "dict", "properties": {"field": {"type": "string", "description": "The field to apply the condition."}, "operation": {"type": "string", "description": "The operation to be performed.", "enum": ["<", ">", "=", ">=", "<="]}, "value": {"type": "string", "description": "The value to be compared."}}, "required": ["field", "operation", "value"]}, "description": "Conditions for the query."}}, "required": ["table", "conditions"]}}]}, "model_result_raw": "<TOOLCALL>\n[{\"function\":\"database.query\",\"parameters\":{\"table\":\"user\",\"conditions\":[{\"field\":\"age\",\"operator\":\">\",\"value\":25},{\"field\":\"job\",\"operator\":\"=\",\"value\":\"engineer\"}]}}]\n</TOOLCALL>", "model_result_decoded": [], "possible_answer": [{"database.query": {"table": ["user"], "conditions": [[{"field": ["age"], "operation": [">"], "value": ["25"]}, {"field": ["job"], "operation": ["="], "value": ["engineer"]}]]}}]}
{"id": "simple_105", "model_name": "meta-llama_llama-4-maverick-17b-128e-instruct-fp8-novita", "test_category": "simple", "valid": false, "error": ["Incorrect type for parameter 'base'. Expected type integer, got str. Parameter value: '3'."], "error_type": "type_error:simple", "prompt": {"id": "simple_105", "question": [[{"role": "user", "content": "Calculate the power of 3 raised to the power 4."}]], "function": [{"name": "math.power", "description": "Calculate the power of one number raised to another.", "parameters": {"type": "dict", "properties": {"base": {"type": "integer", "description": "The base number."}, "exponent": {"type": "integer", "description": "The exponent."}, "mod": {"type": "integer", "description": "The modulus. Default is 1. Calculates pow(base, exponent) % mod when provided."}}, "required": ["base", "exponent"]}}]}, "model_result_raw": "<TOOLCALL>\n[{\"function\":\"math.power\",\"parameters\":{\"base\":\"3\",\"exponent\":\"4\"}}]\n</TOOLCALL>", "model_result_decoded": [{"math.power": {"base": "3", "exponent": "4"}}], "possible_answer": [{"math.power": {"base": [3], "exponent": [4], "mod": ["", 1]}}]}
{"id": "simple_113", "model_name": "meta-llama_llama-4-maverick-17b-128e-instruct-fp8-novita", "test_category": "simple", "valid": false, "error": ["Incorrect type for parameter 'desired_number'. Expected type integer, got str. Parameter value: '6'."], "error_type": "type_error:simple", "prompt": {"id": "simple_113", "question": [[{"role": "user", "content": "What's the probability of rolling a six on a six-sided die twice in a row?"}]], "function": [{"name": "probability.dice_roll", "description": "Calculate the probability of rolling a certain number on a six-sided die a certain number of times in a row.", "parameters": {"type": "dict", "properties": {"desired_number": {"type": "integer", "description": "The number you want to roll."}, "number_of_rolls": {"type": "integer", "description": "How many times you want to roll that number in a row."}, "die_sides": {"type": "integer", "description": "The number of sides on the die (optional; default is 6)."}}, "required": ["desired_number", "number_of_rolls"]}}]}, "model_result_raw": "<TOOLCALL>\n[{\"function\":\"probability.dice_roll\",\"parameters\":{\"desired_number\":\"6\",\"number_of_rolls\":\"2\"}}]\n</TOOLCALL>", "model_result_decoded": [{"probability.dice_roll": {"desired_number": "6", "number_of_rolls": "2"}}], "possible_answer": [{"probability.dice_roll": {"desired_number": [6], "number_of_rolls": [2], "die_sides": [6, ""]}}]}
{"id": "simple_134", "model_name": "meta-llama_llama-4-maverick-17b-128e-instruct-fp8-novita", "test_category": "simple", "valid": false, "error": ["Incorrect type for parameter 'investment_amount'. Expected type integer, got str. Parameter value: '5000'."], "error_type": "type_error:simple", "prompt": {"id": "simple_134", "question": [[{"role": "user", "content": "Predict the total expected profit of stocks XYZ in 5 years given I have invested $5000 and annual return rate is 7%."}]], "function": [{"name": "investment.predictProfit", "description": "Predict the profit for given investment after specified number of years.", "parameters": {"type": "dict", "properties": {"investment_amount": {"type": "integer", "description": "The amount invested in dollars."}, "annual_return": {"type": "float", "description": "The annual return rate of the investment."}, "years": {"type": "integer", "description": "The time period in years for which the investment is made."}}, "required": ["investment_amount", "annual_return", "years"]}}]}, "model_result_raw": "<TOOLCALL>\n[{\"function\":\"investment.predictProfit\",\"parameters\":{\"investment_amount\":\"5000\",\"annual_return\":\"0.07\",\"years\":\"5\"}}]\n</TOOLCALL>", "model_result_decoded": [{"investment.predictProfit": {"investment_amount": "5000", "annual_return": "0.07", "years": "5"}}], "possible_answer": [{"investment.predictProfit": {"investment_amount": [5000], "annual_return": [0.07], "years": [5]}}]}
{"id": "simple_155", "model_name": "meta-llama_llama-4-maverick-17b-128e-instruct-fp8-novita", "test_category": "simple", "valid": false, "error": ["Incorrect type for parameter 'initial_investment'. Expected type integer, got str. Parameter value: '1000'."], "error_type": "type_error:simple", "prompt": {"id": "simple_155", "question": [[{"role": "user", "content": "Calculate the future value of my investment of $1000 with an annual interest rate of 5% over 2 years."}]], "function": [{"name": "calculate_future_value", "description": "Calculate the future value of an investment given the initial amount, interest rate, and investment duration.", "parameters": {"type": "dict", "properties": {"initial_investment": {"type": "integer", "description": "The initial investment amount."}, "interest_rate": {"type": "float", "description": "The annual interest rate in decimal form."}, "duration": {"type": "integer", "description": "The investment duration in years."}, "compounded": {"type": "integer", "description": "The number of times the interest is compounded per year. Default is 1 (annual compounding)."}}, "required": ["initial_investment", "interest_rate", "duration"]}}]}, "model_result_raw": "<TOOLCALL>\n[{\"function\": \"calculate_future_value\", \"parameters\": {\"initial_investment\": \"1000\", \"interest_rate\": \"0.05\", \"duration\": \"2\"}}]\n</TOOLCALL>", "model_result_decoded": [{"calculate_future_value": {"initial_investment": "1000", "interest_rate": "0.05", "duration": "2"}}], "possible_answer": [{"calculate_future_value": {"initial_investment": [1000], "interest_rate": [0.05], "duration": [2], "compounded": ["", 1]}}]}
{"id": "simple_181", "model_name": "meta-llama_llama-4-maverick-17b-128e-instruct-fp8-novita", "test_category": "simple", "valid": false, "error": ["Incorrect type for parameter 'with_verdict'. Expected type boolean, got str. Parameter value: 'true'."], "error_type": "type_error:simple", "prompt": {"id": "simple_181", "question": [[{"role": "user", "content": "Get details of a lawsuit with case number '123456-ABC' filed in Los Angeles court with verdict"}]], "function": [{"name": "get_lawsuit_details", "description": "Retrieve details of a lawsuit based on its case number and court location.", "parameters": {"type": "dict", "properties": {"case_number": {"type": "string", "description": "Case number of the lawsuit."}, "court_location": {"type": "string", "description": "The location of the court where the lawsuit was filed."}, "with_verdict": {"type": "boolean", "description": "Flag to include verdict details if available. Default is False"}}, "required": ["case_number", "court_location"]}}]}, "model_result_raw": "<TOOLCALL>\n[{\"function\": \"get_lawsuit_details\", \"parameters\": {\"case_number\": \"123456-ABC\", \"court_location\": \"Los Angeles\", \"with_verdict\": \"true\"}}]\n</TOOLCALL>", "model_result_decoded": [{"get_lawsuit_details": {"case_number": "123456-ABC", "court_location": "Los Angeles", "with_verdict": "true"}}], "possible_answer": [{"get_lawsuit_details": {"case_number": ["123456-ABC"], "court_location": ["Los Angeles"], "with_verdict": [true]}}]}
{"id": "simple_213", "model_name": "meta-llama_llama-4-maverick-17b-128e-instruct-fp8-novita", "test_category": "simple", "valid": false, "error": ["Incorrect type for parameter 'direct_flight'. Expected type boolean, got str. Parameter value: 'true'."], "error_type": "type_error:simple", "prompt": {"id": "simple_213", "question": [[{"role": "user", "content": "Book a direct flight from San Francisco to London for 2022-04-27 afternoon"}]], "function": [{"name": "flight.book", "description": "Book a direct flight for a specific date and time from departure location to destination location.", "parameters": {"type": "dict", "properties": {"departure_location": {"type": "string", "description": "The location you are departing from."}, "destination_location": {"type": "string", "description": "The location you are flying to."}, "date": {"type": "string", "description": "The date of the flight. Accepts standard date format e.g., 2022-04-28."}, "time": {"type": "string", "description": "Preferred time of flight. Default is 'morning'."}, "direct_flight": {"type": "boolean", "description": "If set to true, only direct flights will be searched. Default is false."}}, "required": ["departure_location", "destination_location", "date"]}}]}, "model_result_raw": "<TOOLCALL>\n[{\"function\":\"flight.book\",\"parameters\":{\"departure_location\":\"San Francisco\",\"destination_location\":\"London\",\"date\":\"2022-04-27\",\"time\":\"afternoon\",\"direct_flight\":\"true\"}}]\n</TOOLCALL>", "model_result_decoded": [{"flight.book": {"departure_location": "San Francisco", "destination_location": "London", "date": "2022-04-27", "time": "afternoon", "direct_flight": "true"}}], "possible_answer": [{"flight.book": {"departure_location": ["San Francisco", "SF"], "destination_location": ["London"], "date": ["2022-04-27", "04/27/2022", "Apr 27, 2022"], "time": ["afternoon", ""], "direct_flight": [true]}}]}
{"id": "simple_360", "model_name": "meta-llama_llama-4-maverick-17b-128e-instruct-fp8-novita", "test_category": "simple", "valid": false, "error": ["Incorrect type for parameter 'maxCalories'. Expected type integer, got str. Parameter value: '500'."], "error_type": "type_error:simple", "prompt": {"id": "simple_360", "question": [[{"role": "user", "content": "Find a recipe for pasta carbonara which contains only less than 500 calories."}]], "function": [{"name": "find_recipe", "description": "Locate a recipe based on name and its calorie content", "parameters": {"type": "dict", "properties": {"recipeName": {"type": "string", "description": "The recipe's name."}, "maxCalories": {"type": "integer", "description": "The maximum calorie content of the recipe.", "default": 1000}}, "required": ["recipeName"]}}]}, "model_result_raw": "<TOOLCALL>\n[{\"function\":\"find_recipe\",\"parameters\":{\"recipeName\":\"pasta carbonara\",\"maxCalories\":\"500\"}}]\n</TOOLCALL>", "model_result_decoded": [{"find_recipe": {"recipeName": "pasta carbonara", "maxCalories": "500"}}], "possible_answer": [{"find_recipe": {"recipeName": ["pasta carbonara"], "maxCalories": [500]}}]}
{"id": "simple_390", "model_name": "meta-llama_llama-4-maverick-17b-128e-instruct-fp8-novita", "test_category": "simple", "valid": false, "error": ["Incorrect type for parameter 'amount'. Expected type integer, got str. Parameter value: '150'."], "error_type": "type_error:simple", "prompt": {"id": "simple_390", "question": [[{"role": "user", "content": "Convert 150 Euros to Canadian dollars."}]], "function": [{"name": "currency_conversion.convert", "description": "Convert a value from one currency to another.", "parameters": {"type": "dict", "properties": {"amount": {"type": "integer", "description": "The amount to be converted."}, "from_currency": {"type": "string", "description": "The currency to convert from."}, "to_currency": {"type": "string", "description": "The currency to convert to."}}, "required": ["amount", "from_currency", "to_currency"]}}]}, "model_result_raw": "<TOOLCALL>[{\"function\":\"currency_conversion.convert\",\"parameters\":{\"amount\":\"150\",\"from_currency\":\"EUR\",\"to_currency\":\"CAD\"}}]</TOOLCALL>", "model_result_decoded": [{"currency_conversion.convert": {"amount": "150", "from_currency": "EUR", "to_currency": "CAD"}}], "possible_answer": [{"currency_conversion.convert": {"amount": [150], "from_currency": ["EUR", "Euros"], "to_currency": ["CAD", "Canadian dollars"]}}]}
{"id": "simple_19", "result": "<TOOLCALL>\nmath.gcd<function name=\"math.gcd\"><parameters>\n  <param name=\"num1\" type=\"integer\">40</param>\n  <param name=\"num2\" type=\"integer\">50</param>\n</TOOLCALL>", "input_token_count": 451, "output_token_count": 61, "latency": 0.7037417888641357}
{"id": "simple_25", "result": "<function name=\"calculate_final_velocity\">\n  <desc>Calculate the final velocity of a free falling object given the height it's dropped from, the initial velocity and acceleration due to gravity.</desc>\n  <params>\n    <param name=\"height\" type=\"integer\" required=\"true\">\n      <desc>The height the object is dropped from, in meters.</desc>\n    </param>\n    <param name=\"initial_velocity\" type=\"integer\" required=\"false\">\n      <desc>The initial velocity of the object in m/s. Default is zero.</desc>\n    </param>\n    <param name=\"gravity\" type=\"float\" required=\"false\">\n      <desc>Acceleration due to gravity. Default value is 9.81 m/s^2, earth's gravity.</desc>\n    </param>\n  </params>\n</function>", "input_token_count": 552, "output_token_count": 195, "latency": 1.5341134071350098}
{"id": "simple_58", "result": "<function name=\"cell_biology.function_lookup\">\n  <desc>Look up the function of a given molecule in a specified organelle.</desc>\n  <params>\n    <param name=\"molecule\" type=\"string\" required=\"true\">\n      <desc>The molecule of interest.</desc>\n    </param>\n    <param name=\"organelle\" type=\"string\" required=\"true\">\n      <desc>The organelle of interest.</desc>\n    </param>\n    <param name=\"specific_function\" type=\"boolean\" required=\"true\">\n      <desc>If set to true, a specific function of the molecule within the organelle will be provided, if such information exists.</desc>\n    </param>\n  </params>\n</function>\n", "input_token_count": 510, "output_token_count": 171, "latency": 1.4117660522460938}
{"id": "simple_94", "result": "<function name=\"update_user_info\">\n  <param name=\"user_id\" type=\"integer\" required=\"true\">43523</param>\n  <param name=\"update_info\" type=\"dict\" required=\"true\">\n    {'name': 'John Doe', 'email': 'johndoe@email.com'}\n  </param>\n  <param name=\"database\" type=\"string\" required=\"false\">\n    'users'\n  </param>\n</function>", "input_token_count": 516, "output_token_count": 112, "latency": 1.07222318649292}
{"id": "simple_96", "result": "<toolcall>\n  <function name=\"database.query\">\n    <param name=\"table\" type=\"string\" required=\"true\">user</param>\n    <param name=\"conditions\" type=\"array\">\n      <param name=\"age\" type=\"integer\" required=\"true\">25</param>\n      <param name=\"job\" type=\"string\">engineer</param>\n    </param>\n  </function>\n</toolcall>", "input_token_count": 457, "output_token_count": 99, "latency": 0.9568102359771729}
{"id": "simple_105", "result": "<TOOLCALL><math.power>3</math.power><exponent>4</exponent><mod>1></mod></TOOLCALL>", "input_token_count": 494, "output_token_count": 30, "latency": 0.3811609745025635}
{"id": "simple_113", "result": "probability.dice_roll<6><desired_number=\"6\"><param name=\"number_of_rolls\" value=\"2\"/>", "input_token_count": 532, "output_token_count": 29, "latency": 0.35405516624450684}
{"id": "simple_134", "result": "<toolcall>\n  <function name=\"investment.predictProfit\">\n    <param name=\"investment_amount\" type=\"integer\" required=\"true\">5000</param>\n    <param name=\"annual_return\" type=\"float\">0.07</param>\n    <param name=\"years\" type=\"integer\">5</param>\n  </function>\n</toolcall>", "input_token_count": 516, "output_token_count": 88, "latency": 0.8606212139129639}
{"id": "simple_155", "result": "<toolcall>\n  <function name=\"calculate_future_value\">\n    <param name=\"initial_investment\" type=\"integer\">1000</param>\n    <param name=\"interest_rate\" type=\"float\">0.05</param>\n    <param name=\"duration\" type=\"integer\">2</param>\n    <param name=\"compounded\" type=\"integer\">1</param>\n  </function>\n</toolcall>", "input_token_count": 563, "output_token_count": 102, "latency": 0.9619095325469971}
{"id": "simple_165", "result": "<function name=\"civil_cases.retrieve\">\n  <desc>Retrieve civil cases based on given parameters, including year, crime type, and location.</desc>\n  <params>\n    <param name=\"year\" type=\"integer\" required=\"true\">2020</param>\n    <param name=\"crime_type\" type=\"string\" required=\"true\">theft</param>\n    <param name=\"location\" type=\"string\" required=\"true\">Los Angeles, California</param>\n  </params>\n</function>", "input_token_count": 502, "output_token_count": 118, "latency": 1.0446925163269043}
{"id": "simple_168", "result": "<TOOLCALL><function name=\"lawsuit_search\">\n  <param name=\"company\" type=\"string\" required=\"true\">Google</param>\n  <param name=\"start_date\" type=\"string\" required=\"true\">2021-01-01</param>\n  <param name=\"location\" type=\"string\" required=\"true\">California</param>\n  <param name=\"status\" type=\"string\" required=\"false\">ongoing</param>\n</toolcall>", "input_token_count": 571, "output_token_count": 109, "latency": 0.9821116924285889}
{"id": "simple_174", "result": "<TOOLCALL><function name=\"get_top_cases\">\n  <param name=\"field_of_law\" type=\"string\" value=\"constitutional law\"/>\n  <param name=\"top_number\" type=\"integer\" value=\"10\"/>\n  <param name=\"country\" type=\"string\" value=\"China\"/>\n</toolcall>", "input_token_count": 527, "output_token_count": 75, "latency": 0.738210916519165}
{"id": "simple_179", "result": "<TOOLCALL><function name=\"find_latest_court_case\">\n  <param name=\"company1\" type=\"string\" required=\"true\">Apple</param>\n  <param name=\"company2\" type=\"string\" required=\"true\">Samsung</param>\n  <param name=\"country\" type=\"string\" required=\"true\">USA</param>\n</toolcall>", "input_token_count": 496, "output_token_count": 83, "latency": 0.7888221740722656}
{"id": "simple_181", "result": "<toolcall><function name=\"get_lawsuit_details\">\n  <param name=\"case_number\" type=\"string\">123456-ABC</param>\n  <param name=\"court_location\" type=\"string\">Los Angeles</param>\n  <param name=\"with_verdict\" type=\"boolean\">false</param>\n</toolcall>", "input_token_count": 522, "output_token_count": 83, "latency": 0.7857756614685059}
{"id": "simple_208", "result": "<toolcall>\nmap_service.get_directions\n  \"New York\"\n  \"Los Angeles\"\n  \"avoid\"\n  [\"highways\", \"toll roads\"]\n</toolcall>", "input_token_count": 509, "output_token_count": 45, "latency": 0.4792947769165039}
{"id": "simple_213", "result": "<toolcall>\n  <function name=\"flight.book\">\n    <param name=\"departure_location\" type=\"string\" required=\"true\">San Francisco</param>\n    <param name=\"destination_location\" type=\"string\" required=\"true\">London</param>\n    <param name=\"date\" type=\"string\" required=\"true\">2022-04-27</param>\n    <param name=\"time\" type=\"string\" required=\"false\">afternoon</param>\n  </function>\n</toolcall>", "input_token_count": 612, "output_token_count": 120, "latency": 1.009690523147583}
{"id": "simple_226", "result": "<TOOLCALL><function name=\"get_zodiac_compatibility\">\n  <param name=\"sign1\" type=\"string\" required=\"true\">Aries</param>\n  <param name=\"sign2\" type=\"string\" required=\"true\">Gemini</param>\n  <param name=\"scale\" type=\"string\" required=\"false\">percentage</param>\n</TOOLCALL>", "input_token_count": 494, "output_token_count": 84, "latency": 0.7727386951446533}
{"id": "simple_244", "result": "<function name=\"publication_year.find\">\n  <desc>Fetches the year a particular scientific work was published.</desc>\n  <params>\n    <param name=\"author\" type=\"string\" required=\"true\">\n      <desc>Name of the author of the work.</desc>\n    </param>\n    <param name=\"work_title\" type=\"string\" required=\"true\">\n      <desc>Title of the scientific work.</desc>\n    </param>\n    <param name=\"location\" type=\"string\" required=\"false\">\n      <desc>Place of the publication, if known. Default to 'all'.</desc>\n    </param>\n  </params>\n</function>", "input_token_count": 500, "output_token_count": 157, "latency": 1.194014310836792}
{"id": "simple_254", "result": "<TOOLCALL><function name=\"get_religion_history\">\n  <param name=\"religion\" type=\"string\" required=\"true\">Christianity</param>\n  <param name=\"start_year\" type=\"integer\" required=\"true\">300</param>\n  <param name=\"end_year\" type=\"integer\" required=\"true\">400</param>\n  <param name=\"event_type\" type=\"string\" required=\"false\">all</param>\n</toolcall>", "input_token_count": 551, "output_token_count": 110, "latency": 0.9134421348571777}
{"id": "simple_281", "result": "<toolcall><function name=\"get_instrument_info\">\n  <param name=\"name\" type=\"string\" value=\"Violin\"/><param name=\"maker\" type=\"string\" value=\"Stradivarius\"/><param name=\"year\" type=\"integer\" value=\"1721\"/></function>", "input_token_count": 518, "output_token_count": 65, "latency": 0.6172006130218506}
{"id": "simple_284", "result": "<toolcall>concert_info.get</toolcall>\n<toolcall>location</toolcall>\n<toolcall>New York</toolcall>\n<toolcall>next month</toolcall>", "input_token_count": 494, "output_token_count": 46, "latency": 0.4687650203704834}
{"id": "simple_295", "result": "<function name=\"get_song_lyrics\">\n  <toolcall>get_song_lyrics</toolcall><song_title>Bohemian Rhapsody</song_title><artist_name>Queen</artist_name><lang>English</lang></toolcall>\n</function>", "input_token_count": 508, "output_token_count": 62, "latency": 0.5980069637298584}
{"id": "simple_297", "result": "```xml\n<TOOLCALL><function name=\"music.theory.chordProgression\">\n  <desc>Identifies a potential key signature for the given chord progression.</desc>\n  <params>\n    <param name=\"progression\" type=\"array\" required=\"true\">\n      <desc>The chord progression in Roman numerals. Eg: ['I', 'V', 'vi', 'IV'].</desc>\n    </param>\n    <param name=\"returnAllPossibleKeys\" type=\"boolean\" required=\"false\">\n      <desc>Flag indicating if the function should return all possible key signatures that fit the chord progression. If false, the function will return the first valid key it finds. Default is false.</desc>\n    </param>\n    <param name=\"assumeMajor\" type=\"boolean\" required=\"false\">\n      <desc>Assumption if the key signature is Major. If true, the function will assume the key signature to be major and otherwise minor. Default is true.</desc>\n    </param>\n  </params>\n</TOOLCALL>\n```", "input_token_count": 573, "output_token_count": 230, "latency": 1.492253303527832}
{"id": "simple_327", "result": "<toolcall>\n  <function name=\"sports_team.get_schedule\">\n    <param name=\"team_name\" type=\"string\" required=\"true\">Manchester United</param>\n    <param name=\"num_of_games\" type=\"integer\" required=\"true\">6</param>\n    <param name=\"league\" type=\"string\" required=\"true\">Premier League</param>\n    <param name=\"location\" type=\"string\" required=\"false\">false</param>\n  </function>\n</toolcall>", "input_token_count": 587, "output_token_count": 117, "latency": 0.914639949798584}
{"id": "simple_328", "result": "<toolcall>\n  <function name=\"boardgame.get_info\">\n    <param name=\"name\" type=\"string\" required=\"true\">Ticket to Ride</param>\n    <param name=\"parameters\" type=\"array\" required=\"true\">\n      <desc>Game characteristics interested.</desc>\n    </param>\n    <param name=\"language\" type=\"string\" required=\"false\">English</param>\n  </function>\n</toolcall>", "input_token_count": 492, "output_token_count": 102, "latency": 0.8289501667022705}
{"id": "simple_335", "result": "<toolcall>find_card_in_deck><rank=\"Queen\"><suit=\"Hearts\"/></toolcall>", "input_token_count": 532, "output_token_count": 24, "latency": 0.25964903831481934}
{"id": "simple_360", "result": "<TOOLCALL>\n  <function name=\"find_recipe\">\n    <desc>Locate a recipe based on name and its calorie content</desc>\n    <params>\n      <param name=\"recipeName\" type=\"string\" required=\"true\">pasta carbonara</param>\n      <param name=\"maxCalories\" type=\"integer\" required=\"false\">500</param>\n    </params>\n  </function>\n</TOOLCALL>", "input_token_count": 462, "output_token_count": 100, "latency": 0.802527904510498}
{"id": "simple_380", "result": "<toolcall>\n  <function name=\"hotel_booking\">\n    <param name=\"location\" type=\"string\" value=\"Manhattan, New York\"/>\n    <param name=\"room_type\" type=\"string\" value=\"single\"/>\n    <param name=\"duration\" type=\"integer\" value=\"3\"/>\n    <param name=\"start_date\" type=\"string\" value=\"2023-03-10\"/>\n    <param name=\"preferences\" type=\"array\" value=\"[\"\"single\",\"\"deluxe\"],\"\"/>\n  </function>\n</toolcall>", "input_token_count": 619, "output_token_count": 131, "latency": 0.9770205020904541}
{"id": "simple_390", "result": "<toolcall>currency_conversion.convert</toolcall><function name=\"currency_conversion.convert\">\n  <param name=\"amount\" type=\"integer\">150</param>\n  <param name=\"from_currency\" type=\"string\">Euros</param>\n  <param name=\"to_currency\" type=\"string\">Canadian Dollars</param>\n</toolcall>", "input_token_count": 487, "output_token_count": 84, "latency": 0.6898441314697266}
{"id": "simple_393", "result": "convert_currency<function name=\"convert_currency\">\n  <param name=\"base_currency\" type=\"string\" value=\"JPY\"/>\n  <param name=\"target_currency\" type=\"string\" value=\"USD\"/>\n  <param name=\"amount\" type=\"integer\" value=\"20000\"/>\n</function>", "input_token_count": 504, "output_token_count": 72, "latency": 0.6111557483673096}

[
  {
    "id": "simple_0",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the area of a triangle with a base of 10 units and height of 5 units.",
          "transcript": "Um, can you work out the area of a triangle with a ten-unit base, uh, and a five-unit height, right?",
          "audio_path": "BFCL_v3_simple/simple_0_openai.mp3",
          "asr_output_openai": "Um, can you work out the area of a triangle with a ten-unit base and a five-unit height, right?",
          "asr_output_elevenlabs": "Um, can you work out the area of a triangle with a 10 unit base, uh, and a 5 unit height? Right?",
          "asr_output_deepgram": "Can you work out the area of a triangle with a ten unit base, and a five unit height? Right?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_triangle_area",
        "description": "Calculate the area of a triangle given its base and height.",
        "parameters": {
          "type": "dict",
          "properties": {
            "base": {
              "type": "integer",
              "description": "The base of the triangle."
            },
            "height": {
              "type": "integer",
              "description": "The height of the triangle."
            },
            "unit": {
              "type": "string",
              "description": "The unit of measure (defaults to 'units' if not specified)"
            }
          },
          "required": [
            "base",
            "height"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_1",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the factorial of 5 using math functions.",
          "transcript": "Right, can you work out factorial of five for me usin math functions?",
          "audio_path": "BFCL_v3_simple/simple_1_openai.mp3",
          "asr_output_openai": "Right. Can you work out factorial of 5 for me using math functions?",
          "asr_output_elevenlabs": "Right. Can you work out factorial of five for me using math functions?",
          "asr_output_deepgram": "Right. Can you work out factorial of five for me using math functions?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "math.factorial",
        "description": "Calculate the factorial of a given number.",
        "parameters": {
          "type": "dict",
          "properties": {
            "number": {
              "type": "integer",
              "description": "The number for which factorial needs to be calculated."
            }
          },
          "required": [
            "number"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_2",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the hypotenuse of a right triangle given the lengths of the other two sides as 4 and 5.",
          "transcript": "Uh, find hypotenuse of a right triangle with, um, sides of four and five, okay.",
          "audio_path": "BFCL_v3_simple/simple_2_openai.mp3",
          "asr_output_openai": "Find hypotenuse of a right triangle with sides of four and five, okay?",
          "asr_output_elevenlabs": "Uh, find hypotenuse of a right triangle with, um, sides of four and five, okay?",
          "asr_output_deepgram": "Find hypotenuse of a right triangle with, sides of four and five. Okay?",
          "clarifications": {
            "first_side_length": "4",
            "second_side_length": "5"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "math.hypot",
        "description": "Calculate the Euclidean norm, sqrt(sum(squares)), the length of the vector from the origin to point (x, y) which is the hypotenuse of the right triangle.",
        "parameters": {
          "type": "dict",
          "properties": {
            "x": {
              "type": "integer",
              "description": "The x-coordinate value."
            },
            "y": {
              "type": "integer",
              "description": "The y-coordinate value."
            },
            "z": {
              "type": "integer",
              "description": "Optional. The z-coordinate value. Default is 0."
            }
          },
          "required": [
            "x",
            "y"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_3",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the roots of a quadratic equation with coefficients a=1, b=-3, c=2.",
          "transcript": "Hey, um, can you get the roots of this quadratic equation? The coefficients are a equals one, b equals negative three, and c equals two, thanks.",
          "audio_path": "BFCL_v3_simple/simple_3_openai.mp3",
          "asr_output_openai": "Hey, um, can you get the roots of this quadratic equation? The coefficients are a equals 1, b equals negative 3, and c equals 2. Thanks.",
          "asr_output_elevenlabs": "Hey, um, can you get the roots of this quadratic equation? The coefficients are a equals 1, b equals negative 3, and c equals 2. Thanks.",
          "asr_output_deepgram": "Hey, can you get the roots of this quadratic equation? The coefficients are a equals one, b equals negative three, and c equals two. Thanks.",
          "clarifications": {
            "coefficient_a": "1",
            "coefficient_b": "-3",
            "constant_c": "2"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "algebra.quadratic_roots",
        "description": "Find the roots of a quadratic equation ax^2 + bx + c = 0.",
        "parameters": {
          "type": "dict",
          "properties": {
            "a": {
              "type": "integer",
              "description": "Coefficient of x^2."
            },
            "b": {
              "type": "integer",
              "description": "Coefficient of x."
            },
            "c": {
              "type": "integer",
              "description": "Constant term."
            }
          },
          "required": [
            "a",
            "b",
            "c"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_4",
    "question": [
      [
        {
          "role": "user",
          "content": "Solve a quadratic equation where a=2, b=6, and c=5",
          "transcript": "Hey, can you, um, solve a quadratic equation for me? The values are a equals two, b equals, uh, six, and c equals five.",
          "audio_path": "BFCL_v3_simple/simple_4_openai.mp3",
          "asr_output_openai": "Hey, can you, um, solve a quadratic equation for me? The values are a equals 2, b equals 6, and c equals 5.",
          "asr_output_elevenlabs": "Hey, can you, um, solve a quadratic equation for me? The values are a equals two, b equals, uh, six, and c equals five.",
          "asr_output_deepgram": "Hey. Can you, solve a quadratic equation for me? The values are a equals two, b equals, six, and c equals five.",
          "clarifications": {
            "coefficient_a": "2",
            "coefficient_b": "6",
            "constant_c": "5"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "solve_quadratic_equation",
        "description": "Function solves the quadratic equation and returns its roots.",
        "parameters": {
          "type": "dict",
          "properties": {
            "a": {
              "type": "integer",
              "description": "Coefficient of x squared"
            },
            "b": {
              "type": "integer",
              "description": "Coefficient of x"
            },
            "c": {
              "type": "integer",
              "description": "Constant term in the quadratic equation."
            }
          },
          "required": [
            "a",
            "b",
            "c"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_5",
    "question": [
      [
        {
          "role": "user",
          "content": "Find all the roots of a quadratic equation given coefficients a = 3, b = -11, and c = -4.",
          "transcript": "Um, can you solve the roots of this quadratic equation with coefficients a equals three, b equals negative eleven, and c equals negative four?",
          "audio_path": "BFCL_v3_simple/simple_5_openai.mp3",
          "asr_output_openai": "Um, can you solve the roots of this quadratic equation with coefficients a equals 3, b equals negative 11, and c equals negative 4?",
          "asr_output_elevenlabs": "Um, can you solve the roots of this quadratic equation with coefficients a=3, b=-11 and c=-4?",
          "asr_output_deepgram": "Can you solve the roots of this quadratic equation with coefficients a equals three, b equals negative eleven, and c equals negative four?",
          "clarifications": {
            "coefficient_a": "3",
            "coefficient_b": "-11",
            "coefficient_c": "-4"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "solve_quadratic",
        "description": "Solve a quadratic equation given coefficients a, b, and c. If optional 'root_type' is 'real', the function will only return real roots. If not specified, function may return complex roots.",
        "parameters": {
          "type": "dict",
          "properties": {
            "a": {
              "type": "integer",
              "description": "The coefficient of the squared term in the quadratic equation."
            },
            "b": {
              "type": "integer",
              "description": "The coefficient of the linear term in the quadratic equation."
            },
            "c": {
              "type": "integer",
              "description": "The constant term in the quadratic equation."
            },
            "root_type": {
              "type": "string",
              "description": "The type of roots to return: 'real' for real roots, 'all' for both real and complex roots. Default value is 'real'."
            }
          },
          "required": [
            "a",
            "b",
            "c"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_6",
    "question": [
      [
        {
          "role": "user",
          "content": "What are the roots of the quadratic equation where a=2, b=5 and c=3 ?",
          "transcript": "Hey, um, whatre the solutions of the quadratic equation where a equals two, b equals five, and c equals three?",
          "audio_path": "BFCL_v3_simple/simple_6_openai.mp3",
          "asr_output_openai": "Hey, um, what are the solutions of the quadratic equation where a equals 2, b equals 5, and c equals 3?",
          "asr_output_elevenlabs": "Hey, um, what are the solutions of the quadratic equation where a equals 2, b equals 5 and c equals 3?",
          "asr_output_deepgram": "Hey. What are the solutions of the quadratic equation where a equals two, b equals five, and c equals three?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "solve_quadratic",
        "description": "Find the roots of a quadratic equation. Returns both roots.",
        "parameters": {
          "type": "dict",
          "properties": {
            "a": {
              "type": "integer",
              "description": "Coefficient of x\u00b2."
            },
            "b": {
              "type": "integer",
              "description": "Coefficient of x."
            },
            "c": {
              "type": "integer",
              "description": "Constant term."
            }
          },
          "required": [
            "a",
            "b",
            "c"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_7",
    "question": [
      [
        {
          "role": "user",
          "content": "What is the circumference of a circle with a radius of 4 inches?",
          "transcript": "Hey, whats circumference of a circle if its radius is four inches?",
          "audio_path": "BFCL_v3_simple/simple_7_openai.mp3",
          "asr_output_openai": "Hey, what's circumference of a circle if its radius is four inches?",
          "asr_output_elevenlabs": "Hey, what circumference of a circle if its radius is 4 inches?",
          "asr_output_deepgram": "Hey. What circumference of a circle if its radius is four inches?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_circumference",
        "description": "Calculates the circumference of a circle with a given radius.",
        "parameters": {
          "type": "dict",
          "properties": {
            "radius": {
              "type": "integer",
              "description": "The radius of the circle in the unit given."
            },
            "unit": {
              "type": "string",
              "description": "The unit of measurement for the radius. Default is 'cm'."
            }
          },
          "required": [
            "radius"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_8",
    "question": [
      [
        {
          "role": "user",
          "content": "What's the area of a circle with a radius of 10?",
          "transcript": "Hey, can you figure out the area of a circle if the radius is ten, right?",
          "audio_path": "BFCL_v3_simple/simple_8_openai.mp3",
          "asr_output_openai": "Hey, can you figure out the area of a circle if the radius is 10, right?",
          "asr_output_elevenlabs": "Hey! Can you figure out the area of a circle if the radius is 10, right?",
          "asr_output_deepgram": "Hey. Can you figure out the area of a circle if the radius is ten? Right?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "geometry.area_circle",
        "description": "Calculate the area of a circle given the radius.",
        "parameters": {
          "type": "dict",
          "properties": {
            "radius": {
              "type": "integer",
              "description": "The radius of the circle."
            },
            "units": {
              "type": "string",
              "description": "The units in which the radius is measured (defaults to 'meters')."
            }
          },
          "required": [
            "radius"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_9",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the area of a circle with a radius of 5 units.",
          "transcript": "Um, hey, can you find out area of, uh, a circle with a five-unit radius?",
          "audio_path": "BFCL_v3_simple/simple_9_openai.mp3",
          "asr_output_openai": "Um, hey, can you find out area of a circle with a five-unit radius?",
          "asr_output_elevenlabs": "Um, hey! Can you find out area of a, a circle with a 5-unit radius?",
          "asr_output_deepgram": "Hey. Can you find out area of a a circle with a five unit radius?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "geometry.calculate_area_circle",
        "description": "Calculate the area of a circle given its radius.",
        "parameters": {
          "type": "dict",
          "properties": {
            "radius": {
              "type": "integer",
              "description": "The radius of the circle."
            },
            "unit": {
              "type": "string",
              "description": "The measurement unit of the radius (optional parameter, default is 'units')."
            }
          },
          "required": [
            "radius"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_10",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the area of a right-angled triangle given the lengths of its base and height as 6cm and 10cm.",
          "transcript": "Um, can you work out the area of a right triangle with a base of six centimeters and, uh, a height of ten centimeters, yeah?",
          "audio_path": "BFCL_v3_simple/simple_10_openai.mp3",
          "asr_output_openai": "Can you work out the area of a right triangle with a base of six centimeters and a height of ten centimeters?",
          "asr_output_elevenlabs": "Um, can you work out the area of a right triangle with a base of 6 centimeters and, uh, a height of 10 centimeters? Yeah?",
          "asr_output_deepgram": "Can you work out the area of a right triangle with a base of six centimeters and, a height of ten centimeters? Yeah?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_area",
        "description": "Calculate the area of a right-angled triangle given the lengths of its base and height.",
        "parameters": {
          "type": "dict",
          "properties": {
            "base": {
              "type": "integer",
              "description": "The length of the base of the right-angled triangle."
            },
            "height": {
              "type": "integer",
              "description": "The height of the right-angled triangle."
            },
            "unit": {
              "type": "string",
              "description": "The unit of measure used. Defaults to 'cm'."
            }
          },
          "required": [
            "base",
            "height"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_11",
    "question": [
      [
        {
          "role": "user",
          "content": "What is the area of a triangle with base of 10 units and height of 5 units?",
          "transcript": "Hey, um, can you calculate area of a triangle with a ten-unit base and, uh, a five-unit height?",
          "audio_path": "BFCL_v3_simple/simple_11_openai.mp3",
          "asr_output_openai": "Hey, um, can you calculate area of a triangle with a 10-unit base and a 5-unit height?",
          "asr_output_elevenlabs": "Hey, um, can you calculate area of a triangle with a 10-unit base and, uh, a 5-unit height?",
          "asr_output_deepgram": "Hey. Can you calculate area of a triangle with a ten unit base and, a five unit height?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_triangle_area",
        "description": "Calculate the area of a triangle using its base and height.",
        "parameters": {
          "type": "dict",
          "properties": {
            "base": {
              "type": "integer",
              "description": "The length of the base of the triangle."
            },
            "height": {
              "type": "integer",
              "description": "The height of the triangle from the base."
            }
          },
          "required": [
            "base",
            "height"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_12",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the circumference of a circle with radius 3",
          "transcript": "Hey, um, could you find the circumference of a circle with a radius of three?",
          "audio_path": "BFCL_v3_simple/simple_12_openai.mp3",
          "asr_output_openai": "Hey, um, could you find the circumference of a circle with a radius of three?",
          "asr_output_elevenlabs": "Hey, um, could you find the circumference of a circle with a radius of 3?",
          "asr_output_deepgram": "Hey. Could you find the circumference of a circle with a radius of three?",
          "clarifications": {
            "radius_value": "3"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "geometry.circumference",
        "description": "Calculate the circumference of a circle given the radius.",
        "parameters": {
          "type": "dict",
          "properties": {
            "radius": {
              "type": "integer",
              "description": "The radius of the circle."
            },
            "units": {
              "type": "string",
              "description": "Units for the output circumference measurement. Default is 'cm'."
            }
          },
          "required": [
            "radius"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_13",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the area under the curve y=x^2 from x=1 to x=3.",
          "transcript": "Uh, can you get the area under, uh, the curve y equals x squared, from x equals one to three? Thanks.",
          "audio_path": "BFCL_v3_simple/simple_13_openai.mp3",
          "asr_output_openai": "Can you get the area under the curve y = x^2 from x = 1 to 3? Thanks.",
          "asr_output_elevenlabs": "Uh, can you get the area under, uh, the curve y equals x squared from x equals 1 to 3? Thanks.",
          "asr_output_deepgram": "Can you get the area under, the curve y equals x squared from x equals one to three? Thanks.",
          "clarifications": {
            "mathematical_function": "y=x^2",
            "interval_start": "x=1",
            "interval_end": "x=3"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_area_under_curve",
        "description": "Calculate the area under a mathematical function within a given interval.",
        "parameters": {
          "type": "dict",
          "properties": {
            "function": {
              "type": "string",
              "description": "The mathematical function as a string."
            },
            "interval": {
              "type": "array",
              "items": {
                "type": "float"
              },
              "description": "An array that defines the interval to calculate the area under the curve from the start to the end point."
            },
            "method": {
              "type": "string",
              "description": "The numerical method to approximate the area under the curve. The default value is 'trapezoidal'."
            }
          },
          "required": [
            "function",
            "interval"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_14",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the derivative of the function 3x^2 + 2x - 1.",
          "transcript": "Uh, can you get the derivative of, um, three x squared plus two x minus one, please?",
          "audio_path": "BFCL_v3_simple/simple_14_openai.mp3",
          "asr_output_openai": "Can you get the derivative of 3x squared plus 2x minus 1, please?",
          "asr_output_elevenlabs": "Uh, can you get the derivative of, um, three x squared plus two x minus one, please?",
          "asr_output_deepgram": "Can you get the derivative of, three x squared plus two x minus one, please?",
          "clarifications": {
            "polynomial_function": "3x^2 + 2x - 1"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_derivative",
        "description": "Calculate the derivative of a polynomial function.",
        "parameters": {
          "type": "dict",
          "properties": {
            "function": {
              "type": "string",
              "description": "The polynomial function."
            },
            "x_value": {
              "type": "float",
              "description": "The x-value at which the derivative is calculated. Optional, default to 0.00."
            }
          },
          "required": [
            "function"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_15",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the area under the curve from x = -2 to x = 3 for the function y = x^3 using simpson method.",
          "transcript": "Um, can you figure out the area under the curve from x equals negative two to x equals three for the function y equals x cubed, using Simpsons method?",
          "audio_path": "BFCL_v3_simple/simple_15_openai.mp3",
          "asr_output_openai": "Can you figure out the area under the curve from x equals negative two to x equals three for the function y equals x cubed using Simpson's method?",
          "asr_output_elevenlabs": "Um, can you figure out the area under the curve from x equals negative 2 to x equals 3 for the function y equals x cubed using Simpson's method?",
          "asr_output_deepgram": "Can you figure out the area under the curve from x equals negative two to x equals three for the function y equals x cubed using Simpson's method?",
          "clarifications": {
            "function_to_integrate": "x^3",
            "start_x_value": "-2",
            "end_x_value": "3",
            "integration_method": "simpson"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "integrate",
        "description": "Calculate the area under a curve for a specified function between two x values.",
        "parameters": {
          "type": "dict",
          "properties": {
            "function": {
              "type": "string",
              "description": "The function to integrate, represented as a string. For example, 'x^3'"
            },
            "start_x": {
              "type": "integer",
              "description": "The starting x-value to integrate over."
            },
            "end_x": {
              "type": "integer",
              "description": "The ending x-value to integrate over."
            },
            "method": {
              "type": "string",
              "description": "The method of numerical integration to use. Choices are 'trapezoid' or 'simpson'. Default is 'trapezoid'."
            }
          },
          "required": [
            "function",
            "start_x",
            "end_x"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_16",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the derivative of the function 2x^2 at x = 1.",
          "transcript": "Uh, find the derivative of two x squared when x is one, okay?",
          "audio_path": "BFCL_v3_simple/simple_16_openai.mp3",
          "asr_output_openai": "Find the derivative of 2x squared when x is 1?",
          "asr_output_elevenlabs": "Uh, find the derivative of 2x squared when x is 1. Okay.",
          "asr_output_deepgram": "Find the derivative of two x squared when x is one. Okay?",
          "clarifications": {
            "function_expression": "2x^2",
            "calculation_value": "1"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculus.derivative",
        "description": "Compute the derivative of a function at a specific value.",
        "parameters": {
          "type": "dict",
          "properties": {
            "function": {
              "type": "string",
              "description": "The function to calculate the derivative of."
            },
            "value": {
              "type": "integer",
              "description": "The value where the derivative needs to be calculated at."
            },
            "function_variable": {
              "type": "string",
              "description": "The variable present in the function, for instance x or y, etc. Default is 'x'."
            }
          },
          "required": [
            "function",
            "value"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_17",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the prime factors of 450",
          "transcript": "Sure, could you snag the prime factors of four fifty?",
          "audio_path": "BFCL_v3_simple/simple_17_openai.mp3",
          "asr_output_openai": "Sure, could you snag the prime factors of 450?",
          "asr_output_elevenlabs": "Sure. Could you snag the prime factors of 450?",
          "asr_output_deepgram": "Sure. Could you snag the prime factors of four fifty?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "get_prime_factors",
        "description": "Function to retrieve prime factors of a number.",
        "parameters": {
          "type": "dict",
          "properties": {
            "number": {
              "type": "integer",
              "description": "Number for which prime factors need to be calculated"
            },
            "formatted": {
              "type": "boolean",
              "description": "Return formatted string if true, array if false. Default is true."
            }
          },
          "required": [
            "number",
            "formatted"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_18",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the prime factors of the number 123456.",
          "transcript": "Could you, oh, get the prime factors of one two three four five six?",
          "audio_path": "BFCL_v3_simple/simple_18_openai.mp3",
          "asr_output_openai": "Could you... oh, get the prime factors of one, two, three, four, five, six?",
          "asr_output_elevenlabs": "Could you, oh, get the prime factors of 1, 2, 3, 4, 5, 6?",
          "asr_output_deepgram": "Could you, oh, get the prime factors of one, two, three, four, five, six?",
          "clarifications": {
            "number_to_factor": "123456"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "number_analysis.prime_factors",
        "description": "Compute the prime factors of a number.",
        "parameters": {
          "type": "dict",
          "properties": {
            "number": {
              "type": "integer",
              "description": "The number to be factored."
            }
          },
          "required": [
            "number"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_19",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the greatest common divisor of two numbers: 40 and 50",
          "transcript": "Hey, um, whats the greatest common divisor of, uh, forty and fifty?",
          "audio_path": "BFCL_v3_simple/simple_19_openai.mp3",
          "asr_output_openai": "Hey, um, what's the greatest common divisor of 40 and 50?",
          "asr_output_elevenlabs": "Hey, um, what's the greatest common divisor of, uh, 40 and 50?",
          "asr_output_deepgram": "Hey. What's the greatest common divisor of, forty and fifty?",
          "clarifications": {
            "first_number": "40",
            "second_number": "50"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "math.gcd",
        "description": "Compute the greatest common divisor of two numbers",
        "parameters": {
          "type": "dict",
          "properties": {
            "num1": {
              "type": "integer",
              "description": "The first number."
            },
            "num2": {
              "type": "integer",
              "description": "The second number."
            }
          },
          "required": [
            "num1",
            "num2"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_20",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the highest common factor of 36 and 24.",
          "transcript": "Um, can you get the highest common factor of thirty-six and, uh, twenty-four?",
          "audio_path": "BFCL_v3_simple/simple_20_openai.mp3",
          "asr_output_openai": "Um, can you get the highest common factor of 36 and 24?",
          "asr_output_elevenlabs": "Um, can you get the highest common factor of 36 and, uh, 24?",
          "asr_output_deepgram": "Can you get the highest common factor of thirty six and, twenty four?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "math.hcf",
        "description": "Calculate the highest common factor of two numbers.",
        "parameters": {
          "type": "dict",
          "properties": {
            "number1": {
              "type": "integer",
              "description": "First number."
            },
            "number2": {
              "type": "integer",
              "description": "Second number."
            }
          },
          "required": [
            "number1",
            "number2"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_21",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the Greatest Common Divisor (GCD) of two numbers, say 36 and 48.",
          "transcript": "Right, whats the GCD of thirty-six and forty-eight?",
          "audio_path": "BFCL_v3_simple/simple_21_openai.mp3",
          "asr_output_openai": "Right. What's the GCD of 36 and 48?",
          "asr_output_elevenlabs": "Write: What's the GCD of 36 and 48?",
          "asr_output_deepgram": "Right. What's the GCD of thirty six and forty eight?",
          "clarifications": {
            "first_number": "36",
            "second_number": "48"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "number_theory.gcd",
        "description": "Compute the greatest common divisor of two given integers.",
        "parameters": {
          "type": "dict",
          "properties": {
            "number1": {
              "type": "integer",
              "description": "The first integer."
            },
            "number2": {
              "type": "integer",
              "description": "The second integer."
            }
          },
          "required": [
            "number1",
            "number2"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_22",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the greatest common divisor of two given numbers, for example 12 and 15.",
          "transcript": "Whats the greatest, uh, common divisor of twelve and fifteen?",
          "audio_path": "BFCL_v3_simple/simple_22_openai.mp3",
          "asr_output_openai": "What's the greatest common divisor of twelve and fifteen?",
          "asr_output_elevenlabs": "What's the greatest, uh, common divisor of 12 and 15?",
          "asr_output_deepgram": "What's the greatest, common divisor of twelve and fifteen?",
          "clarifications": {
            "first_number": "12",
            "second_number": "15"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "math.gcd",
        "description": "Calculate the greatest common divisor (gcd) of the two integers.",
        "parameters": {
          "type": "dict",
          "properties": {
            "num1": {
              "type": "integer",
              "description": "The first number."
            },
            "num2": {
              "type": "integer",
              "description": "The second number."
            }
          },
          "required": [
            "num1",
            "num2"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_23",
    "question": [
      [
        {
          "role": "user",
          "content": "What is the prime factorization of the number 60? Return them in the form of dictionary",
          "transcript": "Uh, can you give me the prime factorization of, um, sixty as a dictionary?",
          "audio_path": "BFCL_v3_simple/simple_23_openai.mp3",
          "asr_output_openai": "Can you give me the prime factorization of 60 as a dictionary?",
          "asr_output_elevenlabs": "Uh, can you give me the prime factorization of, um, sixty as a dictionary?",
          "asr_output_deepgram": "Can you give me the prime factorization of, sixty as a dictionary?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "prime_factorize",
        "description": "Calculate the prime factorization of a given integer.",
        "parameters": {
          "type": "dict",
          "properties": {
            "number": {
              "type": "integer",
              "description": "The number for which to calculate the prime factorization."
            },
            "return_type": {
              "type": "string",
              "description": "Determines the format of the returned prime factorization. Can be 'list' for a list of all prime factors or 'dictionary' for a count of each prime factor. Default is 'list'."
            }
          },
          "required": [
            "number"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_24",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the greatest common divisor (GCD) of 12 and 18",
          "transcript": "Whats the, uh, greatest common divisor of twelve and eighteen?",
          "audio_path": "BFCL_v3_simple/simple_24_openai.mp3",
          "asr_output_openai": "What's the greatest common divisor of twelve and eighteen?",
          "asr_output_elevenlabs": "What's the, uh, greatest common divisor of twelve and eighteen?",
          "asr_output_deepgram": "What's the, greatest common divisor of twelve and eighteen?",
          "clarifications": {
            "first_number": "12",
            "second_number": "18"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "math.gcd",
        "description": "Calculate the greatest common divisor of two integers.",
        "parameters": {
          "type": "dict",
          "properties": {
            "num1": {
              "type": "integer",
              "description": "First number."
            },
            "num2": {
              "type": "integer",
              "description": "Second number."
            }
          },
          "required": [
            "num1",
            "num2"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_25",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the final velocity of an object falling from a 150 meter building, assuming initial velocity is zero.",
          "transcript": "Um, whats the final speed of somethin fallin from a one hundred and fifty meter buildin, startin at zero speed?",
          "audio_path": "BFCL_v3_simple/simple_25_openai.mp3",
          "asr_output_openai": "Um, what's the final speed of something fallin' from a 150-meter buildin', starting at zero speed?",
          "asr_output_elevenlabs": "Um, what's the final speed of something fallen from a 150 meter buildin' starting at zero speed?",
          "asr_output_deepgram": "What's the final speed of something fallen from a one hundred and fifty meter building starting at zero speed?",
          "clarifications": {
            "height": "150 meters"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_final_velocity",
        "description": "Calculate the final velocity of a free falling object given the height it's dropped from, the initial velocity and acceleration due to gravity. Ignore air resistance.",
        "parameters": {
          "type": "dict",
          "properties": {
            "height": {
              "type": "integer",
              "description": "The height the object is dropped from, in meters."
            },
            "initial_velocity": {
              "type": "integer",
              "description": "The initial velocity of the object in m/s. Default is zero."
            },
            "gravity": {
              "type": "float",
              "description": "Acceleration due to gravity. Default value is 9.81 m/s^2, earth's gravity."
            }
          },
          "required": [
            "height"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_26",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the velocity of a car that travels a distance of 50 kilometers for a duration of 2 hours?",
          "transcript": "So, um, whats the velocity if the car covers fifty kilometers in, uh, two hours, right?",
          "audio_path": "BFCL_v3_simple/simple_26_openai.mp3",
          "asr_output_openai": "So, um, what's the velocity if the car covers 50 kilometers in two hours, right?",
          "asr_output_elevenlabs": "So, um, what's the velocity if the car covers 50 kilometers in, uh, two hours, right?",
          "asr_output_deepgram": "So, what's the velocity if the car covers fifty kilometers in, two hours? Right?",
          "clarifications": {
            "travel_distance": "50 kilometers",
            "travel_duration": "2 hours"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_velocity",
        "description": "Calculate the velocity for a certain distance travelled within a specific duration.",
        "parameters": {
          "type": "dict",
          "properties": {
            "distance": {
              "type": "integer",
              "description": "The distance travelled by the object, typically in kilometers."
            },
            "duration": {
              "type": "integer",
              "description": "The duration of the journey, typically in hours."
            },
            "unit": {
              "type": "string",
              "description": "Optional parameter. The unit to return the velocity in. If not provided, the default is km/h."
            }
          },
          "required": [
            "distance",
            "duration"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_27",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the final velocity of a vehicle after accelerating at 2 meters/second^2 for a duration of 5 seconds, starting from a speed of 10 meters/second.",
          "transcript": "Okay, uh, figure out the vehicles final speed if it starts at ten meters per second and speeds up at two meters per second squared for five seconds.",
          "audio_path": "BFCL_v3_simple/simple_27_openai.mp3",
          "asr_output_openai": "Okay, figure out the vehicle's final speed if it starts at 10 meters per second and speeds up at 2 meters per second squared for 5 seconds.",
          "asr_output_elevenlabs": "Okay, uh, figure out the vehicle's final speed if it starts at 10 meters per second and speeds up at 2 meters per second squared for 5 seconds.",
          "asr_output_deepgram": "Okay. Figure out the vehicle's final speed if it starts at ten meters per second and speeds up at two meters per second squared for five seconds.",
          "clarifications": {
            "acceleration": "2 meters/second^2",
            "time_duration": "5 seconds",
            "initial_velocity": "10 meters/second"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "final_velocity",
        "description": "Calculate the final velocity of an object given its initial velocity, acceleration, and time.",
        "parameters": {
          "type": "dict",
          "properties": {
            "initial_velocity": {
              "type": "integer",
              "description": "The initial velocity of the object in meters/second."
            },
            "acceleration": {
              "type": "integer",
              "description": "The acceleration of the object in meters/second^2."
            },
            "time": {
              "type": "integer",
              "description": "The time over which the acceleration is applied in seconds."
            }
          },
          "required": [
            "initial_velocity",
            "acceleration",
            "time"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_28",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the displacement of a car given the initial velocity of 10 and acceleeration of 9.8 within 5 seconds.",
          "transcript": "Uh, work out the cars displacement if it starts at a velocity of ten and speeds up, um, at nine point eight for five seconds, okay?",
          "audio_path": "BFCL_v3_simple/simple_28_openai.mp3",
          "asr_output_openai": "Uh, work out the car's displacement if it starts at a velocity of 10 and speeds up, um, at 9.8 for 5 seconds? Ok?",
          "asr_output_elevenlabs": "Uh, work out the car's displacement if it starts at a velocity of 10 and speeds up, um, at 9.8 for 5 seconds. Okay?",
          "asr_output_deepgram": "Work out the car's displacement if it starts at a velocity of ten and speeds up, at nine point eight for five seconds. Okay?",
          "clarifications": {
            "initial_velocity": "10",
            "acceleration": "9.8",
            "time": "5"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_displacement",
        "description": "Calculates the displacement of an object in motion given initial velocity, time, and acceleration.",
        "parameters": {
          "type": "dict",
          "properties": {
            "initial_velocity": {
              "type": "integer",
              "description": "The initial velocity of the object in m/s."
            },
            "time": {
              "type": "integer",
              "description": "The time in seconds that the object has been in motion."
            },
            "acceleration": {
              "type": "float",
              "description": "The acceleration of the object in m/s^2.",
              "default": 0
            }
          },
          "required": [
            "initial_velocity",
            "time"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_29",
    "question": [
      [
        {
          "role": "user",
          "content": "What is the final speed of an object dropped from rest after falling for 5 seconds if we neglect air resistance?",
          "transcript": "Hey, can you tell me the speed of an object dropped from rest after its fallen for five seconds without considering air resistance?",
          "audio_path": "BFCL_v3_simple/simple_29_openai.mp3",
          "asr_output_openai": "Hey, can you tell me the speed of an object dropped from rest after it's fallen for five seconds, without considering air resistance?",
          "asr_output_elevenlabs": "Hey, can you tell me the speed of an object dropped from rest after it's fallen for five seconds without considering air resistance?",
          "asr_output_deepgram": "Hey. Can you tell me the speed of an object dropped from rest after it's fallen for five seconds without considering air resistance?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_final_speed",
        "description": "Calculate the final speed of an object in free fall after a certain time, neglecting air resistance. The acceleration due to gravity is considered as -9.81 m/s^2",
        "parameters": {
          "type": "dict",
          "properties": {
            "initial_speed": {
              "type": "integer",
              "description": "The initial speed of the object in m/s. Default is 0 for an object at rest."
            },
            "time": {
              "type": "integer",
              "description": "The time in seconds for which the object is in free fall."
            },
            "gravity": {
              "type": "float",
              "description": "The acceleration due to gravity. Default is -9.81 m/s^2."
            }
          },
          "required": [
            "time"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_30",
    "question": [
      [
        {
          "role": "user",
          "content": "What is the final velocity of a vehicle that started from rest and accelerated at 4 m/s^2 for a distance of 300 meters?",
          "transcript": "Hey, let me see... whats final speed of a vehicle that starts from rest, accelerates at four meters per second squared, and covers three hundred meters?",
          "audio_path": "BFCL_v3_simple/simple_30_openai.mp3",
          "asr_output_openai": "Hey, let me see, what's final speed of a vehicle that starts from rest, accelerates at 4 meters per second squared, and covers 300 meters?",
          "asr_output_elevenlabs": "Hey, let me see. What's final speed of a vehicle that starts from rest, accelerates at 4 meters per second squared, and covers 300 meters?",
          "asr_output_deepgram": "Hey. Let me see. What's final speed of a vehicle that starts from rest, accelerates at four meters per second squared, and covers three hundred meters?",
          "clarifications": {
            "acceleration": "4 m/s^2",
            "distance": "300 meters"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "kinematics.final_velocity_from_distance",
        "description": "Calculate the final velocity of an object given the acceleration and distance travelled, assuming initial velocity is 0.",
        "parameters": {
          "type": "dict",
          "properties": {
            "acceleration": {
              "type": "integer",
              "description": "Acceleration of the object, m/s^2."
            },
            "distance": {
              "type": "integer",
              "description": "Distance traveled by the object, m."
            },
            "initial_velocity": {
              "type": "float",
              "description": "Initial velocity of the object. Default is 0, m/s"
            }
          },
          "required": [
            "acceleration",
            "distance"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_31",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the final velocity of an object, knowing that it started from rest, accelerated at a rate of 9.8 m/s^2 for a duration of 5 seconds.",
          "transcript": "Alright, can you get the final velocity of an object thats starting from rest, acceleratin at nine point eight meters per second squared for five seconds?",
          "audio_path": "BFCL_v3_simple/simple_31_openai.mp3",
          "asr_output_openai": "Alright, can you get the final velocity of an object that's starting from rest, accelerating at 9.8 meters per second squared for 5 seconds?",
          "asr_output_elevenlabs": "Alright. Can you get the final velocity of an object that's starting from rest, accelerating at 9.8 meters per second squared for five seconds?",
          "asr_output_deepgram": "Alright. Can you get the final velocity of an object that's starting from rest accelerating at nine point eight meters per second squared for five seconds?",
          "clarifications": {
            "acceleration_rate": "9.8 m/s^2",
            "duration": "5 seconds"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_final_velocity",
        "description": "Calculate the final velocity of an object under constant acceleration, knowing its initial velocity, acceleration, and time of acceleration.",
        "parameters": {
          "type": "dict",
          "properties": {
            "initial_velocity": {
              "type": "integer",
              "description": "The initial velocity of the object."
            },
            "acceleration": {
              "type": "float",
              "description": "The acceleration of the object."
            },
            "time": {
              "type": "integer",
              "description": "The time of acceleration."
            }
          },
          "required": [
            "initial_velocity",
            "acceleration",
            "time"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_32",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the final speed of an object dropped from 100 m without air resistance.",
          "transcript": "Uh, whats the final speed of something dropped from one hundred meters, uh, with no air resistance?",
          "audio_path": "BFCL_v3_simple/simple_32_openai.mp3",
          "asr_output_openai": "What's the final speed of something dropped from a hundred meters with no air resistance?",
          "asr_output_elevenlabs": "Uh, what's the final speed of something dropped from a hundred meters, uh, with no air resistance?",
          "asr_output_deepgram": "What's the final speed of something dropped from a hundred meters, with no air resistance?",
          "clarifications": {
            "height": "100 m"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_final_speed",
        "description": "Calculate the final speed of an object dropped from a certain height without air resistance.",
        "parameters": {
          "type": "dict",
          "properties": {
            "initial_velocity": {
              "type": "integer",
              "description": "The initial velocity of the object."
            },
            "height": {
              "type": "integer",
              "description": "The height from which the object is dropped."
            },
            "gravity": {
              "type": "float",
              "description": "The gravitational acceleration. Default is 9.8 m/s^2."
            }
          },
          "required": [
            "initial_velocity",
            "height"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_33",
    "question": [
      [
        {
          "role": "user",
          "content": "Get directions from Sydney to Melbourne using the fastest route.",
          "transcript": "Uh, gimme directions from Sydney to Melbourne usin fastest route, okay.",
          "audio_path": "BFCL_v3_simple/simple_33_openai.mp3",
          "asr_output_openai": "Give me directions from Sydney to Melbourne using fastest route.",
          "asr_output_elevenlabs": "Uh, give me directions from Sydney to Melbourne using fastest route. Okay.",
          "asr_output_deepgram": "Give me directions from Sydney to Melbourne using fastest route. Okay?",
          "clarifications": {
            "start_location": "Sydney",
            "end_location": "Melbourne"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_directions",
        "description": "Retrieve directions from one location to another.",
        "parameters": {
          "type": "dict",
          "properties": {
            "start_location": {
              "type": "string",
              "description": "The starting point of the journey."
            },
            "end_location": {
              "type": "string",
              "description": "The destination point of the journey."
            },
            "route_type": {
              "type": "string",
              "description": "Type of route to use (e.g., 'fastest', 'scenic'). Default is 'fastest'.",
              "enum": [
                "fastest",
                "scenic"
              ]
            }
          },
          "required": [
            "start_location",
            "end_location"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_34",
    "question": [
      [
        {
          "role": "user",
          "content": "Create an itinerary for a 7 days trip to Tokyo with daily budgets not exceeding $100 and prefer exploring nature.",
          "transcript": "Uh, plan a seven-day Tokyo trip with, um, a daily budget under a hundred dollars. Focus on nature spots.",
          "audio_path": "BFCL_v3_simple/simple_34_openai.mp3",
          "asr_output_openai": "Plan a seven-day Tokyo trip with, um, a daily budget under a hundred dollars. Focus on nature spots.",
          "asr_output_elevenlabs": "Uh, plan a seven-day Tokyo trip with, um, a daily budget under $100. Focus on nature spots.",
          "asr_output_deepgram": "Plan a seven day Tokyo trip with, a daily budget under a hundred dollars. Focus on nature spots.",
          "clarifications": {
            "destination": "Tokyo",
            "trip_duration": "7 days",
            "daily_budget": "$100",
            "exploration_type": "exploring nature"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "travel_itinerary_generator",
        "description": "Generate a travel itinerary based on specific destination, duration and daily budget, with preferred exploration type.",
        "parameters": {
          "type": "dict",
          "properties": {
            "destination": {
              "type": "string",
              "description": "Destination city of the trip."
            },
            "days": {
              "type": "integer",
              "description": "Number of days for the trip."
            },
            "daily_budget": {
              "type": "integer",
              "description": "The maximum daily budget for the trip."
            },
            "exploration_type": {
              "type": "string",
              "enum": [
                "nature",
                "urban",
                "history",
                "culture"
              ],
              "description": "The preferred exploration type.",
              "default": "urban"
            }
          },
          "required": [
            "destination",
            "days",
            "daily_budget"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_35",
    "question": [
      [
        {
          "role": "user",
          "content": "Find an all vegan restaurant in New York that opens until at least 11 PM.",
          "transcript": "Uh, can you help me get a vegan restaurant in New York thats, uh, open until at least eleven PM, yeah?",
          "audio_path": "BFCL_v3_simple/simple_35_openai.mp3",
          "asr_output_openai": "Uh, can you help me get a vegan restaurant in New York that's, uh, open until at least 11 p.m.? Yeah?",
          "asr_output_elevenlabs": "Uh, can you help me get a vegan restaurant in New York that's, uh, open until at least 11 PM? Yeah?",
          "asr_output_deepgram": "Can you help me get a vegan restaurant in New York that's, open until at least eleven PM? Yeah.",
          "clarifications": {
            "location": "New York",
            "operating_hours": "11"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "vegan_restaurant.find_nearby",
        "description": "Locate nearby vegan restaurants based on specific criteria like operating hours.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city and state, e.g. New York, NY, you should format it as City, State."
            },
            "operating_hours": {
              "type": "integer",
              "description": "Preferred latest closing time of the restaurant. E.g. if 11 is given, then restaurants that close at or after 11 PM will be considered. This is in 24 hour format. Default is 24."
            }
          },
          "required": [
            "location"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_36",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the shortest driving distance between New York City and Washington D.C.",
          "transcript": "Um, oh, whats fastest drivin route from New York City to Washington D.C.?",
          "audio_path": "BFCL_v3_simple/simple_36_openai.mp3",
          "asr_output_openai": "Um, oh, what's the fastest driving route from New York City to Washington, D.C.?",
          "asr_output_elevenlabs": "Um, oh, what's the fastest driving route from New York City to Washington DC?",
          "asr_output_deepgram": "Oh, what's the fastest driving route from New York City to Washington DC?",
          "clarifications": {
            "origin": "New York City",
            "destination": "Washington D.C."
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_shortest_driving_distance",
        "description": "Calculate the shortest driving distance between two locations.",
        "parameters": {
          "type": "dict",
          "properties": {
            "origin": {
              "type": "string",
              "description": "Starting point of the journey. You should format it as city name like Boston."
            },
            "destination": {
              "type": "string",
              "description": "End point of the journey. You should format it as city name like Boston."
            },
            "unit": {
              "type": "string",
              "description": "Preferred unit of distance (optional, default is 'km')."
            }
          },
          "required": [
            "origin",
            "destination"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_37",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the estimated travel time by car from San Francisco to Los Angeles with stops at Santa Barbara and Monterey.",
          "transcript": "Whats the estimated travel time driving from San Francisco to Los Angeles, with pit stops in Santa Barbara and Monterey?",
          "audio_path": "BFCL_v3_simple/simple_37_openai.mp3",
          "asr_output_openai": "What's the estimated travel time driving from San Francisco to Los Angeles, with pit stops in Santa Barbara and Monterey?",
          "asr_output_elevenlabs": "What's the estimated travel time driving from San Francisco to Los Angeles, with pitstops in Santa Barbara and Monterey?",
          "asr_output_deepgram": "What's the estimated travel time driving from San Francisco to Los Angeles with pit stops in Santa Barbara and Monterrey?",
          "clarifications": {
            "start_location": "San Francisco",
            "end_location": "Los Angeles",
            "stop1": "Santa Barbara",
            "stop2": "Monterey"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "route.estimate_time",
        "description": "Estimate the travel time for a specific route with optional stops.",
        "parameters": {
          "type": "dict",
          "properties": {
            "start_location": {
              "type": "string",
              "description": "The starting point for the journey. It should be format as city name such as Boston."
            },
            "end_location": {
              "type": "string",
              "description": "The destination for the journey. It should be format as city name such as Boston."
            },
            "stops": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Additional cities or points of interest to stop at during the journey. Default is an empty list."
            }
          },
          "required": [
            "start_location",
            "end_location"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_38",
    "question": [
      [
        {
          "role": "user",
          "content": "What is the electrostatic potential between two charged bodies of 1e-9 and 2e-9 of distance 0.05?",
          "transcript": "Um, hey, can you tell me the electrostatic potential between two charges at one e minus nine and two e minus nine, when theyre, uh, zero point zero five apart?",
          "audio_path": "BFCL_v3_simple/simple_38_openai.mp3",
          "asr_output_openai": "Um, hey, can you tell me the electrostatic potential between two charges at 1e-9 and 2e-9 when they're 0.05 apart?",
          "asr_output_elevenlabs": "Um, hey, can you tell me the electrostatic potential between two charges at one E minus nine and two E minus nine when they're, uh, zero point zero five apart?",
          "asr_output_deepgram": "Hey. Can you tell me the electrostatic potential between two charges at one e minus nine and two e minus nine when they're, zero point zero five apart?",
          "clarifications": {
            "charge1": "1e-9",
            "charge2": "2e-9",
            "distance": "0.05"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_electrostatic_potential",
        "description": "Calculate the electrostatic potential between two charged bodies using the principle of Coulomb's Law.",
        "parameters": {
          "type": "dict",
          "properties": {
            "charge1": {
              "type": "float",
              "description": "The quantity of charge on the first body."
            },
            "charge2": {
              "type": "float",
              "description": "The quantity of charge on the second body."
            },
            "distance": {
              "type": "float",
              "description": "The distance between the two bodies."
            },
            "constant": {
              "type": "float",
              "description": "The value of the electrostatic constant. Default is 8.99e9."
            }
          },
          "required": [
            "charge1",
            "charge2",
            "distance"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_39",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the electric field at a point 3 meters away from a charge of 2 coulombs.",
          "transcript": "Whats the electric field at, um, a place three meters from a two-coulomb charge?",
          "audio_path": "BFCL_v3_simple/simple_39_openai.mp3",
          "asr_output_openai": "What's the electric field at a place 3 meters from a two coulomb charge?",
          "asr_output_elevenlabs": "What's the electric field at, um, a place 3 meters from a 2 coulomb charge?",
          "asr_output_deepgram": "What's the electric field at, a place three meters from a two coulomb charge?",
          "clarifications": {
            "distance_from_charge": "3 meters",
            "charge_in_coulombs": "2 coulombs"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_electric_field",
        "description": "Calculate the electric field produced by a charge at a certain distance.",
        "parameters": {
          "type": "dict",
          "properties": {
            "charge": {
              "type": "integer",
              "description": "Charge in coulombs producing the electric field."
            },
            "distance": {
              "type": "integer",
              "description": "Distance from the charge in meters where the field is being measured."
            },
            "permitivity": {
              "type": "float",
              "description": "Permitivity of the space where field is being calculated, default is 8.854e-12."
            }
          },
          "required": [
            "charge",
            "distance"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_40",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the magnetic field produced at the center of a circular loop carrying current of 5 Ampere with a radius of 4 meters",
          "transcript": "Hey, um, can you figure out the magnetic field at the center of a circular loop thats carryin a current of five Amperes and has, uh, a radius of four meters, okay?",
          "audio_path": "BFCL_v3_simple/simple_40_openai.mp3",
          "asr_output_openai": "Hey, can you figure out the magnetic field at the center of a circular loop that's carrying a current of 5 amperes and has a radius of 4 meters?",
          "asr_output_elevenlabs": "Hey, um, can you figure out the magnetic field at the center of a circular loop that's carrying a current of 5 amperes and has a radius of 4 meters? Okay.",
          "asr_output_deepgram": "Hey. Can you figure out the magnetic field at the center of a circular loop that's carrying a current of five amperes and has a a radius of four meters? Okay.",
          "clarifications": {
            "current": "5 Ampere",
            "radius": "4 meters"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_magnetic_field",
        "description": "Calculate the magnetic field produced at the center of a circular loop carrying current.",
        "parameters": {
          "type": "dict",
          "properties": {
            "current": {
              "type": "integer",
              "description": "The current through the circular loop in Amperes."
            },
            "radius": {
              "type": "integer",
              "description": "The radius of the circular loop in meters."
            },
            "permeability": {
              "type": "float",
              "description": "The magnetic permeability. Default is 12.57e10 (Vacuum Permeability)."
            }
          },
          "required": [
            "current",
            "radius"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_41",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the electromagnetic force between two charges of 5C and 7C placed 3 meters apart.",
          "transcript": "I think... um, can you figure out the electromagnetic force between charges of five coulombs and seven coulombs thatre three meters apart, please?",
          "audio_path": "BFCL_v3_simple/simple_41_openai.mp3",
          "asr_output_openai": "I think\u2026 can you figure out the electromagnetic force between charges of 5 coulombs and 7 coulombs that are 3 meters apart, please?",
          "asr_output_elevenlabs": "I think, um, can you figure out the electromagnetic force between charges of five coulombs and seven coulombs that are three meters apart, please?",
          "asr_output_deepgram": "I think, can you figure out the electromagnetic force between charges of five coulombs and seven coulombs that are three meters apart, please?",
          "clarifications": {
            "first_charge": "5C",
            "second_charge": "7C",
            "distance_between_charges": "3 meters"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "electromagnetic_force",
        "description": "Calculate the electromagnetic force between two charges placed at a certain distance.",
        "parameters": {
          "type": "dict",
          "properties": {
            "charge1": {
              "type": "integer",
              "description": "The magnitude of the first charge in coulombs."
            },
            "charge2": {
              "type": "integer",
              "description": "The magnitude of the second charge in coulombs."
            },
            "distance": {
              "type": "integer",
              "description": "The distance between the two charges in meters."
            },
            "medium_permittivity": {
              "type": "float",
              "description": "The relative permittivity of the medium in which the charges are present. Default is 8.854e-12 (Vacuum Permittivity)."
            }
          },
          "required": [
            "charge1",
            "charge2",
            "distance"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_42",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the resonant frequency of an LC circuit given capacitance of 100\u00b5F and inductance of 50mH.",
          "transcript": "Hey, um, can you get the resonant frequency of an LC circuit? The inductance is fifty millihenries, and the capacitance is, uh, one hundred microfarads.",
          "audio_path": "BFCL_v3_simple/simple_42_openai.mp3",
          "asr_output_openai": "Hey, can you get the resonant frequency of an LC circuit? The inductance is 50 millihenries and the capacitance is 100 microfarads.",
          "asr_output_elevenlabs": "Hey, um, can you get the resonant frequency of an LC circuit? The inductance is 50 millihenries and the capacitance is, uh, 100 microfarads.",
          "asr_output_deepgram": "Hey. Can you get the resonant frequency of an LC circuit? The inductance is fifty millihenries, and the capacitance is, one hundred microfarads.",
          "clarifications": {
            "capacitance_value": "100\u00b5F",
            "inductance_value": "50mH"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_resonant_frequency",
        "description": "Calculate the resonant frequency of an LC (inductor-capacitor) circuit.",
        "parameters": {
          "type": "dict",
          "properties": {
            "inductance": {
              "type": "float",
              "description": "The inductance (L) in henries (H)."
            },
            "capacitance": {
              "type": "float",
              "description": "The capacitance (C) in farads (F)."
            },
            "round_off": {
              "type": "integer",
              "description": "Rounding off the result to a certain decimal places, default is 2."
            }
          },
          "required": [
            "inductance",
            "capacitance"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_43",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the magnetic field strength 10 meters away from a long wire carrying a current of 20 Amperes.",
          "transcript": "Hey, um, can you figure out the magnetic field strength at ten meters from a long wire with a twenty Amp current, yeah?",
          "audio_path": "BFCL_v3_simple/simple_43_openai.mp3",
          "asr_output_openai": "Hey, um, can you figure out the magnetic field strength at 10 meters from a long wire with a 20-amp current?",
          "asr_output_elevenlabs": "Hey, um, can you figure out the magnetic field strength at 10 meters from a long wire with a 20 amp current? Yeah?",
          "asr_output_deepgram": "Hey. Can you figure out the magnetic field strength at ten meters from a long wire with a twenty amp current? Yeah?",
          "clarifications": {
            "current": "20 Amperes",
            "distance": "10 meters"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_magnetic_field_strength",
        "description": "Calculate the magnetic field strength at a point a certain distance away from a long wire carrying a current.",
        "parameters": {
          "type": "dict",
          "properties": {
            "current": {
              "type": "integer",
              "description": "The current flowing through the wire in Amperes."
            },
            "distance": {
              "type": "integer",
              "description": "The perpendicular distance from the wire to the point where the magnetic field is being calculated."
            },
            "permeability": {
              "type": "float",
              "description": "The permeability of the medium. Default is 12.57e-7 (Vacuum Permeability)."
            }
          },
          "required": [
            "current",
            "distance"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_44",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the electric field strength 4 meters away from a charge of 0.01 Coulombs.",
          "transcript": "Let me see... whats the strength of the electric field at four meters from a zero point zero one Coulomb charge?",
          "audio_path": "BFCL_v3_simple/simple_44_openai.mp3",
          "asr_output_openai": "Let me see, what's the strength of the electric field at 4 meters from a 0.01 coulomb charge?",
          "asr_output_elevenlabs": "Let me see. What's the strength of the electric field at 4 meters from a 0.01 coulomb charge?",
          "asr_output_deepgram": "Let me see. What's the strength of the electric field at four meters from a zero point zero one coulomb charge?",
          "clarifications": {
            "charge_value": "0.01 Coulombs",
            "distance_value": "4 meters"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_electric_field_strength",
        "description": "Calculate the electric field strength at a certain distance from a point charge.",
        "parameters": {
          "type": "dict",
          "properties": {
            "charge": {
              "type": "float",
              "description": "The charge in Coulombs."
            },
            "distance": {
              "type": "integer",
              "description": "The distance from the charge in meters."
            },
            "medium": {
              "type": "string",
              "description": "The medium in which the charge and the point of calculation is located. Default is 'vacuum'."
            }
          },
          "required": [
            "charge",
            "distance"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_45",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the energy (in Joules) absorbed or released during the phase change of 100g of water from liquid to steam at its boiling point.",
          "transcript": "Um, can figure out the, uh, energy in Joules for one hundred grams of water going from liquid to steam at boiling?",
          "audio_path": "BFCL_v3_simple/simple_45_openai.mp3",
          "asr_output_openai": "Um, can you figure out the energy in joules for 100 grams of water going from liquid to steam at boiling?",
          "asr_output_elevenlabs": "Um, can you figure out the energy in joules for 100 grams of water going from liquid to steam at boiling?",
          "asr_output_deepgram": "Can figure out the, energy in joules for one hundred grams of water going from liquid to steam at boiling?",
          "clarifications": {
            "mass": "100g",
            "phase_transition": "vaporization"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "thermo.calculate_energy",
        "description": "Calculate the energy required or released during a phase change using mass, the phase transition temperature and the specific latent heat.",
        "parameters": {
          "type": "dict",
          "properties": {
            "mass": {
              "type": "integer",
              "description": "Mass of the substance in grams."
            },
            "phase_transition": {
              "type": "string",
              "description": "Phase transition. Can be 'melting', 'freezing', 'vaporization', 'condensation'."
            },
            "substance": {
              "type": "string",
              "description": "The substance which is undergoing phase change, default is 'water'"
            }
          },
          "required": [
            "mass",
            "phase_transition"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_46",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the final temperature when 20 kg of water at 30 degree Celsius is mixed with 15 kg of water at 60 degree Celsius.",
          "transcript": "Um, whats the final temperature when you mix, uh, twenty kilograms of water at thirty degrees Celsius with fifteen kilograms at sixty degrees?",
          "audio_path": "BFCL_v3_simple/simple_46_openai.mp3",
          "asr_output_openai": "Um, what's the final temperature when you mix, uh, 20 kilograms of water at 30 degrees Celsius with 15 kilograms at 60 degrees?",
          "asr_output_elevenlabs": "Um, what's the final temperature when you mix, uh, 20 kilograms of water at 30 degrees Celsius with 15 kilograms at 60 degrees?",
          "asr_output_deepgram": "What's the final temperature when you mix, twenty kilograms of water at thirty degrees Celsius with fifteen kilograms at sixty degrees?",
          "clarifications": {
            "mass1": "20 kg",
            "temperature1": "30 degree Celsius",
            "mass2": "15 kg",
            "temperature2": "60 degree Celsius"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_final_temperature",
        "description": "Calculates the final equilibrium temperature after mixing two bodies with different masses and temperatures",
        "parameters": {
          "type": "dict",
          "properties": {
            "mass1": {
              "type": "integer",
              "description": "The mass of the first body (kg)."
            },
            "temperature1": {
              "type": "integer",
              "description": "The initial temperature of the first body (Celsius)."
            },
            "mass2": {
              "type": "integer",
              "description": "The mass of the second body (kg)."
            },
            "temperature2": {
              "type": "integer",
              "description": "The initial temperature of the second body (Celsius)."
            },
            "specific_heat_capacity": {
              "type": "float",
              "description": "The specific heat capacity of the bodies in kJ/kg/K. If not provided, will default to that of water at room temperature, which is 4.2 kJ/kg/K."
            }
          },
          "required": [
            "mass1",
            "temperature1",
            "mass2",
            "temperature2"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_47",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the boiling point and melting point of water under the sea level of 5000m.",
          "transcript": "Um, whats the boiling point and, uh, melting point of water five thousand meters below sea level, oh?",
          "audio_path": "BFCL_v3_simple/simple_47_openai.mp3",
          "asr_output_openai": "Um, what's the boiling point and melting point of water 5,000 meters below sea level? Oh.",
          "asr_output_elevenlabs": "Um, what's the boiling point and, uh, melting point of water? Five thousand meters below sea level? Oh!",
          "asr_output_deepgram": "What's the boiling point and, melting point of water? Five thousand meters below sea level? Oh.",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "get_boiling_melting_points",
        "description": "Retrieve the boiling point and melting point of a substance based on its name and the sea level.",
        "parameters": {
          "type": "dict",
          "properties": {
            "substance": {
              "type": "string",
              "description": "The name of the substance."
            },
            "sea_level": {
              "type": "integer",
              "description": "The sea level in meters."
            }
          },
          "required": [
            "substance",
            "sea_level"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_48",
    "question": [
      [
        {
          "role": "user",
          "content": "What is the density of a substance with a mass of 45 kg and a volume of 15 m\u00b3?",
          "transcript": "Uh, can you tell me the density of somethin that weighs forty-five kilograms and, um, takes up fifteen cubic meters, right?",
          "audio_path": "BFCL_v3_simple/simple_48_openai.mp3",
          "asr_output_openai": "Can you tell me the density of something that weighs 45 kilograms and takes up 15 cubic meters, right?",
          "asr_output_elevenlabs": "Uh, can you tell me the density of something that weighs 45 kilograms and, um, takes up 15 cubic meters? Right.",
          "asr_output_deepgram": "Can you tell me the density of something that weighs forty five kilograms and, takes up fifteen cubic meters. Right?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_density",
        "description": "Calculate the density of a substance based on its mass and volume.",
        "parameters": {
          "type": "dict",
          "properties": {
            "mass": {
              "type": "integer",
              "description": "The mass of the substance in kilograms."
            },
            "volume": {
              "type": "integer",
              "description": "The volume of the substance in cubic meters."
            },
            "unit": {
              "type": "string",
              "description": "The unit of density. Default is kg/m\u00b3"
            }
          },
          "required": [
            "mass",
            "volume"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_49",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the absolute pressure in pascals given atmospheric pressure of 1 atm and a gauge pressure of 2 atm.",
          "transcript": "Um, can you figure out the absolute pressure in pascals with, uh, one atm atmospheric pressure and two atm gauge pressure, right?",
          "audio_path": "BFCL_v3_simple/simple_49_openai.mp3",
          "asr_output_openai": "Um, can you figure out the absolute pressure in Pascals with 1 atm atmospheric pressure and 2 atm gauge pressure, right?",
          "asr_output_elevenlabs": "Um, can you figure out the absolute pressure in pascals with, uh, one atm atmospheric pressure and two atm gauge pressure? Right?",
          "asr_output_deepgram": "Can you figure out the absolute pressure in Pascals with, one ATM atmospheric pressure and two ATM gauge pressure? Right?",
          "clarifications": {
            "atmospheric_pressure": "1 atm",
            "gauge_pressure": "2 atm"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calc_absolute_pressure",
        "description": "Calculates the absolute pressure from gauge and atmospheric pressures.",
        "parameters": {
          "type": "dict",
          "properties": {
            "atm_pressure": {
              "type": "integer",
              "description": "The atmospheric pressure in atmospheres (atm). Default is 1 atm if not provided."
            },
            "gauge_pressure": {
              "type": "integer",
              "description": "The gauge pressure in atmospheres (atm). Must be provided."
            }
          },
          "required": [
            "gauge_pressure"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_50",
    "question": [
      [
        {
          "role": "user",
          "content": "What is the change in entropy in Joules per Kelvin of a 1kg ice block at 0\u00b0C if it is heated to 100\u00b0C under 1 atmosphere of pressure?",
          "transcript": "Um, hey, whats the change in entropy, uh, in Joules per Kelvin for a one-kilogram ice block when its heated from zero to one hundred degrees Celsius at one atmosphere pressure?",
          "audio_path": "BFCL_v3_simple/simple_50_openai.mp3",
          "asr_output_openai": "Um, hey, what's the change in entropy, uh, in joules per kelvin, for a one kilogram ice block when it's heated from zero to 100 degrees Celsius at one atmosphere pressure?",
          "asr_output_elevenlabs": "Um, hey, what's the change in entropy, uh, in joules per kelvin for a one-kilogram ice block when it's heated from zero to one hundred degrees Celsius at one atmosphere pressure?",
          "asr_output_deepgram": "Hey. What's the change in entropy, in joules per Kelvin for a one kilogram ice block when it's heated from zero to one hundred degrees Celsius at one atmosphere pressure?",
          "clarifications": {
            "substance": "ice",
            "mass": "1kg",
            "initial_temperature": "0\u00b0C",
            "final_temperature": "100\u00b0C",
            "pressure": "1 atmosphere"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "entropy_change.calculate",
        "description": "Calculate the change in entropy for a mass of a specific substance under set initial and final conditions.",
        "parameters": {
          "type": "dict",
          "properties": {
            "substance": {
              "type": "string",
              "description": "The substance for which the change in entropy is calculated."
            },
            "mass": {
              "type": "integer",
              "description": "The mass of the substance in kg."
            },
            "initial_temperature": {
              "type": "integer",
              "description": "The initial temperature of the substance in degree Celsius."
            },
            "final_temperature": {
              "type": "integer",
              "description": "The final temperature of the substance in degree Celsius."
            },
            "pressure": {
              "type": "integer",
              "default": 1,
              "description": "The pressure the substance is under in atmospheres."
            }
          },
          "required": [
            "substance",
            "mass",
            "initial_temperature",
            "final_temperature"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_51",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the entropy change for a certain process given an initial temperature of 300K, a final temperature of 400K, and a heat capacity of 5J/K.",
          "transcript": "Hey, could you, um, work out the entropy change for a process? Oh, the initial temperatures three hundred Kelvin, uh, the final temperatures four hundred Kelvin, and the heat capacitys five Joules per Kelvin.",
          "audio_path": "BFCL_v3_simple/simple_51_openai.mp3",
          "asr_output_openai": "Hey, could you, um, work out the entropy change for a process? Oh, the initial temperature's 300 Kelvin, the final temperature's 400 Kelvin, and the heat capacity's 5 joules per Kelvin.",
          "asr_output_elevenlabs": "Hey, could you, um, work out the entropy change for a process? Oh, the initial temperature is 300 kelvin, uh, the final temperature is 400 kelvin, and the heat capacity is 5 joules per kelvin.",
          "asr_output_deepgram": "Hey. Could you, work out the entropy change for a process? Oh, the initial temperature is three hundred Kelvin. The final temperature is four hundred Kelvin, and the heat capacity is five joules per Kelvin.",
          "clarifications": {
            "initial_temperature": "300K",
            "final_temperature": "400K",
            "heat_capacity": "5J/K"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_entropy_change",
        "description": "Calculate the entropy change for an isothermal and reversible process.",
        "parameters": {
          "type": "dict",
          "properties": {
            "initial_temp": {
              "type": "integer",
              "description": "The initial temperature in Kelvin."
            },
            "final_temp": {
              "type": "integer",
              "description": "The final temperature in Kelvin."
            },
            "heat_capacity": {
              "type": "integer",
              "description": "The heat capacity in J/K."
            },
            "isothermal": {
              "type": "boolean",
              "description": "Whether the process is isothermal. Default is True."
            }
          },
          "required": [
            "initial_temp",
            "final_temp",
            "heat_capacity"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_52",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the heat capacity at constant pressure for air, given its temperature is 298K and volume is 10 m^3.",
          "transcript": "Um, can you, uh, find out the heat capacity at constant pressure for air if the temperatures, like, two hundred ninety-eight Kelvin and the volumes ten cubic meters?",
          "audio_path": "BFCL_v3_simple/simple_52_openai.mp3",
          "asr_output_openai": "Can you find out the heat capacity at constant pressure for air if the temperature's like 298 Kelvin and the volume's 10 cubic meters?",
          "asr_output_elevenlabs": "Um, can you, uh, find out the heat capacity at constant pressure for air if the temperature's like 298 kelvin and the volume's 10 cubic meters?",
          "asr_output_deepgram": "Can you, find out the heat capacity at constant pressure for air if the temperature's like two hundred ninety eight Kelvin and the volume's ten cubic meters?",
          "clarifications": {
            "temperature": "298K",
            "volume": "10 m^3"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calc_heat_capacity",
        "description": "Calculate the heat capacity at constant pressure of air using its temperature and volume.",
        "parameters": {
          "type": "dict",
          "properties": {
            "temp": {
              "type": "integer",
              "description": "The temperature of the gas in Kelvin."
            },
            "volume": {
              "type": "integer",
              "description": "The volume of the gas in m^3."
            },
            "gas": {
              "type": "string",
              "description": "Type of gas, with 'air' as default."
            }
          },
          "required": [
            "temp",
            "volume"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_53",
    "question": [
      [
        {
          "role": "user",
          "content": "Retrieve the sequence of DNA molecule with id `DNA123`.",
          "transcript": "Uh, right, can grab the D N A sequence for I D D N A one two three?",
          "audio_path": "BFCL_v3_simple/simple_53_openai.mp3",
          "asr_output_openai": "Ah, right, can grab the DNA sequence for ID DNA123?",
          "asr_output_elevenlabs": "Ah, right. Can grab the DNA sequence for ID DNA 123?",
          "asr_output_deepgram": "Right. Can grab the DNA sequence for ID DNA one two three?",
          "clarifications": {
            "DNA_id": "DNA123"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "fetch_DNA_sequence",
        "description": "Retrieve the sequence of a DNA molecule with the given id from a public database.",
        "parameters": {
          "type": "dict",
          "properties": {
            "DNA_id": {
              "type": "string",
              "description": "Unique ID of the DNA molecule in the database."
            },
            "format": {
              "type": "string",
              "description": "Optional parameter to get sequence in specific format (default to 'fasta')."
            },
            "upstream": {
              "type": "integer",
              "description": "Optional parameter to include certain number of base pairs upstream the DNA sequence (default to 0)."
            }
          },
          "required": [
            "DNA_id"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_54",
    "question": [
      [
        {
          "role": "user",
          "content": "Identify the protein sequence of a given human gene 'BRCA1'.",
          "transcript": "Um, right, can you get the protein sequence for the human gene B-R-C-A-1?",
          "audio_path": "BFCL_v3_simple/simple_54_openai.mp3",
          "asr_output_openai": "Um, right, can you get the protein sequence for the human gene BRCA1?",
          "asr_output_elevenlabs": "Um, right. Can you get the protein sequence for the human gene BRCA1?",
          "asr_output_deepgram": "Right. Can you get the protein sequence for the human gene b r c a one?",
          "clarifications": {
            "gene_name": "BRCA1"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_protein_sequence",
        "description": "Retrieve the protein sequence encoded by a human gene.",
        "parameters": {
          "type": "dict",
          "properties": {
            "gene": {
              "type": "string",
              "description": "The human gene of interest."
            },
            "species": {
              "type": "string",
              "description": "The species for which the gene is to be analyzed.",
              "default": "Homo sapiens"
            }
          },
          "required": [
            "gene"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_56",
    "question": [
      [
        {
          "role": "user",
          "content": "What are the names of proteins found in the plasma membrane?",
          "transcript": "Hey, uh, could you, like, tell me what proteinsre in plasma membrane?",
          "audio_path": "BFCL_v3_simple/simple_56_openai.mp3",
          "asr_output_openai": "Hey, uh, could you like, tell me what proteins re in plasma membrane?",
          "asr_output_elevenlabs": "Hey, could you like tell me what proteins re in plasma membrane?",
          "asr_output_deepgram": "Hey. Could you, like, tell me what proteins re in plasma membrane?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "cellbio.get_proteins",
        "description": "Get the list of proteins in a specific cell compartment.",
        "parameters": {
          "type": "dict",
          "properties": {
            "cell_compartment": {
              "type": "string",
              "description": "The specific cell compartment."
            },
            "include_description": {
              "type": "boolean",
              "description": "Set true if you want a brief description of each protein.",
              "default": "false"
            }
          },
          "required": [
            "cell_compartment"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_57",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the cell density in a sample with an optical density of 0.6, where the experiment dilution is 5 times.",
          "transcript": "Um, can you work out cell density in a sample with, uh, an optical density of zero point six and a five times dilution?",
          "audio_path": "BFCL_v3_simple/simple_57_openai.mp3",
          "asr_output_openai": "Um, can you work out cell density in a sample with an optical density of 0.6 and a five times dilution?",
          "asr_output_elevenlabs": "Um, can you work out cell density in a sample with, uh, an optical density of 0.6 and a five times dilution?",
          "asr_output_deepgram": "Can you work out cell density in a sample with, an optical density of zero point six and a five times dilution?",
          "clarifications": {
            "optical_density": "0.6",
            "dilution_factor": "5"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_cell_density",
        "description": "Calculate the cell density of a biological sample based on its optical density and the experiment dilution.",
        "parameters": {
          "type": "dict",
          "properties": {
            "optical_density": {
              "type": "float",
              "description": "The optical density of the sample, usually obtained from a spectrophotometer reading."
            },
            "dilution": {
              "type": "integer",
              "description": "The dilution factor applied during the experiment."
            },
            "calibration_factor": {
              "type": "float",
              "description": "The calibration factor to adjust the density, default value is 1e9 assuming cell density is in CFU/mL."
            }
          },
          "required": [
            "optical_density",
            "dilution"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_58",
    "question": [
      [
        {
          "role": "user",
          "content": "What is the function of ATP synthase in mitochondria?",
          "transcript": "Hey, uh, whats ATP, thats A-T-P, synthase, thats S-Y-N-T-H-A-S-E, do in mitochondria, thats M-I-T-O-C-H-O-N-D-R-I-A, mitochondria?",
          "audio_path": "BFCL_v3_simple/simple_58_openai.mp3",
          "asr_output_openai": "Hey, uh, what's ATP, that's A-T-P, synthase, that's S-Y-N-T-H-A-S-E, do in mitochondria, that's M-I-T-O-C-H-O-N-D-R-I-A? Mitochondria?",
          "asr_output_elevenlabs": "Hey, uh, what's ATP? That's A-T-P. Synthase, that's S-Y-N-T-H-A-S-E. Do in mitochondria, that's M-I-T-O-C-H-O-N-D-R-I-A. Mitochondria?",
          "asr_output_deepgram": "Hey. What's ATP? That's ATP. Synthase, that's s y n t h a s e, due in mitochondria. That's m I t o c h o n d r I a. Mitochondria?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "cell_biology.function_lookup",
        "description": "Look up the function of a given molecule in a specified organelle.",
        "parameters": {
          "type": "dict",
          "properties": {
            "molecule": {
              "type": "string",
              "description": "The molecule of interest."
            },
            "organelle": {
              "type": "string",
              "description": "The organelle of interest."
            },
            "specific_function": {
              "type": "boolean",
              "description": "If set to true, a specific function of the molecule within the organelle will be provided, if such information exists."
            }
          },
          "required": [
            "molecule",
            "organelle",
            "specific_function"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_59",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the molecular weight of Glucose (C6H12O6) in grams/mole.",
          "transcript": "Um, hey, whats the molecular weight of Glucose, C six H twelve O six, in grams per mole?",
          "audio_path": "BFCL_v3_simple/simple_59_openai.mp3",
          "asr_output_openai": "Um, hey, what's the molecular weight of glucose, C6H12O6, in grams per mole?",
          "asr_output_elevenlabs": "Um, hey! What's the molecular weight of glucose, C6H12O6 in grams per mole?",
          "asr_output_deepgram": "Hey. What's the molecular weight of glucose? C six h twelve o six in grams per mole?",
          "clarifications": {
            "compound_formula": "C6H12O6",
            "unit": "grams/mole"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_molecular_weight",
        "description": "Calculate the molecular weight of a compound given the compound formula.",
        "parameters": {
          "type": "dict",
          "properties": {
            "compound": {
              "type": "string",
              "description": "The molecular formula of the compound."
            },
            "to_unit": {
              "type": "string",
              "description": "The unit in which to return the result."
            }
          },
          "required": [
            "compound",
            "to_unit"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_60",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the type of gene mutation based on SNP (Single Nucleotide Polymorphism) ID rs6034464.",
          "transcript": "Uh, can you tell me the gene mutation type for SNP ID R-S-six zero three forty-four sixty-four, its R-S-six zero three forty-four sixty-four?",
          "audio_path": "BFCL_v3_simple/simple_60_openai.mp3",
          "asr_output_openai": "Can you tell me the gene mutation type for SNP ID rs60344464?",
          "asr_output_elevenlabs": "Uh, can you tell me the gene mutation type for SNP ID RS6034464? It's RS6034464.",
          "asr_output_deepgram": "Can you tell me the gene mutation type for SNP ID r s six zero three forty four sixty four? It's r s six zero three forty four sixty four.",
          "clarifications": {
            "snp_id": "rs6034464"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "mutation_type.find",
        "description": "Finds the type of a genetic mutation based on its SNP (Single Nucleotide Polymorphism) ID.",
        "parameters": {
          "type": "dict",
          "properties": {
            "snp_id": {
              "type": "string",
              "description": "The ID of the Single Nucleotide Polymorphism (SNP) mutation."
            },
            "species": {
              "type": "string",
              "description": "Species in which the SNP occurs, default is 'Homo sapiens' (Humans)."
            }
          },
          "required": [
            "snp_id"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_61",
    "question": [
      [
        {
          "role": "user",
          "content": "Predict whether a person with weight 150lbs and height 5ft 10in who is lightly active will get type 2 diabetes.",
          "transcript": "Um, can you, like, guess if someone weighing one hundred fifty pounds and, uh, standing five foot ten, whos lightly active,ll get type two diabetes?",
          "audio_path": "BFCL_v3_simple/simple_61_openai.mp3",
          "asr_output_openai": "Um, can you like guess if someone weighing 150 pounds and standing five foot ten who's lightly active'll get type 2 diabetes?",
          "asr_output_elevenlabs": "Um, can you like guess if someone weighing 150 pounds and uh standing five foot ten who's lightly active'll get type two diabetes?",
          "asr_output_deepgram": "Can you, like, guess if someone weighing a hundred fifty pounds and, standing five foot ten who's lightly active or get type two diabetes?",
          "clarifications": {
            "weight": "150lbs",
            "height": "5ft 10in",
            "activity_level": "lightly active"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "diabetes_prediction",
        "description": "Predict the likelihood of diabetes type 2 based on a person's weight and height.",
        "parameters": {
          "type": "dict",
          "properties": {
            "weight": {
              "type": "integer",
              "description": "Weight of the person in lbs."
            },
            "height": {
              "type": "integer",
              "description": "Height of the person in inches."
            },
            "activity_level": {
              "type": "string",
              "enum": [
                "sedentary",
                "lightly active",
                "moderately active",
                "very active",
                "extra active"
              ],
              "description": "Physical activity level of the person."
            }
          },
          "required": [
            "weight",
            "height",
            "activity_level"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_62",
    "question": [
      [
        {
          "role": "user",
          "content": "Analyze the DNA sequence 'AGTCGATCGAACGTACGTACG' for any potential substitution mutations based on a reference sequence 'AGTCCATCGAACGTACGTACG'.",
          "transcript": "Uh, check D N A sequence AGTCGATCGAACGTACGTACG for, like, any substitution mutations using reference sequence AGTCCATCGAACGTACG, okay?",
          "audio_path": "BFCL_v3_simple/simple_62_openai.mp3",
          "asr_output_openai": "Uh, check DNA sequence AGT-CGAT-CGAT for, like, any substitution mutations using reference sequence AGT-CAT-CGAT, okay?",
          "asr_output_elevenlabs": "Uh, check DNA sequence AGTCGATCGAT for like any substitution mutations using reference sequence AGTCATCGAT, okay?",
          "asr_output_deepgram": "Check DNA sequence, a g t c g a t c g a t for, like, any substitution mutations using reference sequence a g t c a t c g a t. Okay?",
          "clarifications": {
            "dna_sequence": "AGTCGATCGAACGTACGTACG",
            "reference_sequence": "AGTCCATCGAACGTACGTACG"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "analyze_dna_sequence",
        "description": "Analyzes the DNA sequence based on a reference sequence and return any potential mutations.",
        "parameters": {
          "type": "dict",
          "properties": {
            "sequence": {
              "type": "string",
              "description": "The DNA sequence to be analyzed."
            },
            "reference_sequence": {
              "type": "string",
              "description": "The reference DNA sequence."
            },
            "mutation_type": {
              "type": "string",
              "enum": [
                "insertion",
                "deletion",
                "substitution"
              ],
              "description": "Type of the mutation to be looked for in the sequence. Default to 'substitution'."
            }
          },
          "required": [
            "sequence",
            "reference_sequence"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_63",
    "question": [
      [
        {
          "role": "user",
          "content": "Find out how genetically similar a human and a chimp are in percentage.",
          "transcript": "Um, could you tell me the percent of, uh, genetic similarity between humans and chimps?",
          "audio_path": "BFCL_v3_simple/simple_63_openai.mp3",
          "asr_output_openai": "Um, could you tell me the percent of genetic similarity between humans and chimps?",
          "asr_output_elevenlabs": "Um, could you tell me the percent of, uh, genetic similarity between humans and chimps?",
          "asr_output_deepgram": "Could you tell me the percent of, genetic similarity between humans and chimps?",
          "clarifications": {
            "species1": "human",
            "species2": "chimp"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "genetics.calculate_similarity",
        "description": "Calculates the genetic similarity between two species based on their DNA sequences.",
        "parameters": {
          "type": "dict",
          "properties": {
            "species1": {
              "type": "string",
              "description": "The first species to compare."
            },
            "species2": {
              "type": "string",
              "description": "The second species to compare."
            },
            "format": {
              "type": "string",
              "description": "The format of the result (percentage or fraction). Default is percentage."
            }
          },
          "required": [
            "species1",
            "species2"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_64",
    "question": [
      [
        {
          "role": "user",
          "content": "What is the genotype frequency of AA genotype in a population, given that allele frequency of A is 0.3?",
          "transcript": "Hey, let me think... whats the genotype frequency of, uh, the AA type if the allele frequency for A is zero point three?",
          "audio_path": "BFCL_v3_simple/simple_64_openai.mp3",
          "asr_output_openai": "Hey, let me think... What's the genotype frequency of the AA type if the allele frequency for A is 0.3?",
          "asr_output_elevenlabs": "Hey, let me think. What's the genotype frequency of the AA type if the allele frequency for A is 0.3?",
          "asr_output_deepgram": "Hey. Let me think. What's the genotype frequency of, the AA type if the allele frequency for a is zero point three?",
          "clarifications": {
            "genotype": "AA",
            "allele_frequency": "0.3"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_genotype_frequency",
        "description": "Calculate the frequency of homozygous dominant genotype based on the allele frequency using Hardy Weinberg Principle.",
        "parameters": {
          "type": "dict",
          "properties": {
            "allele_frequency": {
              "type": "float",
              "description": "The frequency of the dominant allele in the population."
            },
            "genotype": {
              "type": "string",
              "description": "The genotype which frequency is needed.",
              "enum": [
                "AA",
                "Aa",
                "aa"
              ]
            }
          },
          "required": [
            "allele_frequency",
            "genotype"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_65",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the Population Density for Brazil in 2022 if the population is 213 million and the land area is 8.5 million square kilometers.",
          "transcript": "Um, can you figure out Brazils population density for twenty-twenty-two? The populations two hundred thirteen million and, uh, the land area is eight point five million square kilometers.",
          "audio_path": "BFCL_v3_simple/simple_65_openai.mp3",
          "asr_output_openai": "Um, can you figure out Brazil's population density for 2022? The population's 213 million, and, uh, the land area is 8.5 million square kilometers.",
          "asr_output_elevenlabs": "Um, can you figure out Brazil's population density for 2022? Eh, the population's 213 million, and, uh, the land area is 8.5 million square kilometers.",
          "asr_output_deepgram": "Can you figure out Brazil's population density for twenty twenty two? The population's two hundred thirteen million, and, the land area is eight point five million square kilometers.",
          "clarifications": {
            "country_name": "Brazil",
            "year": "2022",
            "population": "213 million",
            "land_area": "8.5 million square kilometers"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_density",
        "description": "Calculate the population density of a specific country in a specific year.",
        "parameters": {
          "type": "dict",
          "properties": {
            "country": {
              "type": "string",
              "description": "The country for which the density needs to be calculated."
            },
            "year": {
              "type": "string",
              "description": "The year in which the density is to be calculated."
            },
            "population": {
              "type": "integer",
              "description": "The population of the country."
            },
            "land_area": {
              "type": "integer",
              "description": "The land area of the country in square kilometers."
            }
          },
          "required": [
            "country",
            "year",
            "population",
            "land_area"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_66",
    "question": [
      [
        {
          "role": "user",
          "content": "Get me data on average precipitation in the Amazon rainforest for the last six months.",
          "transcript": "Um, can get the average rainfall data for the Amazon rainforest over the past six months, okay?",
          "audio_path": "BFCL_v3_simple/simple_66_openai.mp3",
          "asr_output_openai": "Can get the average rainfall data for the Amazon rainforest over the past six months?",
          "asr_output_elevenlabs": "Um, can get the average rainfall data for the Amazon rainforest over the past six months? Okay?",
          "asr_output_deepgram": "Can get the average rainfall data for the Amazon rainforest over the past six months? Okay?",
          "clarifications": {
            "location": "Amazon rainforest",
            "time_frame": "last six months"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "ecology_data.precipitation_stats",
        "description": "Retrieve precipitation data for a specified location and time period.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The name of the location, e.g., 'Amazon rainforest'."
            },
            "time_frame": {
              "type": "string",
              "enum": [
                "six_months",
                "year",
                "five_years"
              ],
              "description": "The time period for which data is required."
            }
          },
          "required": [
            "location",
            "time_frame"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_67",
    "question": [
      [
        {
          "role": "user",
          "content": "Identify a small green bird in forest.",
          "transcript": "Um, can you spot small green bird in the forest?",
          "audio_path": "BFCL_v3_simple/simple_67_openai.mp3",
          "asr_output_openai": "Um, can you spot small green bird in the forest?",
          "asr_output_elevenlabs": "Um, can you spot small green bird in the forest?",
          "asr_output_deepgram": "Can you spot small green bird in the forest?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "identify_bird",
        "description": "Identify a bird species based on certain characteristics.",
        "parameters": {
          "type": "dict",
          "properties": {
            "color": {
              "type": "string",
              "description": "Color of the bird."
            },
            "habitat": {
              "type": "string",
              "description": "Habitat of the bird."
            },
            "size": {
              "type": "string",
              "enum": [
                "small",
                "medium",
                "large"
              ],
              "description": "Size of the bird. Default is 'small'"
            }
          },
          "required": [
            "color",
            "habitat"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_68",
    "question": [
      [
        {
          "role": "user",
          "content": "Predict the growth of forest in Yellowstone National Park for the next 5 years including human impact.",
          "transcript": "Uh, can you maybe guess how the forest in Yellowstone National Park will grow over the next five years, considering human impact?",
          "audio_path": "BFCL_v3_simple/simple_68_openai.mp3",
          "asr_output_openai": "Uh, can you maybe guess how the forest in Yellowstone National Park will grow over the next five years, considering human impact?",
          "asr_output_elevenlabs": "Uh, can you maybe guess how the forest in Yellowstone National Park will grow over the next five years considering human impact?",
          "asr_output_deepgram": "Can you maybe guess how the forest in Yellowstone National Park will grow over the next five years considering human impact?",
          "clarifications": {
            "location": "Yellowstone National Park",
            "years": "5"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "forest_growth_forecast",
        "description": "Predicts the forest growth over the next N years based on current trends.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The location where you want to predict forest growth."
            },
            "years": {
              "type": "integer",
              "description": "The number of years for the forecast."
            },
            "include_human_impact": {
              "type": "boolean",
              "description": "Whether or not to include the impact of human activities in the forecast. If not provided, defaults to false."
            }
          },
          "required": [
            "location",
            "years"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_69",
    "question": [
      [
        {
          "role": "user",
          "content": "Find out the population and species of turtles in Mississippi river in 2020.",
          "transcript": "Hey, uh, can you say the population and species of turtles in the Mississippi River for about twenty-twenty?",
          "audio_path": "BFCL_v3_simple/simple_69_openai.mp3",
          "asr_output_openai": "Hey, uh, can you say the population and species of turtles in the Mississippi River for about 2020?",
          "asr_output_elevenlabs": "Hey, uh, can you say the population and species of turtles in the Mississippi River for about twenty-twenty?",
          "asr_output_deepgram": "Hey. Can you say the population and species of turtles in the Mississippi River for about twenty twenty?",
          "clarifications": {
            "location": "Mississippi river",
            "year": "2020"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "ecology.get_turtle_population",
        "description": "Get the population and species of turtles in a specific location.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The name of the location."
            },
            "year": {
              "type": "integer",
              "description": "The year of the data requested. Default is 2001."
            },
            "species": {
              "type": "boolean",
              "description": "Whether to include species information. Default is false."
            }
          },
          "required": [
            "location"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_70",
    "question": [
      [
        {
          "role": "user",
          "content": "What is the carbon footprint of a gas-powered vehicle driving 1500 miles in a year?",
          "transcript": "Hey, whats, uh, carbon footprint for a gas car going one thousand five hundred miles a year?",
          "audio_path": "BFCL_v3_simple/simple_70_openai.mp3",
          "asr_output_openai": "Hey, what's a carbon footprint for a gas car going 1,500 miles a year?",
          "asr_output_elevenlabs": "Hey, what's a carbon footprint for a gas car going 1,500 miles a year?",
          "asr_output_deepgram": "Hey. What's a carbon footprint for a gas car going one thousand five hundred miles a year?",
          "clarifications": {
            "vehicle_type": "gas-powered",
            "miles_driven": "1500"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_vehicle_emission",
        "description": "Calculate the annual carbon emissions produced by a specific type of vehicle based on mileage.",
        "parameters": {
          "type": "dict",
          "properties": {
            "vehicle_type": {
              "type": "string",
              "description": "The type of vehicle. 'gas' refers to a gasoline vehicle, 'diesel' refers to a diesel vehicle, and 'EV' refers to an electric vehicle."
            },
            "miles_driven": {
              "type": "integer",
              "description": "The number of miles driven per year."
            },
            "emission_factor": {
              "type": "float",
              "description": "Optional emission factor to calculate emissions, in g/mile. Default factor is 355.48."
            }
          },
          "required": [
            "vehicle_type",
            "miles_driven"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_71",
    "question": [
      [
        {
          "role": "user",
          "content": "Generate a DNA sequence with 100 bases including more G (Guanine) and C (Cytosine).",
          "transcript": "Um, can ya create a DNA sequence with, uh, about one hundred bases, but make sure its got more G, for Guanine, and C, for Cytosine?",
          "audio_path": "BFCL_v3_simple/simple_71_openai.mp3",
          "asr_output_openai": "Um, can you create a DNA sequence with about 100 bases, but make sure it's got more G (for guanine) and C (for cytosine)?",
          "asr_output_elevenlabs": "Um, can you create a DNA sequence with, uh, about 100 bases? But make sure it's got more G for guanine and C for cytosine.",
          "asr_output_deepgram": "Can you create a DNA sequence with, about one hundred bases, but make sure it's got more g for guanine and c for cytosine?",
          "clarifications": {
            "sequence_length": "100",
            "nucleotide_preferences": "G (Guanine) and C (Cytosine)"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "generate_DNA_sequence",
        "description": "Generate a random DNA sequence with a specific length and nucleotide preference.",
        "parameters": {
          "type": "dict",
          "properties": {
            "length": {
              "type": "integer",
              "description": "The length of the DNA sequence to be generated."
            },
            "preferences": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "A",
                  "T",
                  "C",
                  "G"
                ]
              },
              "description": "Preferred nucleotides to include more frequently in the DNA sequence."
            }
          },
          "required": [
            "length",
            "preferences"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_72",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the expected evolutionary fitness of a creature, with trait A contributing to 40% of the fitness and trait B contributing 60%, if trait A has a value of 0.8 and trait B a value of 0.7.",
          "transcript": "Can you figure out the evolutionary fitness for a creature where trait As forty percent is at zero point eight, and trait Bs sixty percent is at zero point seven?",
          "audio_path": "BFCL_v3_simple/simple_72_openai.mp3",
          "asr_output_openai": "Can you figure out the evolutionary fitness for a creature where trait A's 40% is at 0.8, and trait B's 60% is at 0.7?",
          "asr_output_elevenlabs": "Can you figure out the evolutionary fitness for a creature where Trait A's 40% is at 0.8 and Trait B's 60% is at 0.7?",
          "asr_output_deepgram": "Can you figure out the evolutionary fitness for a creature where trait a's forty percent is at zero point eight and trait b's sixty percent is at zero point seven?",
          "clarifications": {
            "trait_A_contribution": "40%",
            "trait_B_contribution": "60%",
            "trait_A_value": "0.8",
            "trait_B_value": "0.7"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_fitness",
        "description": "Calculate the expected evolutionary fitness of a creature based on the individual values and contributions of its traits.",
        "parameters": {
          "type": "dict",
          "properties": {
            "trait_values": {
              "type": "array",
              "items": {
                "type": "float"
              },
              "description": "List of trait values, which are decimal numbers between 0 and 1, where 1 represents the trait maximally contributing to fitness."
            },
            "trait_contributions": {
              "type": "array",
              "items": {
                "type": "float"
              },
              "description": "List of the percentage contributions of each trait to the overall fitness, which must sum to 1."
            }
          },
          "required": [
            "trait_values",
            "trait_contributions"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_73",
    "question": [
      [
        {
          "role": "user",
          "content": "What's the projected population growth in United States in the next 20 years?",
          "transcript": "Um, can you say what the expected population growth for the United States will be over the next, uh, approximately twenty years?",
          "audio_path": "BFCL_v3_simple/simple_73_openai.mp3",
          "asr_output_openai": "Can you say what the expected population growth for the United States will be over the next approximately 20 years?",
          "asr_output_elevenlabs": "Um, can you say what the expected population growth for the United States will be over the next, uh, approximately 20 years?",
          "asr_output_deepgram": "Can you say what the expected population growth for the United States will be over the next, approximately twenty years?",
          "clarifications": {
            "country": "United States",
            "projection_years": "20"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "population_projections",
        "description": "Calculates the projected population growth based on the current growth rate.",
        "parameters": {
          "type": "dict",
          "properties": {
            "country": {
              "type": "string",
              "description": "The country for which to calculate the population projection."
            },
            "years": {
              "type": "integer",
              "description": "Number of years for the projection."
            },
            "growth_rate": {
              "type": "float",
              "description": "Optional parameter to specify the growth rate, in percentage. Default is 1.2."
            }
          },
          "required": [
            "country",
            "years"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_74",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the evolution rate of a bacteria population, start with 5000 bacteria, each bacteria duplicates every hour for 6 hours.",
          "transcript": "Uh, calculate how bacteria population evolves, starting with five thousand. Oh, each one, like, doubles every hour for six hours.",
          "audio_path": "BFCL_v3_simple/simple_74_openai.mp3",
          "asr_output_openai": "Uh, calculate how bacteria population evolves starting with 5,000. Oh, each one, like, doubles every hour for 6 hours.",
          "asr_output_elevenlabs": "Uh, calculate how bacteria population evolves starting with 5,000. Oh, each one like doubles every hour for 6 hours.",
          "asr_output_deepgram": "Calculate how bacteria population evolves starting with five thousand. Oh, each one, like, doubles every hour for six hours.",
          "clarifications": {
            "start_population": "5000",
            "duplication_frequency": "every hour",
            "duration": "6 hours"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_bacteria_evolution_rate",
        "description": "Calculate the evolution rate of bacteria given the starting number, duplication frequency and total duration.",
        "parameters": {
          "type": "dict",
          "properties": {
            "start_population": {
              "type": "integer",
              "description": "The starting population of bacteria."
            },
            "duplication_frequency": {
              "type": "integer",
              "description": "The frequency of bacteria duplication per hour."
            },
            "duration": {
              "type": "integer",
              "description": "Total duration in hours."
            },
            "generation_time": {
              "type": "integer",
              "description": "The average generation time of the bacteria in minutes. Default is 20 minutes"
            }
          },
          "required": [
            "start_population",
            "duplication_frequency",
            "duration"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_75",
    "question": [
      [
        {
          "role": "user",
          "content": "Estimate the population size of elephants of 35000 in the next 5 years given the current growth rate of 0.015.",
          "transcript": "Uh, with a growth rate of zero point zero one five, can you estimate the elephant population from thirty-five thousand over the next five years?",
          "audio_path": "BFCL_v3_simple/simple_75_openai.mp3",
          "asr_output_openai": "With a growth rate of 0.015, can you estimate the elephant population from 35,000 over the next five years?",
          "asr_output_elevenlabs": "Uh, with a growth rate of 0.015, can you estimate the elephant population from 35,000 over the next five years?",
          "asr_output_deepgram": "With a growth rate of zero point zero one five, can you estimate the elephant population from thirty five thousand over the next five years?",
          "clarifications": {
            "current_population": "35000",
            "years": "5",
            "growth_rate": "0.015"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "elephant_population_estimate",
        "description": "Estimate future population of elephants given current population and growth rate.",
        "parameters": {
          "type": "dict",
          "properties": {
            "current_population": {
              "type": "integer",
              "description": "The current number of elephants."
            },
            "growth_rate": {
              "type": "float",
              "description": "The annual population growth rate of elephants."
            },
            "years": {
              "type": "integer",
              "description": "The number of years to project the population."
            }
          },
          "required": [
            "current_population",
            "growth_rate",
            "years"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_76",
    "question": [
      [
        {
          "role": "user",
          "content": "Get me the predictions of the evolutionary rate for Homo Sapiens for next 50 years using Darwin model",
          "transcript": "Could you give me the Darwin models prediction of Homo Sapiens evolutionary rate for the next fifty years, please?",
          "audio_path": "BFCL_v3_simple/simple_76_openai.mp3",
          "asr_output_openai": "Could you give me the Darwin model's prediction of Homo sapiens' evolutionary rate for the next 50 years, please?",
          "asr_output_elevenlabs": "Could you give me the Darwin model's prediction of homo sapiens' evolutionary rate for the next 50 years, please?",
          "asr_output_deepgram": "Could you give me the Darwin model's prediction of Homo sapiens' evolutionary rate for the next fifty years, please?",
          "clarifications": {
            "species_name": "Homo Sapiens",
            "prediction_years": "50",
            "prediction_model": "Darwin"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "prediction.evolution",
        "description": "Predict the evolutionary rate for a specific species for a given timeframe.",
        "parameters": {
          "type": "dict",
          "properties": {
            "species": {
              "type": "string",
              "description": "The species that the evolution rate will be predicted for."
            },
            "years": {
              "type": "integer",
              "description": "Number of years for the prediction."
            },
            "model": {
              "type": "string",
              "description": "The model used to make the prediction, options: 'Darwin', 'Lamarck', default is 'Darwin'."
            }
          },
          "required": [
            "species",
            "years"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_77",
    "question": [
      [
        {
          "role": "user",
          "content": "Find a nearby restaurant that serves vegan food in Los Angeles.",
          "transcript": "Um, hey, can you look up vegan restaurant near me in L.A.?",
          "audio_path": "BFCL_v3_simple/simple_77_openai.mp3",
          "asr_output_openai": "Um, hey, can you look up vegan restaurant near me in LA?",
          "asr_output_elevenlabs": "Um, hey, can you look up vegan restaurant near me in LA?",
          "asr_output_deepgram": "Hey. Can you look up vegan restaurant near me in LA?",
          "clarifications": {
            "location": "Los Angeles"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "restaurant.find_nearby",
        "description": "Locate nearby restaurants based on specific dietary preferences.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city and state, e.g. Los Angeles, CA"
            },
            "dietary_preference": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Vegan",
                  "Vegetarian",
                  "Gluten-free",
                  "Dairy-free",
                  "Nut-free"
                ]
              },
              "description": "Dietary preference. Default is empty list."
            }
          },
          "required": [
            "location"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_78",
    "question": [
      [
        {
          "role": "user",
          "content": "Get the average temperature in Austin for the next 3 days in Celsius.",
          "transcript": "Um, can you tell me the average temperature in Austin for the next, uh, three days in Celsius?",
          "audio_path": "BFCL_v3_simple/simple_78_openai.mp3",
          "asr_output_openai": "Um, can you tell me the average temperature in Austin for the next, uh, three days in Celsius?",
          "asr_output_elevenlabs": "Um, can you tell me the average temperature in Austin for the next, uh, three days in Celsius?",
          "asr_output_deepgram": "Can you tell me the average temperature in Austin for the next, three days in Celsius?",
          "clarifications": {
            "location": "Austin",
            "days": "3",
            "temperature_unit": "Celsius"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "average_temperature",
        "description": "Retrieves the average temperature for a specific location over the defined timeframe.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city to get the average temperature for. It should format as city name such as Boston."
            },
            "days": {
              "type": "integer",
              "description": "The number of days to get the average temperature for."
            },
            "temp_unit": {
              "type": "string",
              "description": "The temperature unit ('Celsius' or 'Fahrenheit'). Default is 'Fahrenheit'."
            }
          },
          "required": [
            "location",
            "days"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_79",
    "question": [
      [
        {
          "role": "user",
          "content": "Create a histogram for student scores with the following data: 85, 90, 88, 92, 86, 89, 91 and set bin range to 5.",
          "transcript": "Lemme see... could you create a histogram using these student scores: eighty-five, ninety, eighty-eight, ninety-two, eighty-six, eighty-nine, ninety-one, with a bin range of five?",
          "audio_path": "BFCL_v3_simple/simple_79_openai.mp3",
          "asr_output_openai": "Let me see. Could you create a histogram using these student scores: 85, 90, 88, 92, 86, 89, 91, with a bin range of 5?",
          "asr_output_elevenlabs": "Let me see. Could you create a histogram using these student scores, 85, 90, 88, 92, 86, 89, 91, with a bin range of five?",
          "asr_output_deepgram": "Let me see. Could you create a histogram using these student scores? Eighty five, ninety, eighty eight, ninety two, eighty six, eighty nine, ninety one, with a bin range of five?",
          "clarifications": {
            "data_values": "85, 90, 88, 92, 86, 89, 91",
            "bin_range": "5"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "create_histogram",
        "description": "Create a histogram based on provided data.",
        "parameters": {
          "type": "dict",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "The data for which histogram needs to be plotted."
            },
            "bins": {
              "type": "integer",
              "description": "The number of equal-width bins in the range. Default is 10."
            }
          },
          "required": [
            "data",
            "bins"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_80",
    "question": [
      [
        {
          "role": "user",
          "content": "I want to find 5 restaurants nearby my location, Manhattan, offering Thai food and a vegan menu.",
          "transcript": "Hey, um, can you get like five Thai restaurants with vegan options near me in Manhattan, okay?",
          "audio_path": "BFCL_v3_simple/simple_80_openai.mp3",
          "asr_output_openai": "Hey, um, can you get like five Thai restaurants with vegan options near me in Manhattan, OK?",
          "asr_output_elevenlabs": "Hey, um, can you get like five Thai restaurants with vegan options near me in Manhattan? Okay.",
          "asr_output_deepgram": "Hey. Can you get, like, five Thai restaurants with vegan options near me in Manhattan? Okay?",
          "clarifications": {
            "location": "Manhattan",
            "food_type": "Thai",
            "number_of_results": "5",
            "dietary_requirements": "vegan"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "find_restaurants",
        "description": "Locate nearby restaurants based on location and food preferences.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The specific location or area. The location should be in the format of District, City."
            },
            "food_type": {
              "type": "string",
              "description": "The type of food preferred."
            },
            "number": {
              "type": "integer",
              "description": "Number of results to return."
            },
            "dietary_requirements": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Special dietary requirements, e.g. vegan, gluten-free. Default is empty list."
            }
          },
          "required": [
            "location",
            "food_type",
            "number"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_81",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the fastest route from San Francisco to Los Angeles with toll roads avoided.",
          "transcript": "Whats quickest way, uh, from San Francisco to Los Angeles without usin toll roads, right?",
          "audio_path": "BFCL_v3_simple/simple_81_openai.mp3",
          "asr_output_openai": "What's quickest way from San Francisco to Los Angeles without using toll roads, right?",
          "asr_output_elevenlabs": "What's quickest way, uh, from San Francisco to Los Angeles without using toll roads, right?",
          "asr_output_deepgram": "What's quickest way, from San Francisco to Los Angeles without using toll roads? Right?",
          "clarifications": {
            "start_location": "San Francisco",
            "end_location": "Los Angeles"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "map_routing.fastest_route",
        "description": "Finds the fastest route from one location to another, with an option to avoid toll roads.",
        "parameters": {
          "type": "dict",
          "properties": {
            "start_location": {
              "type": "string",
              "description": "The starting location for the journey."
            },
            "end_location": {
              "type": "string",
              "description": "The destination for the journey."
            },
            "avoid_tolls": {
              "type": "boolean",
              "description": "Option to avoid toll roads during the journey. Default is false."
            }
          },
          "required": [
            "start_location",
            "end_location"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_82",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the average of list of integers [12, 15, 18, 20, 21, 26, 30].",
          "transcript": "Hey, could you find average of these numbers: twelve, fifteen, eighteen, twenty, twenty-one, twenty-six, and thirty, please?",
          "audio_path": "BFCL_v3_simple/simple_82_openai.mp3",
          "asr_output_openai": "Hey, could you find average of these numbers 12, 15, 18, 20, 21, 26, and 30 please?",
          "asr_output_elevenlabs": "Hey, could you find average of these numbers 12, 15, 18, 20, 21, 26, and 30, please?",
          "asr_output_deepgram": "Hey. Could you find average of these numbers? Twelve, fifteen, eighteen, twenty, twenty one, twenty six, and thirty, please?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_average",
        "description": "Calculates the average of a list of numbers.",
        "parameters": {
          "type": "dict",
          "properties": {
            "numbers": {
              "type": "array",
              "items": {
                "type": "float"
              },
              "description": "The list of numbers to calculate the average of."
            }
          },
          "required": [
            "numbers"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_83",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the distance between two GPS coordinates (33.4484 N, 112.0740 W) and (34.0522 N, 118.2437 W) in miles.",
          "transcript": "Um, find out the distance in miles between these GPS coordinates: thirty-three point four four eight four North, one hundred twelve point zero seven four zero West, and thirty-four point zero five two two North, one hundred eighteen point two four three seven West, right?",
          "audio_path": "BFCL_v3_simple/simple_83_openai.mp3",
          "asr_output_openai": "Find out the distance in miles between these GPS coordinates: 33.4484\u00b0 N, 112.0740\u00b0 W, and 34.0522\u00b0 N, 118.2437\u00b0 W, right?",
          "asr_output_elevenlabs": "Um, find out the distance in miles between these GPS coordinates, 33.4484 north, 112.0740 west, and 34.0522 north, 118.2437 west, right?",
          "asr_output_deepgram": "Find out the distance in miles between these GPS coordinates, thirty three point four four eight four north, one hundred twelve point zero seven four zero west, and thirty four point zero five two two North, one hundred eighteen point two four three seven West. Right?",
          "clarifications": {
            "first_coordinate": "(33.4484 N, 112.0740 W)",
            "second_coordinate": "(34.0522 N, 118.2437 W)",
            "distance_unit": "miles"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_distance",
        "description": "Calculate the distance between two GPS coordinates.",
        "parameters": {
          "type": "dict",
          "properties": {
            "coord1": {
              "type": "tuple",
              "description": "The first coordinate as (latitude, longitude).",
              "items": {
                "type": "float"
              }
            },
            "coord2": {
              "type": "tuple",
              "description": "The second coordinate as (latitude, longitude).",
              "items": {
                "type": "float"
              }
            },
            "unit": {
              "type": "string",
              "description": "The unit of distance. Options: 'miles', 'kilometers'."
            }
          },
          "required": [
            "coord1",
            "coord2",
            "unit"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_84",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the Body Mass Index (BMI) of a person with a weight of 85 kilograms and height of 180 cm.",
          "transcript": "Hey, um, can you work out BMI for someone whos weighin eighty-five kilograms and, uh, one eighty centimeters tall?",
          "audio_path": "BFCL_v3_simple/simple_84_openai.mp3",
          "asr_output_openai": "Hey, um, can you work out BMI for someone who's weighin' 85 kilograms and 180 centimeters tall?",
          "asr_output_elevenlabs": "Hey, um, can you work out BMI for someone who's weighing 85 kilograms and, uh, 180 centimeters tall?",
          "asr_output_deepgram": "Hey. Can you work out BMI for someone who's weighing eighty five kilograms and, one eighty centimeters tall?",
          "clarifications": {
            "weight": "85 kilograms",
            "height": "180 cm"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_bmi",
        "description": "Calculate the Body Mass Index (BMI) of a person.",
        "parameters": {
          "type": "dict",
          "properties": {
            "weight": {
              "type": "integer",
              "description": "Weight of the person in kilograms."
            },
            "height": {
              "type": "integer",
              "description": "Height of the person in centimeters."
            },
            "unit": {
              "type": "string",
              "description": "Optional parameter to choose between 'imperial' and 'metric' systems. Default is 'metric'."
            }
          },
          "required": [
            "weight",
            "height"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_85",
    "question": [
      [
        {
          "role": "user",
          "content": "What's the approximate distance between Boston, MA, and Washington, D.C. in mile?",
          "transcript": "Hey, uh, how far is it from Boston to Washington, D C, in miles?",
          "audio_path": "BFCL_v3_simple/simple_85_openai.mp3",
          "asr_output_openai": "Hey, how far is it from Boston to Washington D.C. in miles?",
          "asr_output_elevenlabs": "Hey, uh, how far is it from Boston to Washington D.C. in miles?",
          "asr_output_deepgram": "Hey. How far is it from Boston to Washington DC in miles?",
          "clarifications": {
            "start_location": "Boston, MA",
            "end_location": "Washington, D.C.",
            "units": "mile"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "geo_distance.calculate",
        "description": "Calculate the geographic distance between two given locations.",
        "parameters": {
          "type": "dict",
          "properties": {
            "start_location": {
              "type": "string",
              "description": "The starting location for the distance calculation. Specify the location in the format of City, State."
            },
            "end_location": {
              "type": "string",
              "description": "The destination location for the distance calculation. Specify the location in the format of City, State."
            },
            "units": {
              "type": "string",
              "description": "Optional. The desired units for the resulting distance ('miles' or 'kilometers'). Defaults to 'miles'."
            }
          },
          "required": [
            "start_location",
            "end_location"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_86",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the shortest distance between two cities, New York and Los Angeles, through the train and you can transfer.",
          "transcript": "Um, find the shortest train route, okay, from New York to, uh, Los Angeles, allowing for transfers.",
          "audio_path": "BFCL_v3_simple/simple_86_openai.mp3",
          "asr_output_openai": "Find the shortest train route, okay? From New York to Los Angeles, allowing for transfers.",
          "asr_output_elevenlabs": "Um, find the shortest train route, okay? From New York to, uh, Los Angeles, allowing for transfers.",
          "asr_output_deepgram": "Find the shortest train route, okay, from New York to, Los Angeles, allowing for transfers.",
          "clarifications": {
            "start_city": "New York",
            "end_city": "Los Angeles",
            "transportation_mode": "train"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "city_distance.find_shortest",
        "description": "Calculates the shortest distance between two cities via available public transportation.",
        "parameters": {
          "type": "dict",
          "properties": {
            "start_city": {
              "type": "string",
              "description": "The city you are starting from. The parameter is in the format of city name."
            },
            "end_city": {
              "type": "string",
              "description": "The city you are heading to.The parameter is in the format of city name."
            },
            "transportation": {
              "type": "string",
              "description": "Preferred mode of public transportation. Default is 'bus'."
            },
            "allow_transfer": {
              "type": "boolean",
              "description": "Allows transfer between different transportation if true. Default is false."
            }
          },
          "required": [
            "start_city",
            "end_city"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_87",
    "question": [
      [
        {
          "role": "user",
          "content": "Sort the list [5, 3, 4, 1, 2] in ascending order.",
          "transcript": "Um, could arrange the list [five, three, four, one, two] in ascending order?",
          "audio_path": "BFCL_v3_simple/simple_87_openai.mp3",
          "asr_output_openai": "Um, could arrange the list 5, 3, 4, 1, 2 in ascending order?",
          "asr_output_elevenlabs": "Um, could arrange the list five, three, four, one, two in ascending order?",
          "asr_output_deepgram": "Could arrange the list five three four one two in ascending order?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "array_sort",
        "description": "Sorts a given list in ascending or descending order.",
        "parameters": {
          "type": "dict",
          "properties": {
            "list": {
              "type": "array",
              "items": {
                "type": "float"
              },
              "description": "The list of numbers to be sorted."
            },
            "order": {
              "type": "string",
              "enum": [
                "ascending",
                "descending"
              ],
              "description": "Order of sorting."
            }
          },
          "required": [
            "list",
            "order"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_88",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the BMI (Body Mass Index) of a person who weighs 70kg and is 1.75m tall.",
          "transcript": "Um, could you, uh, find the BMI for someone who is one seventy-five meters tall and weighs seventy kilos?",
          "audio_path": "BFCL_v3_simple/simple_88_openai.mp3",
          "asr_output_openai": "Um, could you, uh, find the BMI for someone who is 1.75 meters tall and weighs 70 kilos?",
          "asr_output_elevenlabs": "Um could you uh find the BMI for someone who is 175 meters tall and weighs 70 kilos?",
          "asr_output_deepgram": "Could you, find the BMI for someone who is one seventy five meters tall and weighs seventy kilos?",
          "clarifications": {
            "weight_kg": "70kg",
            "height_m": "1.75m"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_BMI",
        "description": "Calculate the Body Mass Index (BMI) given a person's weight and height.",
        "parameters": {
          "type": "dict",
          "properties": {
            "weight_kg": {
              "type": "integer",
              "description": "The weight of the person in kilograms."
            },
            "height_m": {
              "type": "float",
              "description": "The height of the person in meters."
            }
          },
          "required": [
            "weight_kg",
            "height_m"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_89",
    "question": [
      [
        {
          "role": "user",
          "content": "Fetch all records for students studying Science in 'Bluebird High School' from the StudentDB.",
          "transcript": "Uh, right, fetch all the Science student records from Bluebird High School in the StudentDB.",
          "audio_path": "BFCL_v3_simple/simple_89_openai.mp3",
          "asr_output_openai": "Right, fetch all the science student records from Blue Bird High School in the student DB.",
          "asr_output_elevenlabs": "Uh, right. Fetch all the science student records from Bluebird High School in the student DB.",
          "asr_output_deepgram": "Right. Fetch all the science student records from Bluebird High School in the student DB.",
          "clarifications": {
            "database_name": "StudentDB",
            "school_name": "Bluebird High School"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "db_fetch_records",
        "description": "Fetch records from a specified database table based on certain conditions.",
        "parameters": {
          "type": "dict",
          "properties": {
            "database_name": {
              "type": "string",
              "description": "The name of the database."
            },
            "table_name": {
              "type": "string",
              "description": "The name of the table from which records need to be fetched."
            },
            "conditions": {
              "type": "dict",
              "properties": {
                "department": {
                  "type": "string",
                  "description": "The name of the department of students."
                },
                "school": {
                  "type": "string",
                  "description": "The name of the school students are enrolled in."
                }
              },
              "description": "The conditions based on which records are to be fetched."
            },
            "fetch_limit": {
              "type": "integer",
              "description": "Limits the number of records to be fetched. Default is 0, which means no limit."
            }
          },
          "required": [
            "database_name",
            "table_name",
            "conditions"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_90",
    "question": [
      [
        {
          "role": "user",
          "content": "Retrieve Personal Info and Job History data of a specific employee whose ID is 345 in company 'ABC Ltd.'",
          "transcript": "Um, can you grab the personal info and, uh, job history for the employee with I D three four five at A B C Ltd., right?",
          "audio_path": "BFCL_v3_simple/simple_90_openai.mp3",
          "asr_output_openai": "Can you grab the personal info and job history for the employee with ID 345 at ABC Ltd?",
          "asr_output_elevenlabs": "Um, can you grab the personal info and, uh, job history for the employee with ID 345 at ABC Limited? Right.",
          "asr_output_deepgram": "Can you grab the personal info and, job history for the employee with ID three four five at ABC Limited? Right?",
          "clarifications": {
            "company_name": "ABC Ltd.",
            "employee_id": "345"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "employee.fetch_data",
        "description": "Fetches the detailed data for a specific employee in a given company.",
        "parameters": {
          "type": "dict",
          "properties": {
            "company_name": {
              "type": "string",
              "description": "The name of the company."
            },
            "employee_id": {
              "type": "integer",
              "description": "The unique ID of the employee."
            },
            "data_field": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Personal Info",
                  "Job History",
                  "Payroll",
                  "Attendance"
                ]
              },
              "description": "Fields of data to be fetched for the employee (Optional). Default is ['Personal Info']"
            }
          },
          "required": [
            "company_name",
            "employee_id"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_91",
    "question": [
      [
        {
          "role": "user",
          "content": "Get the highest rated sushi restaurant in Boston, that opens on Sundays.",
          "transcript": "Find top-rated sushi place in Boston open on Sundays.",
          "audio_path": "BFCL_v3_simple/simple_91_openai.mp3",
          "asr_output_openai": "Find top-rated sushi place in Boston open on Sundays.",
          "asr_output_elevenlabs": "Find top rated sushi place in Boston. Open on Sundays.",
          "asr_output_deepgram": "Find top rated sushi place in Boston, open on Sundays.",
          "clarifications": {
            "location": "Boston",
            "condition": "opens on Sundays"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_restaurant",
        "description": "Retrieve highest rated restaurant given cuisine, location, and a condition.",
        "parameters": {
          "type": "dict",
          "properties": {
            "cuisine": {
              "type": "string",
              "description": "Cuisine of the restaurant."
            },
            "location": {
              "type": "string",
              "description": "City where restaurant is located."
            },
            "condition": {
              "type": "string",
              "description": "Condition to be met by the restaurant (e.g., operating days, amenities, etc.)"
            }
          },
          "required": [
            "cuisine",
            "location",
            "condition"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_92",
    "question": [
      [
        {
          "role": "user",
          "content": "Find all movies starring Leonardo DiCaprio in the year 2010 from IMDB database.",
          "transcript": "Lemme see... look up all the 2010 Leonardo DiCaprio, thats L-E-O-N-A-R-D-O D-I-C-A-P-R-I-O, Leonardo DiCaprio movies on I-M-D-B.",
          "audio_path": "BFCL_v3_simple/simple_92_openai.mp3",
          "asr_output_openai": "Let me see. Look up all the 2010 Leonardo DiCaprio, that's L-E-O-N-A-R-D-O D-I-C-A-P-R-I-O, Leonardo DiCaprio movies on IMDB.",
          "asr_output_elevenlabs": "Let me see. Look up all the 2010 Leonardo DiCaprio, that's L-E-O-N-A-R-D-O D-I-C-A-P-R-I-O, Leonardo DiCaprio movies on IMDb.",
          "asr_output_deepgram": "Let me see. Look up all the two thousand ten Leonardo DiCaprio. That's l e o n a r d o d I c a p r I o, Leonardo DiCaprio movies on IMDb.",
          "clarifications": {
            "actor_name": "Leonardo DiCaprio",
            "year": "2010",
            "database_name": "IMDB"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "imdb.find_movies_by_actor",
        "description": "Searches the database to find all movies by a specific actor within a certain year.",
        "parameters": {
          "type": "dict",
          "properties": {
            "actor_name": {
              "type": "string",
              "description": "The name of the actor."
            },
            "year": {
              "type": "integer",
              "description": "The specific year to search in."
            },
            "category": {
              "type": "string",
              "description": "The category of the film (e.g. Drama, Comedy, etc). Default is 'all'"
            }
          },
          "required": [
            "actor_name",
            "year"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_93",
    "question": [
      [
        {
          "role": "user",
          "content": "Fetch me the list of IMAX movie releases in theaters near LA for the next week.",
          "transcript": "Um, can you get me the stuff listing I M A X movies showing near L A for the next week?",
          "audio_path": "BFCL_v3_simple/simple_93_openai.mp3",
          "asr_output_openai": "Um, can you get me the stuff listing IMAX movies showing near LA for the next week?",
          "asr_output_elevenlabs": "Um, can you get me the stuff listing IMAX movies showing near LA for the next week?",
          "asr_output_deepgram": "Can you get me the stuff listing IMAX movies showing near LA for the next week?",
          "clarifications": {
            "location": "LA",
            "timeframe": "next week",
            "format": "IMAX"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_theater_movie_releases",
        "description": "Retrieve the list of movie releases in specific theaters for a specified period. in the format of city shorten name like SF.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The location of the theaters."
            },
            "timeframe": {
              "type": "integer",
              "description": "The number of days for which releases are required from current date."
            },
            "format": {
              "type": "string",
              "description": "Format of movies - could be 'IMAX', '2D', '3D', '4DX' etc. Default is 'all'"
            }
          },
          "required": [
            "location",
            "timeframe"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_94",
    "question": [
      [
        {
          "role": "user",
          "content": "Update my customer information with user id 43523 'name':'John Doe', 'email':'johndoe@email.com' in the database.",
          "transcript": "Lemme see... update the customer info in the database for user ID forty-three five twenty-three to name John Doe, thats J-O-H-N D-O-E, John Doe, and email johndoe@email.com.",
          "audio_path": "BFCL_v3_simple/simple_94_openai.mp3",
          "asr_output_openai": "Let me see. Update the customer info in the database for user ID 43523 to name John Doe, that's J-O-H-N D-O-E, John Doe, and email johndoe@email.com.",
          "asr_output_elevenlabs": "Let me see. Update the customer info in the database for user ID 43523 to name John Doe, that's J-O-H-N D-O-E, John Doe, and email john_doe@email.com.",
          "asr_output_deepgram": "Let me see. Update the customer info in the database for user ID forty three five twenty three to name John Doe. That's j o h n d o e, John Doe, and email John Doe at email dot com.",
          "clarifications": {
            "user_id": "43523",
            "update_info": "'name':'John Doe', 'email':'johndoe@email.com'"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "update_user_info",
        "description": "Update user information in the database.",
        "parameters": {
          "type": "dict",
          "properties": {
            "user_id": {
              "type": "integer",
              "description": "The user ID of the customer."
            },
            "update_info": {
              "type": "dict",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The customer's updated name."
                },
                "email": {
                  "type": "string",
                  "description": "The customer's updated email."
                }
              },
              "description": "The new information to update."
            },
            "database": {
              "type": "string",
              "description": "The database where the user's information is stored.",
              "default": "CustomerInfo"
            }
          },
          "required": [
            "user_id",
            "update_info"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_95",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the area of a triangle with base 5m and height 3m.",
          "transcript": "Hey, can you, uh, work out area of a triangle with a base of five meters and a height of three meters?",
          "audio_path": "BFCL_v3_simple/simple_95_openai.mp3",
          "asr_output_openai": "Hey, can you, uh, work out area of a triangle with a base of five meters and a height of three meters?",
          "asr_output_elevenlabs": "Hey, can you, uh, work out area of a triangle with a base of five meters and a height of three meters?",
          "asr_output_deepgram": "Hey. Can you, work out area of a triangle with a base of five meters and a height of three meters?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "calc_area_triangle",
        "description": "Calculate the area of a triangle with the formula area = 0.5 * base * height.",
        "parameters": {
          "type": "dict",
          "properties": {
            "base": {
              "type": "integer",
              "description": "The length of the base of the triangle in meters."
            },
            "height": {
              "type": "integer",
              "description": "The perpendicular height of the triangle from the base to the opposite vertex in meters."
            }
          },
          "required": [
            "base",
            "height"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_96",
    "question": [
      [
        {
          "role": "user",
          "content": "Find records in database in user table where age is greater than 25 and job is 'engineer'.",
          "transcript": "Um, can look through the database user table for records where ages over 25 and the job title is engineer, right?",
          "audio_path": "BFCL_v3_simple/simple_96_openai.mp3",
          "asr_output_openai": "Um, can look through the database user table for records where age is over 25 and the job title is Engineer, right?",
          "asr_output_elevenlabs": "Um, can look through the database user table for records where age is over 25 and the job title is engineer, right?",
          "asr_output_deepgram": "Can look through the database user table for records where age is over twenty five and the job title is engineer. Right?",
          "clarifications": {
            "table_name": "user",
            "age_condition": "age is greater than 25",
            "job_condition": "job is 'engineer'"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "database.query",
        "description": "Query the database based on certain conditions.",
        "parameters": {
          "type": "dict",
          "properties": {
            "table": {
              "type": "string",
              "description": "Name of the table to query."
            },
            "conditions": {
              "type": "array",
              "items": {
                "type": "dict",
                "properties": {
                  "field": {
                    "type": "string",
                    "description": "The field to apply the condition."
                  },
                  "operation": {
                    "type": "string",
                    "description": "The operation to be performed.",
                    "enum": [
                      "<",
                      ">",
                      "=",
                      ">=",
                      "<="
                    ]
                  },
                  "value": {
                    "type": "string",
                    "description": "The value to be compared."
                  }
                },
                "required": [
                  "field",
                  "operation",
                  "value"
                ]
              },
              "description": "Conditions for the query."
            }
          },
          "required": [
            "table",
            "conditions"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_97",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the factorial of the number 5",
          "transcript": "Let me see... can you get the factorial of five?",
          "audio_path": "BFCL_v3_simple/simple_97_openai.mp3",
          "asr_output_openai": "Let me see, can you get the factorial of five?",
          "asr_output_elevenlabs": "Let me see. Can you get the factorial of five?",
          "asr_output_deepgram": "Let me see. Can you get the factorial of five?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "math.factorial",
        "description": "Calculate the factorial of a given number.",
        "parameters": {
          "type": "dict",
          "properties": {
            "number": {
              "type": "integer",
              "description": "The number to compute factorial."
            }
          },
          "required": [
            "number"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_98",
    "question": [
      [
        {
          "role": "user",
          "content": "What will be the angle between the hour and minute hands of a clock at 6:30 PM?",
          "transcript": "Um, at six-thirty PM, whats the angle between the hour and minute hands on a clock, right?",
          "audio_path": "BFCL_v3_simple/simple_98_openai.mp3",
          "asr_output_openai": "Um, at 6:30 PM, what's the angle between the hour and minute hands on a clock? Right?",
          "asr_output_elevenlabs": "Um, at 6:30 PM, what's the angle between the hour and minute hands on a clock? Right?",
          "asr_output_deepgram": "At six thirty PM, what's the angle between the hour and minute hands on a clock? Right?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_clock_angle",
        "description": "Calculate the angle between the hour and minute hands of a clock at a given time.",
        "parameters": {
          "type": "dict",
          "properties": {
            "hours": {
              "type": "integer",
              "description": "The hour on the clock face."
            },
            "minutes": {
              "type": "integer",
              "description": "The minutes on the clock face."
            },
            "round_to": {
              "type": "integer",
              "description": "The number of decimal places to round the result to, default is 2."
            }
          },
          "required": [
            "hours",
            "minutes"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_99",
    "question": [
      [
        {
          "role": "user",
          "content": "Plot a sine wave from 0 to 2 pi with a frequency of 5 Hz.",
          "transcript": "Uh, can you plot a sine wave with a frequency of five Hertz from zero to two pi, yeah?",
          "audio_path": "BFCL_v3_simple/simple_99_openai.mp3",
          "asr_output_openai": "Uh, can you plot a sine wave with a frequency of 5 Hz from zero to two pi? Yeah?",
          "asr_output_elevenlabs": "Uh, can you plot a sine wave with a frequency of 5 hertz from 0 to 2 pi? Yeah?",
          "asr_output_deepgram": "Can you plot a sine wave with a frequency of five hertz from zero to two pi? Yeah?",
          "clarifications": {
            "start_range": "0",
            "end_range": "2 pi",
            "frequency": "5 Hz"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "plot_sine_wave",
        "description": "Plot a sine wave for a given frequency in a given range.",
        "parameters": {
          "type": "dict",
          "properties": {
            "start_range": {
              "type": "float",
              "description": "Start of the range in radians. Four decimal places."
            },
            "end_range": {
              "type": "float",
              "description": "End of the range in radians. Four decimal places."
            },
            "frequency": {
              "type": "integer",
              "description": "Frequency of the sine wave in Hz."
            },
            "amplitude": {
              "type": "integer",
              "description": "Amplitude of the sine wave. Default is 1."
            },
            "phase_shift": {
              "type": "integer",
              "description": "Phase shift of the sine wave in radians. Default is 0."
            }
          },
          "required": [
            "start_range",
            "end_range",
            "frequency"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_100",
    "question": [
      [
        {
          "role": "user",
          "content": "How much time will it take for the light to reach earth from a star 4 light years away?",
          "transcript": "You know, lemme see... how longs it take for light to travel from a star thats four light years away to Earth?",
          "audio_path": "BFCL_v3_simple/simple_100_openai.mp3",
          "asr_output_openai": "You know, lemme see... how long's it take for light to travel from a star that's four light-years away to Earth?",
          "asr_output_elevenlabs": "You know, let me see. How long does it take for light to travel from a star that's four light-years away to Earth?",
          "asr_output_deepgram": "You know, let me see. How long does it take for light to travel from a star that's four light years away to Earth?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "light_travel_time",
        "description": "Calculate the time taken for light to travel from a celestial body to another.",
        "parameters": {
          "type": "dict",
          "properties": {
            "distance_in_light_years": {
              "type": "integer",
              "description": "The distance between the two celestial bodies in light years."
            },
            "speed_of_light": {
              "type": "integer",
              "description": "The speed of light in vacuum, in m/s. Default value is 299792458 m/s."
            }
          },
          "required": [
            "distance_in_light_years"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_101",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the speed of an object in km/h if it traveled 450 meters in 20 seconds.",
          "transcript": "Hey, um, can you work out the speed in kilometers per hour for an object that went four hundred fifty meters in twenty seconds?",
          "audio_path": "BFCL_v3_simple/simple_101_openai.mp3",
          "asr_output_openai": "Hey, can you work out the speed in kilometers per hour for an object that went 450 meters in 20 seconds?",
          "asr_output_elevenlabs": "Hey, um, can you work out the speed in kilometers per hour for an object that went 450 meters in 20 seconds?",
          "asr_output_deepgram": "Hey. Can you work out the speed in kilometers per hour for an object that went four hundred fifty meters in twenty seconds?",
          "clarifications": {
            "distance": "450 meters",
            "time": "20 seconds",
            "to_unit": "km/h"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_speed",
        "description": "Calculate the speed of an object based on the distance travelled and the time taken.",
        "parameters": {
          "type": "dict",
          "properties": {
            "distance": {
              "type": "integer",
              "description": "The distance the object travelled in meters."
            },
            "time": {
              "type": "integer",
              "description": "The time it took for the object to travel in seconds."
            },
            "to_unit": {
              "type": "string",
              "description": "The unit in which the speed should be calculated, default is m/s."
            }
          },
          "required": [
            "distance",
            "time"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_102",
    "question": [
      [
        {
          "role": "user",
          "content": "What's the distance in milesfrom the Earth to the Moon?",
          "transcript": "Hey, uh, whats the distance in miles from Earth to the Moon, ya know?",
          "audio_path": "BFCL_v3_simple/simple_102_openai.mp3",
          "asr_output_openai": "Hey, what's the distance in miles from Earth to the moon, you know?",
          "asr_output_elevenlabs": "Hey, uh, what's the distance in miles from Earth to the moon? Y-you know?",
          "asr_output_deepgram": "Hey. What's the distance in miles from Earth to the moon, you know?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_distance",
        "description": "Calculate the distance between two celestial bodies.",
        "parameters": {
          "type": "dict",
          "properties": {
            "body1": {
              "type": "string",
              "description": "The first celestial body."
            },
            "body2": {
              "type": "string",
              "description": "The second celestial body."
            },
            "unit": {
              "type": "string",
              "description": "The unit of measurement, default is 'km'."
            }
          },
          "required": [
            "body1",
            "body2"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_103",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the area under the curve y=3x^2 + 2x - 4, between x = -1 and x = 2.",
          "transcript": "Um, hey, can you find the area under the curve y equals three x squared plus two x minus four, uh, between x equals negative one and x equals two?",
          "audio_path": "BFCL_v3_simple/simple_103_openai.mp3",
          "asr_output_openai": "Hey, can you find the area under the curve y equals 3x squared plus 2x minus 4 between x equals negative 1 and x equals 2?",
          "asr_output_elevenlabs": "Um, hey, can you find the area under the curve y=3x^2+2x-4, uh, between x=1 and x=2?",
          "asr_output_deepgram": "Hey. Can you find the area under the curve y equals three x squared plus two x minus four, between x equals negative one and x equals two?",
          "clarifications": {
            "polynomial_expression": "y=3x^2 + 2x - 4",
            "lower_limit": "-1",
            "upper_limit": "2"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "mathematics.calculate_area_under_curve",
        "description": "Calculate the area under the curve for a given polynomial function within a specified interval.",
        "parameters": {
          "type": "dict",
          "properties": {
            "polynomial": {
              "type": "array",
              "items": {
                "type": "float"
              },
              "description": "The coefficients of the polynomial, in decreasing order of exponent, where the first element is the coefficient for x^n, the second element is the coefficient for x^(n-1), and so on. The last element is the constant term."
            },
            "limits": {
              "type": "array",
              "items": {
                "type": "float"
              },
              "description": "A list of two numbers specifying the lower and upper limit for the integration interval."
            }
          },
          "required": [
            "polynomial",
            "limits"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_104",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the area of a triangle with base 6 and height 10.",
          "transcript": "Hey, um, can you work out the area of a triangle if the bases six and the heights ten?",
          "audio_path": "BFCL_v3_simple/simple_104_openai.mp3",
          "asr_output_openai": "Hey, um, can you work out the area of a triangle if the base is six and the height's ten?",
          "asr_output_elevenlabs": "Hey, um, can you work out the area of a triangle if the base is 6 and the height's 10?",
          "asr_output_deepgram": "Hey. Can you work out the area of a triangle if the base is six and the height's ten?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "geometry.area_triangle",
        "description": "Calculate the area of a triangle.",
        "parameters": {
          "type": "dict",
          "properties": {
            "base": {
              "type": "integer",
              "description": "The length of the base of the triangle."
            },
            "height": {
              "type": "integer",
              "description": "The height of the triangle from the base."
            },
            "unit": {
              "type": "string",
              "description": "The measurement unit for the area. Defaults to square meters."
            }
          },
          "required": [
            "base",
            "height"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_105",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the power of 3 raised to the power 4.",
          "transcript": "Hmm, lemme see... can you calculate three to power of four?",
          "audio_path": "BFCL_v3_simple/simple_105_openai.mp3",
          "asr_output_openai": "Hmm, let me see. Can you calculate three to power of four?",
          "asr_output_elevenlabs": "Hmm. Let me see. Can you calculate 3 to power of 4?",
          "asr_output_deepgram": "Let me see. Can you calculate three to power of four?",
          "clarifications": {
            "base_number": "3",
            "exponent_number": "4"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "math.power",
        "description": "Calculate the power of one number raised to another.",
        "parameters": {
          "type": "dict",
          "properties": {
            "base": {
              "type": "integer",
              "description": "The base number."
            },
            "exponent": {
              "type": "integer",
              "description": "The exponent."
            },
            "mod": {
              "type": "integer",
              "description": "The modulus. Default is 1. Calculates pow(base, exponent) % mod when provided."
            }
          },
          "required": [
            "base",
            "exponent"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_106",
    "question": [
      [
        {
          "role": "user",
          "content": "Train a random forest classifier on dataset your_dataset_name with maximum depth of trees as 5, and number of estimators as 100.",
          "transcript": "Uh, build a random forest classifier using the dataset your_dataset_name, set the maximum depth of the trees to five, and, um, use one hundred estimators, right.",
          "audio_path": "BFCL_v3_simple/simple_106_openai.mp3",
          "asr_output_openai": "Build a random forest classifier using the dataset your_dataset_name. Set the maximum depth of the trees to 5 and use 100 estimators, right?",
          "asr_output_elevenlabs": "Uh, build a random forest classifier using the dataset, your dataset name. Set the maximum depth of the trees to five and, um, use 100 estimators, right?",
          "asr_output_deepgram": "Build a random forest classifier using the dataset, your dataset name. Set the maximum depth of the trees to five and, use one hundred estimators. Right?",
          "clarifications": {
            "dataset_name": "your_dataset_name",
            "maximum_tree_depth": "5",
            "number_of_estimators": "100"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "train_random_forest_classifier",
        "description": "Train a Random Forest classifier with the specified parameters.",
        "parameters": {
          "type": "dict",
          "properties": {
            "dataset": {
              "type": "string",
              "description": "The dataset to train the classifier on."
            },
            "max_depth": {
              "type": "integer",
              "description": "The maximum depth of the trees in the forest."
            },
            "n_estimators": {
              "type": "integer",
              "description": "The number of trees in the forest."
            }
          },
          "required": [
            "dataset",
            "max_depth",
            "n_estimators"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_107",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the Body Mass Index for a person with a weight of 70 kg and a height of 175 cm.",
          "transcript": "Hey, um, can you work out the Body Mass Index for someone weighing seventy kilograms and, uh, standing one seventy-five centimeters tall? Thanks.",
          "audio_path": "BFCL_v3_simple/simple_107_openai.mp3",
          "asr_output_openai": "Hey, um, can you work out the body mass index for someone weighing 70 kilograms and standing 175 centimeters tall? Thanks.",
          "asr_output_elevenlabs": "Hey, um, can you work out the body mass index for someone weighing 70 kilograms and, uh, standing 175 centimeters tall? Thanks.",
          "asr_output_deepgram": "Hey. Can you work out the body mass index for someone weighing seventy kilograms and, standing one seventy five centimeters tall? Thanks.",
          "clarifications": {
            "weight": "70 kg",
            "height": "175 cm"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_bmi",
        "description": "Calculate the Body Mass Index (BMI) for a person based on their weight and height.",
        "parameters": {
          "type": "dict",
          "properties": {
            "weight": {
              "type": "integer",
              "description": "The weight of the person in kilograms."
            },
            "height": {
              "type": "integer",
              "description": "The height of the person in centimeters."
            },
            "system": {
              "type": "string",
              "description": "The system of units to be used, 'metric' or 'imperial'. Default is 'metric'."
            }
          },
          "required": [
            "weight",
            "height"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_108",
    "question": [
      [
        {
          "role": "user",
          "content": "Run a linear regression model with predictor variables 'Age', 'Income' and 'Education' and a target variable 'Purchase_Amount'. Also apply standardization.",
          "transcript": "Let me see... okay, do a linear regression using Age, Income, and Education as predictors, and Purchase dash Amount as the target. Oh, make sure to standardize them too.",
          "audio_path": "BFCL_v3_simple/simple_108_openai.mp3",
          "asr_output_openai": "Let me see. Okay, do a linear regression using age, income, and education as predictors, and purchase amount as the target. Oh, make sure to standardize them too.",
          "asr_output_elevenlabs": "Let me see. Okay, do a linear regression using age, income, and education as predictors, and purchase dash amount as the target. Oh, make sure to standardize them too.",
          "asr_output_deepgram": "Let me see. Okay. Do a linear regression using age, income, and education as predictors, and purchase dash amount as the target. Oh, make sure to standardize them too.",
          "clarifications": {
            "predictor_variable1": "Age",
            "predictor_variable2": "Income",
            "predictor_variable3": "Education",
            "target_variable": "Purchase_Amount"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "run_linear_regression",
        "description": "Build a linear regression model using given predictor variables and a target variable.",
        "parameters": {
          "type": "dict",
          "properties": {
            "predictors": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Array containing the names of predictor variables."
            },
            "target": {
              "type": "string",
              "description": "The name of target variable."
            },
            "standardize": {
              "type": "boolean",
              "description": "Option to apply standardization on the predictors. Defaults to False."
            }
          },
          "required": [
            "predictors",
            "target"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_109",
    "question": [
      [
        {
          "role": "user",
          "content": "Generate a random forest model with 100 trees and a depth of 5 on the provided data my_data.",
          "transcript": "Uh, build a random forest model with, um, a hundred trees and a depth of five using the data file my_data, okay.",
          "audio_path": "BFCL_v3_simple/simple_109_openai.mp3",
          "asr_output_openai": "Build a random forest model with a hundred trees and a depth of five using the data file mydata, okay?",
          "asr_output_elevenlabs": "Uh, build a random forest model with, um, 100 trees and a depth of five using the data file, my_data. Okay?",
          "asr_output_deepgram": "Build a random forest model with, a hundred trees and a depth of five using the data file my data. Okay?",
          "clarifications": {
            "number_of_trees": "100",
            "tree_depth": "5",
            "training_data": "my_data"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "random_forest.train",
        "description": "Train a Random Forest Model on given data",
        "parameters": {
          "type": "dict",
          "properties": {
            "n_estimators": {
              "type": "integer",
              "description": "The number of trees in the forest."
            },
            "max_depth": {
              "type": "integer",
              "description": "The maximum depth of the tree."
            },
            "data": {
              "type": "any",
              "description": "The training data for the model."
            }
          },
          "required": [
            "n_estimators",
            "max_depth",
            "data"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_110",
    "question": [
      [
        {
          "role": "user",
          "content": "Predict the price of the house in San Francisco with 3 bedrooms, 2 bathrooms and area of 1800 square feet.",
          "transcript": "Whats the estimated cost for a house in San Francisco with three bedrooms, two bathrooms, and one thousand eight hundred square feet?",
          "audio_path": "BFCL_v3_simple/simple_110_openai.mp3",
          "asr_output_openai": "What's the estimated cost for a house in San Francisco with three bedrooms, two bathrooms, and 1,800 square feet?",
          "asr_output_elevenlabs": "What's the estimated cost for a house in San Francisco with three bedrooms, two bathrooms, and 1,800 square feet?",
          "asr_output_deepgram": "What's the estimated cost for a house in San Francisco with three bedrooms, two bathrooms, and one thousand eight hundred square feet?",
          "clarifications": {
            "location": "San Francisco",
            "bedrooms": "3",
            "bathrooms": "2",
            "area": "1800 square feet"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "predict_house_price",
        "description": "Predict the price of a house in a given area based on number of bedrooms, bathrooms and area.",
        "parameters": {
          "type": "dict",
          "properties": {
            "bedrooms": {
              "type": "integer",
              "description": "The number of bedrooms in the house."
            },
            "bathrooms": {
              "type": "integer",
              "description": "The number of bathrooms in the house."
            },
            "area": {
              "type": "integer",
              "description": "The area of the house in square feet."
            },
            "location": {
              "type": "string",
              "description": "The location of the house in the format of city name."
            }
          },
          "required": [
            "bedrooms",
            "bathrooms",
            "area",
            "location"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_111",
    "question": [
      [
        {
          "role": "user",
          "content": "Generate a random number from a normal distribution with mean 0 and standard deviation 1.",
          "transcript": "Make, uh, a random number using a normal distribution with a mean of zero and a standard deviation of one, okay.",
          "audio_path": "BFCL_v3_simple/simple_111_openai.mp3",
          "asr_output_openai": "Make a random number using a normal distribution with a mean of zero and a standard deviation of one.",
          "asr_output_elevenlabs": "Make a, a random number using a normal distribution with a mean of zero and a standard deviation of one. Okay?",
          "asr_output_deepgram": "Make, a random number using a normal distribution with a mean of zero and a standard deviation of one. Okay?",
          "clarifications": {
            "mean": "0",
            "standard_deviation": "1"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "random.normalvariate",
        "description": "Generates a random number from a normal distribution given the mean and standard deviation.",
        "parameters": {
          "type": "dict",
          "properties": {
            "mu": {
              "type": "integer",
              "description": "Mean of the normal distribution."
            },
            "sigma": {
              "type": "integer",
              "description": "Standard deviation of the normal distribution."
            }
          },
          "required": [
            "mu",
            "sigma"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_112",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the probability of drawing a king from a deck of cards.",
          "transcript": "Okay, whats the probability of, um, gettin a king from a deck of cards?",
          "audio_path": "BFCL_v3_simple/simple_112_openai.mp3",
          "asr_output_openai": "Okay, what's the probability of getting a king from a deck of cards?",
          "asr_output_elevenlabs": "Okay, what's the probability of, um, getting a king from a deck of cards?",
          "asr_output_deepgram": "Okay. What's the probability of, getting a king from a deck of cards?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_probability",
        "description": "Calculate the probability of an event.",
        "parameters": {
          "type": "dict",
          "properties": {
            "total_outcomes": {
              "type": "integer",
              "description": "Total number of possible outcomes."
            },
            "favorable_outcomes": {
              "type": "integer",
              "description": "Number of outcomes considered as 'successful'."
            },
            "round_to": {
              "type": "integer",
              "description": "Number of decimal places to round the result to.",
              "default": 2
            }
          },
          "required": [
            "total_outcomes",
            "favorable_outcomes"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_113",
    "question": [
      [
        {
          "role": "user",
          "content": "What's the probability of rolling a six on a six-sided die twice in a row?",
          "transcript": "Hey, um, whats the chance of gettin a six about twice in a row when rollin a six-sided die, right?",
          "audio_path": "BFCL_v3_simple/simple_113_openai.mp3",
          "asr_output_openai": "Hey, um, what's the chance of getting a six about twice in a row when rolling a six-sided die, right?",
          "asr_output_elevenlabs": "Hey, um, what's the chance of getting a six about twice in a row when rolling a six-sided die, right?",
          "asr_output_deepgram": "Hey. What's the chance of getting a six about twice in a row when rolling a six sided die? Right?",
          "clarifications": {
            "desired_number": "six",
            "number_of_rolls": "twice"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "probability.dice_roll",
        "description": "Calculate the probability of rolling a certain number on a six-sided die a certain number of times in a row.",
        "parameters": {
          "type": "dict",
          "properties": {
            "desired_number": {
              "type": "integer",
              "description": "The number you want to roll."
            },
            "number_of_rolls": {
              "type": "integer",
              "description": "How many times you want to roll that number in a row."
            },
            "die_sides": {
              "type": "integer",
              "description": "The number of sides on the die (optional; default is 6)."
            }
          },
          "required": [
            "desired_number",
            "number_of_rolls"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_114",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the probability of getting exactly 5 heads in 10 fair coin tosses.",
          "transcript": "Can you, lemme see, calculate probability of getting exactly five heads when tossing a fair coin ten times?",
          "audio_path": "BFCL_v3_simple/simple_114_openai.mp3",
          "asr_output_openai": "Can you, let me see, calculate probability of getting exactly five heads when tossing a fair coin ten times?",
          "asr_output_elevenlabs": "Can you, let me see, calculate probability of getting exactly five heads when tossing a fair coin 10 times?",
          "asr_output_deepgram": "Can you, let me see, calculate probability of getting exactly five heads when tossing a fair coin ten times?",
          "clarifications": {
            "successes": "5",
            "trials": "10"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "prob_dist.binomial",
        "description": "Compute the probability of having 'success' outcome from binomial distribution.",
        "parameters": {
          "type": "dict",
          "properties": {
            "trials": {
              "type": "integer",
              "description": "The number of independent experiments."
            },
            "successes": {
              "type": "integer",
              "description": "The number of success events."
            },
            "p": {
              "type": "float",
              "description": "The probability of success on any given trial, defaults to 0.5"
            }
          },
          "required": [
            "trials",
            "successes"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_115",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the probability of getting exactly 5 heads in 8 tosses of a fair coin.",
          "transcript": "Hey, uh, whats the chance of getting exactly five heads when you toss a fair coin eight times?",
          "audio_path": "BFCL_v3_simple/simple_115_openai.mp3",
          "asr_output_openai": "Hey, what's the chance of getting exactly five heads when you toss a fair coin eight times?",
          "asr_output_elevenlabs": "Hey, uh, what's the chance of getting exactly five heads when you toss a fair coin eight times?",
          "asr_output_deepgram": "Hey. What's the chance of getting exactly five heads when you toss a fair coin eight times?",
          "clarifications": {
            "number_of_successes": "5",
            "number_of_trials": "8"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_binomial_probability",
        "description": "Calculates the binomial probability given the number of trials, successes and the probability of success on an individual trial.",
        "parameters": {
          "type": "dict",
          "properties": {
            "number_of_trials": {
              "type": "integer",
              "description": "The total number of trials."
            },
            "number_of_successes": {
              "type": "integer",
              "description": "The desired number of successful outcomes."
            },
            "probability_of_success": {
              "type": "float",
              "description": "The probability of a successful outcome on any given trial.",
              "default": 0.5
            }
          },
          "required": [
            "number_of_trials",
            "number_of_successes"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_116",
    "question": [
      [
        {
          "role": "user",
          "content": "What's the probability of drawing a king from a well shuffled standard deck of 52 cards?",
          "transcript": "Whats chance of pullin a king from a shuffled fifty-two card deck? Oh, I think...",
          "audio_path": "BFCL_v3_simple/simple_116_openai.mp3",
          "asr_output_openai": "What's chance of pulling a king from a shuffled 52-card deck?",
          "asr_output_elevenlabs": "What's chance of pulling a king from a shuffled 52-card deck? Oh, I think\u2014 Mmm.",
          "asr_output_deepgram": "What's chance of pulling a king from a shuffled fifty two card deck? Oh, I think",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "probabilities.calculate_single",
        "description": "Calculate the probability of an event.",
        "parameters": {
          "type": "dict",
          "properties": {
            "total_outcomes": {
              "type": "integer",
              "description": "The total number of outcomes."
            },
            "event_outcomes": {
              "type": "integer",
              "description": "The number of outcomes where the event occurs."
            },
            "round": {
              "type": "integer",
              "description": "Round the answer to a specified number of decimal places. Defaults to 2."
            }
          },
          "required": [
            "total_outcomes",
            "event_outcomes"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_117",
    "question": [
      [
        {
          "role": "user",
          "content": "What are the odds of pulling a heart suit from a well-shuffled standard deck of 52 cards? Format it as ratio.",
          "transcript": "Hey, um, whats chance of drawing a heart from a well-shuffled fifty-two card deck? Uh, gimme it as a ratio, okay?",
          "audio_path": "BFCL_v3_simple/simple_117_openai.mp3",
          "asr_output_openai": "Hey, um, what's the chance of drawing a heart from a well-shuffled 52-card deck? Give me it as a ratio, okay?",
          "asr_output_elevenlabs": "Hey, um, what's chance of drawing a heart from a well-shuffled 52-card deck? Uh, give me it as a ratio, okay?",
          "asr_output_deepgram": "Hey. What's chance of drawing a heart from a well shuffled fifty two carved deck? Give me it as a ratio. Okay?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "probability_of_event",
        "description": "Calculates the probability of an event.",
        "parameters": {
          "type": "dict",
          "properties": {
            "success_outcomes": {
              "type": "integer",
              "description": "The number of successful outcomes."
            },
            "total_outcomes": {
              "type": "integer",
              "description": "The total number of possible outcomes."
            },
            "format_as_ratio": {
              "type": "boolean",
              "description": "When true, formats the output as a ratio instead of a decimal. Default is false."
            }
          },
          "required": [
            "success_outcomes",
            "total_outcomes"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_118",
    "question": [
      [
        {
          "role": "user",
          "content": "Perform a two-sample t-test on my experiment data of Control [10, 15, 12, 14, 11] and Treated [18, 16, 17, 20, 22] group with alpha equals to 0.05",
          "transcript": "Can you, uh, run two-sample t-test on my experiment data with Control group: ten, fifteen, twelve, fourteen, eleven and Treated group: eighteen, sixteen, seventeen, twenty, twenty-two? Right, use alpha of zero point zero five.",
          "audio_path": "BFCL_v3_simple/simple_118_openai.mp3",
          "asr_output_openai": "Can you run two-sample t-test on my experiment data with control group 10, 15, 12, 14, 11 and treated group 18, 16, 17, 20, 22? Right, use alpha of 0.05.",
          "asr_output_elevenlabs": "Can you, uh, run two sample t-test on my experiment data with control group 10, 15, 12, 14, 11, and treated group 18, 16, 17, 20, 22? Right. Use alpha of 0.05.",
          "asr_output_deepgram": "Can you, run two sample t test on my experiment data with control group ten, fifteen, twelve, fourteen, eleven, and treated group eighteen, sixteen, seventeen, twenty, twenty two. Right. Use alpha of zero point zero five.",
          "clarifications": {
            "first_group_data": "Control [10, 15, 12, 14, 11]",
            "second_group_data": "Treated [18, 16, 17, 20, 22]",
            "significance_level": "0.05"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "stats.t_test",
        "description": "Perform a two-sample t-test for two given arrays.",
        "parameters": {
          "type": "dict",
          "properties": {
            "array_1": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "First array of data."
            },
            "array_2": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "Second array of data."
            },
            "alpha": {
              "type": "float",
              "description": "Significance level for hypothesis testing."
            }
          },
          "required": [
            "array_1",
            "array_2",
            "alpha"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_119",
    "question": [
      [
        {
          "role": "user",
          "content": "Perform a hypothesis test for two independent samples with scores of Sample1: [22,33,42,12,34] and Sample2: [23,45,44,14,38] at a significance level of 0.05.",
          "transcript": "Um, can you do a hypothesis test for two separate samples? Uh, sample one has scores twenty-two, thirty-three, forty-two, twelve, and thirty-four, while sample two has twenty-three, forty-five, forty-four, fourteen, and thirty-eight. Oh, use a significance level of zero point zero five.",
          "audio_path": "BFCL_v3_simple/simple_119_openai.mp3",
          "asr_output_openai": "Can you do a hypothesis test for two separate samples? Sample 1 has scores 22, 33, 42, 12, and 34, while sample 2 has 23, 45, 44, 14, and 38. Oh, use a significance level of 0.05.",
          "asr_output_elevenlabs": "Um, can you do a hypothesis test for two separate samples? Uh, sample one has scores 22, 33, 42, 12 and 34, while sample two has 23, 45, 44, 14 and 38. Oh, use a significance level of 0.05.",
          "asr_output_deepgram": "Can you do a hypothesis test for two separate samples? Sample one has scores twenty two, thirty three, forty two, twelve, and thirty four, while sample two has twenty three, forty five, forty four, fourteen, and thirty eight. Oh, use a significance level of zero point zero five.",
          "clarifications": {
            "first_sample_scores": "[22,33,42,12,34]",
            "second_sample_scores": "[23,45,44,14,38]",
            "significance_level": "0.05"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "hypothesis_testing.ttest_ind",
        "description": "Conducts a hypothesis test for two independent samples.",
        "parameters": {
          "type": "dict",
          "properties": {
            "sample1": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "First set of observations (array of numbers)."
            },
            "sample2": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "Second set of observations (array of numbers)."
            },
            "significance_level": {
              "type": "float",
              "description": "Significance level of the test (default: 0.05)"
            }
          },
          "required": [
            "sample1",
            "sample2"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_120",
    "question": [
      [
        {
          "role": "user",
          "content": "Run a two sample T-test to compare the average of Group A [3, 4, 5, 6, 4] and Group B [7, 8, 9, 8, 7] assuming equal variance.",
          "transcript": "Um, could you do a two-sample T-test to, uh, compare the averages of Group A, three thousand four hundred fifty-six point four, and Group B, seven thousand eight hundred ninety-eight point seven, assuming equal variance? Thanks.",
          "audio_path": "BFCL_v3_simple/simple_120_openai.mp3",
          "asr_output_openai": "Um, could you do a two-sample t-test to compare the averages of Group A (3456.4) and Group B (7898.7), assuming equal variance? Thanks.",
          "asr_output_elevenlabs": "Um, could you do a two-sample t-test to, uh, compare the averages of group A, 3456.4, and group B, 7898.7, assuming equal variance? Thanks.",
          "asr_output_deepgram": "Could you do a two sample t test to, compare the averages of group a, three thousand four hundred fifty six point four, and group b, seven thousand eight hundred ninety eight point seven, assuming equal variance? Thanks.",
          "clarifications": {
            "first_group_data": "Group A [3, 4, 5, 6, 4]",
            "second_group_data": "Group B [7, 8, 9, 8, 7]",
            "equal_variance_assumption": "equal variance"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "run_two_sample_ttest",
        "description": "Runs a two sample t-test for two given data groups.",
        "parameters": {
          "type": "dict",
          "properties": {
            "group1": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "First group of data points."
            },
            "group2": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "Second group of data points."
            },
            "equal_variance": {
              "type": "boolean",
              "description": "Assumption about whether the two samples have equal variance.",
              "default": true
            }
          },
          "required": [
            "group1",
            "group2"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_121",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the probability of observing 60 heads if I flip a coin 100 times with probability of heads 0.5.",
          "transcript": "Hey, um, could you figure out the odds of gettin sixty heads when flippin a coin a hundred times, assumin the coin shows heads with a probability of zero point five?",
          "audio_path": "BFCL_v3_simple/simple_121_openai.mp3",
          "asr_output_openai": "Hey, um, could you figure out the odds of getting 60 heads when flipping a coin 100 times, assuming the coin shows heads with a probability of 0.5?",
          "asr_output_elevenlabs": "Hey, um, could you figure out the odds of getting 60 heads when flipping a coin 100 times, assuming the coin shows heads with a probability of 0.5?",
          "asr_output_deepgram": "Hey. Could you figure out the odds of getting sixty heads when flipping a coin a hundred times assuming the coin shows heads with a probability of zero point five?",
          "clarifications": {
            "num_success": "60",
            "num_trials": "100",
            "prob_success": "0.5"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calc_binomial_prob",
        "description": "Calculates the probability of an outcome based on the binomial distribution",
        "parameters": {
          "type": "dict",
          "properties": {
            "num_trials": {
              "type": "integer",
              "description": "Number of independent experiments."
            },
            "num_success": {
              "type": "integer",
              "description": "Number of times the event of interest has occurred."
            },
            "prob_success": {
              "type": "float",
              "description": "Probability of the event of interest on any single experiment."
            }
          },
          "required": [
            "num_trials",
            "num_success",
            "prob_success"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_122",
    "question": [
      [
        {
          "role": "user",
          "content": "Perform a Chi-Squared test for independence on a 2x2 contingency table [ [10, 20], [30, 40] ]",
          "transcript": "Uh, can you do a Chi-Squared test for independence on this two by two table: ten, twenty, thirty, forty?",
          "audio_path": "BFCL_v3_simple/simple_122_openai.mp3",
          "asr_output_openai": "Uh, can you do a chi-squared test for independence on this 2x2 table: 10, 20, 30, 40?",
          "asr_output_elevenlabs": "Uh, can you do a chi-squared test for independence on this two-by-two table? 10, 20, 30, 40.",
          "asr_output_deepgram": "Can you do a chi squared test for independence on this two by two table? Ten, twenty, thirty, forty?",
          "clarifications": {
            "contingency_table": "[ [10, 20], [30, 40] ]"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "chi_squared_test",
        "description": "Performs a Chi-Squared test for independence on a 2x2 contingency table.",
        "parameters": {
          "type": "dict",
          "properties": {
            "table": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "description": "A 2x2 contingency table presented in array form."
            },
            "alpha": {
              "type": "float",
              "description": "Significance level for the Chi-Squared test. Default is 0.05."
            }
          },
          "required": [
            "table"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_123",
    "question": [
      [
        {
          "role": "user",
          "content": "Perform a two-sample t-test to determine if there is a significant difference between the mean of group1 (e.g., 12.4, 15.6, 11.2, 18.9) and group2 (e.g., 10.5, 9.8, 15.2, 13.8) at the significance level 0.05.",
          "transcript": "Okay, could you do a two-sample t-test to see if theres a significant difference between the averages of group1\u2014values like twelve point four, fifteen point six, eleven point two, eighteen point nine\u2014and group2\u2014values like ten point five, nine point eight, fifteen point two, thirteen point eight\u2014at a zero point zero five significance level?",
          "audio_path": "BFCL_v3_simple/simple_123_openai.mp3",
          "asr_output_openai": "Okay, could you do a two-sample t-test to see if there's a significant difference between the averages of Group 1 (values like 12.4, 15.6, 11.2, 18.9) and Group 2 (values like 10.5, 9.8, 15.2, 13.8) at a 0.05 significance level?",
          "asr_output_elevenlabs": "Okay, could you do a two-sample t-test to see if there's a significant difference between the averages of group one, values like 12.4, 15.6, 11.2, 18.9, and group two, values like 10.5, 9.8, 15.2, 13.8, at a 0.05 significance level?",
          "asr_output_deepgram": "Okay. Could you do a two sample t test to see if there's a significant difference between the averages of group one? Values like twelve point four, fifteen point six, eleven point two, eighteen point nine, and group two values like ten point five, nine point eight, fifteen point two, thirteen point eight at a zero point zero five significance level?",
          "clarifications": {
            "group1_values": "12.4, 15.6, 11.2, 18.9",
            "group2_values": "10.5, 9.8, 15.2, 13.8",
            "significance_level": "0.05"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "hypothesis_testing.two_sample_t_test",
        "description": "Perform a two-sample t-test to determine if there is a significant difference between the means of two independent samples.",
        "parameters": {
          "type": "dict",
          "properties": {
            "group1": {
              "type": "array",
              "items": {
                "type": "float"
              },
              "description": "Sample observations from group 1."
            },
            "group2": {
              "type": "array",
              "items": {
                "type": "float"
              },
              "description": "Sample observations from group 2."
            },
            "alpha": {
              "type": "float",
              "description": "Significance level for the t-test. Default is 0.05."
            }
          },
          "required": [
            "group1",
            "group2"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_124",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the statistical significance between two set of variables, dataset_A with the values 12, 24, 36 and dataset_B with the values 15, 30, 45.",
          "transcript": "Uh, can you check the statistical significance between two sets of variables? Dataset A is twelve, twenty-four, thirty-six, and dataset B is, uh, fifteen, thirty, forty-five.",
          "audio_path": "BFCL_v3_simple/simple_124_openai.mp3",
          "asr_output_openai": "Uh, can you check the statistical significance between two sets of variables? Data set A is 12, 24, 36, and data set B is, uh, 15, 30, 45.",
          "asr_output_elevenlabs": "Uh, can you check the statistical significance between two sets of variables? Dataset A is 12, 24, 36, and Dataset B is, uh, 15, 30, 45.",
          "asr_output_deepgram": "Can you check the statistical significance between two sets of variables? Dataset a is twelve, twenty four, thirty six, and dataset b is, fifteen thirty forty five.",
          "clarifications": {
            "dataset_A_values": "12, 24, 36",
            "dataset_B_values": "15, 30, 45"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "t_test",
        "description": "Perform a statistical t-test to check if the means of two independent datasets are statistically different.",
        "parameters": {
          "type": "dict",
          "properties": {
            "dataset_A": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "Dataset A for comparison."
            },
            "dataset_B": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "Dataset B for comparison."
            },
            "alpha": {
              "type": "float",
              "description": "Significance level for the test. Default is 0.05."
            }
          },
          "required": [
            "dataset_A",
            "dataset_B"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_125",
    "question": [
      [
        {
          "role": "user",
          "content": "Predict house price in San Francisco based on its area of 2500 square feet, number of rooms as 5 and year of construction is 1990.",
          "transcript": "Um, can you predict the price of a house in San Francisco, uh, with five rooms, built in nineteen ninety, for an area of twenty-five hundred square feet?",
          "audio_path": "BFCL_v3_simple/simple_125_openai.mp3",
          "asr_output_openai": "Um, can you predict the price of a house in San Francisco with five rooms built in 1990 for an area of 2500 square feet?",
          "asr_output_elevenlabs": "Um, can you predict the price of a house in San Francisco, uh, with five rooms built in 1990 for an area of 2,500 square feet?",
          "asr_output_deepgram": "Can you predict the price of a house in San Francisco, with five rooms built in nineteen ninety for an area of twenty five hundred square feet?",
          "clarifications": {
            "location": "San Francisco",
            "area": "2500 square feet",
            "number_of_rooms": "5",
            "year_of_construction": "1990"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "predict_house_price",
        "description": "Predict house price based on area, number of rooms and year of construction.",
        "parameters": {
          "type": "dict",
          "properties": {
            "area": {
              "type": "integer",
              "description": "Area of the house in square feet."
            },
            "rooms": {
              "type": "integer",
              "description": "Number of rooms in the house."
            },
            "year": {
              "type": "integer",
              "description": "Year when the house was constructed."
            },
            "location": {
              "type": "string",
              "description": "The location or city of the house."
            }
          },
          "required": [
            "area",
            "rooms",
            "year",
            "location"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_126",
    "question": [
      [
        {
          "role": "user",
          "content": "What is the coefficient of determination (R-squared) for a model using engine size and fuel economy variables to predict car_price with a dataset in path C:/data/cars.csv?",
          "transcript": "Um, whats the R-squared value for a model using engine size and, uh, fuel economy to predict car price, with the data in C colon slash data slash cars dot csv?",
          "audio_path": "BFCL_v3_simple/simple_126_openai.mp3",
          "asr_output_openai": "What's the R-squared value for a model using engine size and fuel economy to predict car price with the data in C:/Data/Cars.csv?",
          "asr_output_elevenlabs": "Um, what's the R-squared value for a model using engine size and fuel economy to predict car price with the data in C:/data/cars.CSV?",
          "asr_output_deepgram": "What's the r squared value for a model using engine size and, fuel economy to predict car price with the data in c colon slash data slash cars dot CSV?",
          "clarifications": {
            "dataset_path": "C:/data/cars.csv",
            "independent_variables": "engine size, fuel economy",
            "dependent_variable": "car_price"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "linear_regression.get_r_squared",
        "description": "Calculate the coefficient of determination of a regression model.",
        "parameters": {
          "type": "dict",
          "properties": {
            "dataset_path": {
              "type": "string",
              "description": "Path to the CSV dataset file."
            },
            "independent_variables": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The independent variables to use in the regression model."
            },
            "dependent_variable": {
              "type": "string",
              "description": "The dependent variable to predict in the regression model."
            }
          },
          "required": [
            "dataset_path",
            "independent_variables",
            "dependent_variable"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_127",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the Net Present Value (NPV) of an investment, given cash_flows=[200,300,400,500], a discount rate of 10%, and an initial investment of $2000.",
          "transcript": "Find Net Present Value for an investment with cash flows of two hundred, three hundred, four hundred, and five hundred, a discount rate of ten percent, and an initial investment of two thousand dollars.",
          "audio_path": "BFCL_v3_simple/simple_127_openai.mp3",
          "asr_output_openai": "Find net present value for an investment with cash flows of 200, 300, 400, and 500, a discount rate of 10%, and an initial investment of $2000.",
          "asr_output_elevenlabs": "Find net present value for an investment with cashflows of 200, 300, 400, and 500, a discount rate of 10%, and an initial investment of $2,000.",
          "asr_output_deepgram": "Find net present value for an investment with cash flows of two hundred, three hundred, four hundred, and five hundred, a discount rate of ten percent, and an initial investment of two thousand dollars.",
          "clarifications": {
            "cash_flows": "[200,300,400,500]",
            "discount_rate": "10%",
            "initial_investment": "$2000"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_NPV",
        "description": "Calculate the NPV (Net Present Value) of an investment, considering a series of future cash flows, discount rate, and an initial investment.",
        "parameters": {
          "type": "dict",
          "properties": {
            "cash_flows": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "Series of future cash flows."
            },
            "discount_rate": {
              "type": "float",
              "description": "The discount rate to use."
            },
            "initial_investment": {
              "type": "integer",
              "description": "The initial investment. Default is 0 if not specified."
            }
          },
          "required": [
            "cash_flows",
            "discount_rate"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_128",
    "question": [
      [
        {
          "role": "user",
          "content": "What's the quarterly dividend per share of a company with 100 million outstanding shares and total dividend payout of 50 million USD?",
          "transcript": "Hey, whats the quarterly dividend per share for a company with a total payout of fifty million dollars and a hundred million shares outstanding? Right?",
          "audio_path": "BFCL_v3_simple/simple_128_openai.mp3",
          "asr_output_openai": "Hey, what's the quarterly dividend per share for a company with a total payout of $50 million and 100 million shares outstanding? Right?",
          "asr_output_elevenlabs": "Hey, what's the quarterly dividend per share for a company with a total payout of $50 million and 100 million shares outstanding? Right.",
          "asr_output_deepgram": "Hey. What's the quarterly dividend per share for a company with a total payout of fifty million dollars and a hundred million shares outstanding? Right?",
          "clarifications": {
            "total_dividend_payout": "50 million USD",
            "outstanding_shares": "100 million"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "finance.calculate_quarterly_dividend_per_share",
        "description": "Calculate quarterly dividend per share for a company given total dividend payout and outstanding shares",
        "parameters": {
          "type": "dict",
          "properties": {
            "total_payout": {
              "type": "integer",
              "description": "The total amount of dividends paid out in USD"
            },
            "outstanding_shares": {
              "type": "integer",
              "description": "Total number of outstanding shares"
            }
          },
          "required": [
            "total_payout",
            "outstanding_shares"
          ],
          "optional": []
        }
      }
    ]
  },
  {
    "id": "simple_129",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the discounted cash flow of a bond that is giving a coupon payment of $100 annually for next 5 years with discount rate 4%.",
          "transcript": "Can you, um, figure out the discounted cash flow for a bond with a hundred dollar annual coupon payment over five years, using a four percent discount rate?",
          "audio_path": "BFCL_v3_simple/simple_129_openai.mp3",
          "asr_output_openai": "Can you, um, figure out the discounted cash flow for a bond with a $100 annual coupon payment over five years, using a 4% discount rate?",
          "asr_output_elevenlabs": "Can you, um, figure out the discounted cash flow for a bond with $100 annual coupon payment over five years using a 4% discount rate?",
          "asr_output_deepgram": "Can you, figure out the discounted cash flow for a bond with a hundred dollar annual coupon payment over five years using a four percent discount rate?",
          "clarifications": {
            "coupon_payment": "$100",
            "period": "5 years",
            "discount_rate": "4%"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_discounted_cash_flow",
        "description": "Calculate the discounted cash flow of a bond for a given annual coupon payment, time frame and discount rate.",
        "parameters": {
          "type": "dict",
          "properties": {
            "coupon_payment": {
              "type": "integer",
              "description": "The annual coupon payment."
            },
            "period": {
              "type": "integer",
              "description": "The time frame in years for which coupon payment is made."
            },
            "discount_rate": {
              "type": "float",
              "description": "The discount rate."
            },
            "face_value": {
              "type": "integer",
              "description": "The face value of the bond, default is 1000."
            }
          },
          "required": [
            "coupon_payment",
            "period",
            "discount_rate"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_130",
    "question": [
      [
        {
          "role": "user",
          "content": "What's the NPV (Net Present Value) of a series of cash flows: [-50000, 10000, 15000, 20000, 25000, 30000] discounted at 8% annually?",
          "transcript": "Hey, can you work out the NPV of these cash flows? Lemme see... minus fifty thousand, ten thousand, fifteen thousand, twenty thousand, twenty-five thousand, and thirty thousand. Use an eight percent annual discount rate.",
          "audio_path": "BFCL_v3_simple/simple_130_openai.mp3",
          "asr_output_openai": "Hey, can you work out the NPV of these cash flows? Let me see. Minus $50,000, $10,000, $15,000, $20,000, $25,000, and $30,000. Use an 8% annual discount rate.",
          "asr_output_elevenlabs": "Hey, can you work out the NPV of these cash flows? Let me see. Minus 50,000, 10,000, 15,000, 20,000, 25,000 and 30,000. Use an 8% annual discount rate.",
          "asr_output_deepgram": "Hey. Can you work out the NPV of these cash flows? Let me see. Minus fifty thousand, ten thousand, fifteen thousand, twenty thousand, twenty five thousand, and thirty thousand. Use an eight percent annual discount rate.",
          "clarifications": {
            "cash_flows": "[-50000, 10000, 15000, 20000, 25000, 30000]",
            "discount_rate": "8%"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "finance_calculator.npv",
        "description": "Calculate the Net Present Value (NPV) for a series of cash flows discounted at a certain interest rate.",
        "parameters": {
          "type": "dict",
          "properties": {
            "cash_flows": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "A list of cash flows."
            },
            "discount_rate": {
              "type": "float",
              "description": "The annual interest rate used to discount the cash flows."
            },
            "years": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "A list of years when the cash flow occurs. Default is empty array."
            }
          },
          "required": [
            "cash_flows",
            "discount_rate"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_131",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the compound interest for an initial principal amount of $10000, with an annual interest rate of 5% and the number of times interest applied per time period is 4 and the time the money is invested for 10 years.",
          "transcript": "Um, hey, can you work out the compound interest on a ten thousand dollar principal at a, uh, five percent annual rate, compounded quarterly, for ten years?",
          "audio_path": "BFCL_v3_simple/simple_131_openai.mp3",
          "asr_output_openai": "Hey, can you work out the compound interest on a $10,000 principal at a 5% annual rate, compounded quarterly, for 10 years?",
          "asr_output_elevenlabs": "Um, hey, can you work out the compound interest on a ten thousand dollar principal at a, uh, five percent annual rate, compounded quarterly for ten years?",
          "asr_output_deepgram": "Hey. Can you work out the compound interest on a ten thousand dollar principal at a, five percent annual rate compounded quarterly for ten years?",
          "clarifications": {
            "principal_amount": "$10000",
            "annual_interest_rate": "5%",
            "compounding_frequency": "4",
            "investment_duration": "10 years"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_compound_interest",
        "description": "Calculate compound interest for an initial principal amount.",
        "parameters": {
          "type": "dict",
          "properties": {
            "principal": {
              "type": "integer",
              "description": "The principal amount that the interest is applied to."
            },
            "rate": {
              "type": "float",
              "description": "The annual interest rate. Enter as a decimal. E.g, 5% is 0.05"
            },
            "time": {
              "type": "integer",
              "description": "The time the money is invested for in years."
            },
            "n": {
              "type": "integer",
              "description": "The number of times that interest is compounded per time period. Default is 1."
            }
          },
          "required": [
            "principal",
            "rate",
            "time"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_132",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the company's return on equity given its net income of $2,000,000, shareholder's equity of $10,000,000, and dividends paid of $200,000.",
          "transcript": "Hey, can ya work out the return on equity for the company? Theyve got a net income of two million, shareholders equity is ten million, and theyve paid out dividends of two hundred thousand.",
          "audio_path": "BFCL_v3_simple/simple_132_openai.mp3",
          "asr_output_openai": "Hey, can you work out the return on equity for the company? They've got a net income of two million, shareholders' equity is ten million, and they've paid out dividends of two hundred thousand.",
          "asr_output_elevenlabs": "Hey, can you work out the return on equity for the company? They've got a net income of two million, shareholders' equity is ten million, and they've paid out dividends of two hundred thousand.",
          "asr_output_deepgram": "Hey. Can you work out the return on equity for the company? They've got a net income of two million. Shareholders' equity is ten million, and they've paid out dividends of two hundred thousand.",
          "clarifications": {
            "net_income": "$2,000,000",
            "shareholder_equity": "$10,000,000",
            "dividends_paid": "$200,000"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_return_on_equity",
        "description": "Calculate a company's return on equity based on its net income, shareholder's equity, and dividends paid.",
        "parameters": {
          "type": "dict",
          "properties": {
            "net_income": {
              "type": "integer",
              "description": "The company's net income."
            },
            "shareholder_equity": {
              "type": "integer",
              "description": "The company's total shareholder's equity."
            },
            "dividends_paid": {
              "type": "integer",
              "description": "The total dividends paid by the company. Optional. If not given, default to 0."
            }
          },
          "required": [
            "net_income",
            "shareholder_equity"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_133",
    "question": [
      [
        {
          "role": "user",
          "content": "Predict the future value of a $5000 investment with an annual interest rate of 5% in 3 years with monthly compounding.",
          "transcript": "Hey, can you figure out what a roughly five thousand dollar investment would be worth in about three years with an approximately five percent yearly interest rate and monthly compounding?",
          "audio_path": "BFCL_v3_simple/simple_133_cartesia.mp3",
          "asr_output_openai": "Hey, can you figure out what a roughly $5000 investment would be worth in about 3 years with an approximately 5% yearly interest rate and monthly compounding?",
          "asr_output_elevenlabs": "Hey, can you figure out what a roughly five thousand dollar investment would be worth in about three years with an approximately five percent yearly interest rate and monthly compounding?",
          "asr_output_deepgram": "Hey. Can you figure out what a roughly five thousand dollar investment would be worth in about three years with an approximately five percent yearly interest rate and monthly compounding?",
          "clarifications": {
            "present_value": "$5000",
            "annual_interest_rate": "5%",
            "time_years": "3",
            "compounding_periods_per_year": "monthly"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "finance.predict_future_value",
        "description": "Calculate the future value of an investment given its present value, interest rate, the number of compounding periods per year, and the time horizon.",
        "parameters": {
          "type": "dict",
          "properties": {
            "present_value": {
              "type": "integer",
              "description": "The present value of the investment."
            },
            "annual_interest_rate": {
              "type": "float",
              "description": "The annual interest rate of the investment."
            },
            "compounding_periods_per_year": {
              "type": "integer",
              "description": "The number of times that interest is compounded per year. Default is 1 (annually)."
            },
            "time_years": {
              "type": "integer",
              "description": "The investment horizon in years."
            }
          },
          "required": [
            "present_value",
            "annual_interest_rate",
            "time_years"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_134",
    "question": [
      [
        {
          "role": "user",
          "content": "Predict the total expected profit of stocks XYZ in 5 years given I have invested $5000 and annual return rate is 7%.",
          "transcript": "Um, can you guess total profit from my five thousand dollar investment in XYZ stocks over five years, with, uh, a seven percent annual return?",
          "audio_path": "BFCL_v3_simple/simple_134_cartesia.mp3",
          "asr_output_openai": "Can you guess total profit from my $5,000 investment in XYZ stocks over 5 years, with a 7% annual return?",
          "asr_output_elevenlabs": "Um, can you guess total profit from my 5,000-dollar investment in XYZ stocks over five years with a, a seven percent annual return?",
          "asr_output_deepgram": "Can you guess total profit from my five thousand dollar investment in x y z stocks over five years with, a seven percent annual return?",
          "clarifications": {
            "stock_symbol": "XYZ",
            "investment_amount": "$5000",
            "annual_return_rate": "7%",
            "investment_period": "5 years"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "investment.predictProfit",
        "description": "Predict the profit for given investment after specified number of years.",
        "parameters": {
          "type": "dict",
          "properties": {
            "investment_amount": {
              "type": "integer",
              "description": "The amount invested in dollars."
            },
            "annual_return": {
              "type": "float",
              "description": "The annual return rate of the investment."
            },
            "years": {
              "type": "integer",
              "description": "The time period in years for which the investment is made."
            }
          },
          "required": [
            "investment_amount",
            "annual_return",
            "years"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_135",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the return on investment for a stock bought at $20, sold at $25, with a dividend of $2.",
          "transcript": "Hey, um, can you figure out the R O I for a stock bought at, uh, twenty dollars, sold at twenty-five, with a two-dollar dividend?",
          "audio_path": "BFCL_v3_simple/simple_135_cartesia.mp3",
          "asr_output_openai": "Hey, um, can you figure out the ROI for a stock bought at, uh, $20, sold at $25, with a $2 dividend?",
          "asr_output_elevenlabs": "Hey, um, can you figure out the ROI for a stock bought at, uh, 20 dollars, sold at 25, with a 2-dollar dividend?",
          "asr_output_deepgram": "Hey. Can you figure out the ROI for a stock bought at, twenty dollars sold at twenty five with a two dollar dividend?",
          "clarifications": {
            "purchase_price": "$20",
            "sale_price": "$25",
            "dividend": "$2"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_return_on_investment",
        "description": "Calculate the return on investment for a given stock based on its purchase price, sale price, and any dividends received.",
        "parameters": {
          "type": "dict",
          "properties": {
            "purchase_price": {
              "type": "integer",
              "description": "The price the stock was bought at."
            },
            "sale_price": {
              "type": "integer",
              "description": "The price the stock was sold at."
            },
            "dividend": {
              "type": "integer",
              "description": "Any dividends received from the stock.",
              "default": 0
            }
          },
          "required": [
            "purchase_price",
            "sale_price"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_136",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the compound interest for an investment of $10000 with an annual interest rate of 5% compounded monthly for 5 years.",
          "transcript": "Uh, on a ten thousand dollar investment, whats the compound interest at an annual rate of five percent, uh, added monthly over five years?",
          "audio_path": "BFCL_v3_simple/simple_136_cartesia.mp3",
          "asr_output_openai": "On a $10,000 investment, what's the compound interest at an annual rate of 5%, added monthly over five years?",
          "asr_output_elevenlabs": "Um, on a 10,000-dollar investment, what's the compound interest at an annual rate of 5%, uh, added monthly over five years?",
          "asr_output_deepgram": "On a ten thousand dollar investment, what's the compound interest at an annual rate of five percent, added monthly over five years?",
          "clarifications": {
            "principal_amount": "$10000",
            "annual_interest_rate": "5%",
            "compounding_frequency": "monthly",
            "investment_duration": "5 years"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "compound_interest",
        "description": "Calculate compound interest for a certain time period.",
        "parameters": {
          "type": "dict",
          "properties": {
            "principal": {
              "type": "integer",
              "description": "The initial amount of money that was invested or loaned out."
            },
            "annual_rate": {
              "type": "float",
              "description": "The interest rate for a year as a percentage."
            },
            "compounding_freq": {
              "type": "string",
              "enum": [
                "monthly",
                "quarterly",
                "annually"
              ],
              "description": "The number of times that interest is compounded per unit period."
            },
            "time_in_years": {
              "type": "integer",
              "description": "The time the money is invested for in years."
            }
          },
          "required": [
            "principal",
            "annual_rate",
            "compounding_freq",
            "time_in_years"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_137",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the projected return on a $5000 investment in ABC company's stock, if the expected annual growth rate is 6% and the holding period is 5 years.",
          "transcript": "Hey, lemme see... could you work out what the returnd be on a five thousand dollar investment in ABC stock? Assume a six percent annual growth rate over five years.",
          "audio_path": "BFCL_v3_simple/simple_137_cartesia.mp3",
          "asr_output_openai": "Hey, let me see. Could you work out what the return would be on a $5,000 investment in ABC stock? Assume a 6% annual growth rate over five years.",
          "asr_output_elevenlabs": "Hey, Lemassie. Could you work out what the return would be on a five thousand dollar investment in ABC stock? Assume a six percent annual growth rate over five years.",
          "asr_output_deepgram": "Hey. Let me see. Could you work out what the return to be on a five thousand dollar investment in ABC stock? Assume a six percent annual growth rate over five years.",
          "clarifications": {
            "investment_amount": "$5000",
            "company_name": "ABC",
            "annual_growth_rate": "6%",
            "holding_period": "5 years"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_stock_return",
        "description": "Calculate the projected return of a stock investment given the investment amount, the annual growth rate and holding period in years.",
        "parameters": {
          "type": "dict",
          "properties": {
            "investment_amount": {
              "type": "integer",
              "description": "The amount of money to invest."
            },
            "annual_growth_rate": {
              "type": "float",
              "description": "The expected annual growth rate of the stock."
            },
            "holding_period": {
              "type": "integer",
              "description": "The number of years you intend to hold the stock."
            },
            "dividends": {
              "type": "boolean",
              "description": "Optional. True if the calculation should take into account potential dividends. Default is false."
            }
          },
          "required": [
            "investment_amount",
            "annual_growth_rate",
            "holding_period"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_138",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the future value of my portfolio if I invest $5000 in stock 'X' with an expected annual return of 5% for 7 years.",
          "transcript": "Hey, um, can you figure out the future value of my portfolio if I invest five thousand dollars into stock X with a five percent annual return over, uh, seven years?",
          "audio_path": "BFCL_v3_simple/simple_138_cartesia.mp3",
          "asr_output_openai": "Hey, um, can you figure out the future values of my portfolio if I invest $5,000 into Stock X with a 5% annual return over, uh, 7 years?",
          "asr_output_elevenlabs": "Hey, um, can you figure out the future values of my portfolio if I invest 5,000 dollars into stock X with a 5% annual return over, uh, seven years?",
          "asr_output_deepgram": "Hey. Can you figure out the future values of my portfolio if I invest five thousand dollars into StockX with a five percent annual return over, seven years?",
          "clarifications": {
            "invested_amount": "$5000",
            "stock_ticker": "X",
            "expected_annual_return": "5%",
            "investment_duration": "7 years"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "portfolio_future_value",
        "description": "Calculate the future value of an investment in a specific stock based on the invested amount, expected annual return and number of years.",
        "parameters": {
          "type": "dict",
          "properties": {
            "stock": {
              "type": "string",
              "description": "The ticker symbol of the stock."
            },
            "invested_amount": {
              "type": "integer",
              "description": "The invested amount in USD."
            },
            "expected_annual_return": {
              "type": "float",
              "description": "The expected annual return on investment as a decimal. E.g. 5% = 0.05"
            },
            "years": {
              "type": "integer",
              "description": "The number of years for which the investment is made."
            }
          },
          "required": [
            "stock",
            "invested_amount",
            "expected_annual_return",
            "years"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_139",
    "question": [
      [
        {
          "role": "user",
          "content": "What is the estimated return on a mutual fund, given that it has a yearly yield of 5%, an investment amount of $2000 and a time period of 3 years?",
          "transcript": "Um, whats the expected return on a mutual fund if it, uh, gives five percent annually, youve invested two thousand dollars, and it lasts for three years?",
          "audio_path": "BFCL_v3_simple/simple_139_cartesia.mp3",
          "asr_output_openai": "Um, what's the expected return on a mutual fund if it gives 5% annually, you've invested $2000, and it lasts for three years?",
          "asr_output_elevenlabs": "Um, what's the expected return on a mutual fund if it, uh, gives 5% annually, you've invested $2,000, and it lasts for three years?",
          "asr_output_deepgram": "What's the expected return on a mutual fund if it, gives five percent annually, you've invested two thousand dollars, and it lasts for three years?",
          "clarifications": {
            "yearly_yield": "5%",
            "investment_amount": "$2000",
            "time_period": "3 years"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "estimate_mutual_fund_return",
        "description": "Calculate the estimated return on a mutual fund given the yearly yield, the investment amount and the time period.",
        "parameters": {
          "type": "dict",
          "properties": {
            "yearly_yield": {
              "type": "float",
              "description": "The yearly yield of the mutual fund as a percentage."
            },
            "investment_amount": {
              "type": "integer",
              "description": "The initial investment amount in the mutual fund."
            },
            "years": {
              "type": "integer",
              "description": "The time period for which the investment is made in years."
            }
          },
          "required": [
            "yearly_yield",
            "investment_amount",
            "years"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_140",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the Compound Annual Growth Rate (CAGR) for an initial investment of $2000, final value of $3000 in a period of 4 years.",
          "transcript": "Um, whats the CAGR for a two thousand dollar investment, uh, growing to three thousand dollars over four years, right?",
          "audio_path": "BFCL_v3_simple/simple_140_cartesia.mp3",
          "asr_output_openai": "Um, what's the CGR for a $2,000 investment growing to $3,000 over four years, right?",
          "asr_output_elevenlabs": "Um, what's the CGR for a two thousand dollar investment, uh, growing to three thousand dollars over four years? Right?",
          "asr_output_deepgram": "What's the CGR for a two thousand dollar investment, growing to three thousand dollars over four years? Right?",
          "clarifications": {
            "initial_investment_value": "$2000",
            "final_investment_value": "$3000",
            "investment_period_years": "4"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_cagr",
        "description": "Calculate the Compound Annual Growth Rate (CAGR) given an initial investment value, a final investment value, and the number of years.",
        "parameters": {
          "type": "dict",
          "properties": {
            "initial_value": {
              "type": "integer",
              "description": "The initial investment value."
            },
            "final_value": {
              "type": "integer",
              "description": "The final investment value."
            },
            "period_in_years": {
              "type": "integer",
              "description": "The period of the investment in years."
            }
          },
          "required": [
            "initial_value",
            "final_value",
            "period_in_years"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_141",
    "question": [
      [
        {
          "role": "user",
          "content": "Get current Gold price per ounce.",
          "transcript": "What is the price of gold per ounce currently?",
          "audio_path": "BFCL_v3_simple/simple_141_cartesia.mp3",
          "asr_output_openai": "What is the price of gold per ounce currently?",
          "asr_output_elevenlabs": "What is the price of gold prounce currently?",
          "asr_output_deepgram": "What is the price of gold crowns currently?",
          "clarifications": {
            "metal": "Gold",
            "measure": "ounce"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_metal_price",
        "description": "Retrieve the current price for a specified metal and measure.",
        "parameters": {
          "type": "dict",
          "properties": {
            "metal": {
              "type": "string",
              "description": "The metal whose price needs to be fetched."
            },
            "measure": {
              "type": "string",
              "description": "The measure unit for price, like 'ounce' or 'kg'."
            }
          },
          "required": [
            "metal",
            "measure"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_142",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the NASDAQ stock price for the company Amazon at closing March.11, 2022.",
          "transcript": "So, whats Amazons NASDAQ stock price at, um, closing on March eleven, twenty-twenty-two?",
          "audio_path": "BFCL_v3_simple/simple_142_cartesia.mp3",
          "asr_output_openai": "So, what's Amazon's NASDAQ stock price at closing on March 11, 2022?",
          "asr_output_elevenlabs": "So, what's Amazon's NASDAQ stock price at, um, closing on March 11, 2022?",
          "asr_output_deepgram": "So what's Amazon's Nasdaq stock price at, closing on March eleven twenty twenty two?",
          "clarifications": {
            "company_name": "Amazon",
            "date": "March.11, 2022"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_stock_price",
        "description": "Get the closing stock price for a specific company on a specified date.",
        "parameters": {
          "type": "dict",
          "properties": {
            "company_name": {
              "type": "string",
              "description": "Name of the company."
            },
            "date": {
              "type": "string",
              "description": "Date of when to get the stock price. Format: yyyy-mm-dd."
            },
            "exchange": {
              "type": "string",
              "description": "Name of the stock exchange market where the company's stock is listed. Default is 'NASDAQ'"
            }
          },
          "required": [
            "company_name",
            "date"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_143",
    "question": [
      [
        {
          "role": "user",
          "content": "'Get stock price of Apple for the last 5 days in NASDAQ.'",
          "transcript": "Hey, can you get me the stock prices of Apple for the past five days on NASDAQ?",
          "audio_path": "BFCL_v3_simple/simple_143_cartesia.mp3",
          "asr_output_openai": "Hey, can you get me the stock prices of Apple for the past five days on NASDAQ?",
          "asr_output_elevenlabs": "Hey, can you get me the stock prices of Apple for the past five days on Nasdaq?",
          "asr_output_deepgram": "Hey. Can you get me the stock prices of Apple for the past five days on Nasdaq?",
          "clarifications": {
            "company_name": "Apple",
            "time_frame_days": "5",
            "stock_exchange": "NASDAQ"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_stock_price",
        "description": "Retrieve the stock price for a specific company and time frame.",
        "parameters": {
          "type": "dict",
          "properties": {
            "company": {
              "type": "string",
              "description": "The ticker symbol of the company."
            },
            "days": {
              "type": "integer",
              "description": "Number of past days for which the stock price is required."
            },
            "exchange": {
              "type": "string",
              "description": "The stock exchange where the company is listed, default is NYSE"
            }
          },
          "required": [
            "company",
            "days"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_144",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the market performance of the S&P 500 and the Dow Jones over the past 5 days.",
          "transcript": "Can you, uh, check the S and P five hundred and Dow Jones market performance for the last 5 days, right?",
          "audio_path": "BFCL_v3_simple/simple_144_cartesia.mp3",
          "asr_output_openai": "Can you? Check the S&P 500 and Dow Jones market performance for the last five days, right?",
          "asr_output_elevenlabs": "Can you, uh, check the S&P 500 and Dow Jones market performance for the last five days, right?",
          "asr_output_deepgram": "Can you, check the S and P five hundred and Dow Jones market performance for the last five days? Right?",
          "clarifications": {
            "index1": "S&P 500",
            "index2": "Dow Jones",
            "time_period_days": "5"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "market_performance.get_data",
        "description": "Retrieve the market performance data for specified indexes over a specified time period.",
        "parameters": {
          "type": "dict",
          "properties": {
            "indexes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Array of stock market indexes. Supported indexes are 'S&P 500', 'Dow Jones', 'NASDAQ', 'FTSE 100', 'DAX' etc."
            },
            "days": {
              "type": "integer",
              "description": "Number of days in the past for which the performance data is required."
            },
            "detailed": {
              "type": "boolean",
              "description": "Whether to return detailed performance data. If set to true, returns high, low, opening, and closing prices. If false, returns only closing prices. Default is false."
            }
          },
          "required": [
            "indexes",
            "days"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_145",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the compounded interest for an initial principal of $5000, annual interest rate of 5%, and compounding period of 10 years.",
          "transcript": "Um, can you work out, like, the compounded interest for five thousand dollars at a five percent annual rate over ten years?",
          "audio_path": "BFCL_v3_simple/simple_145_cartesia.mp3",
          "asr_output_openai": "Um, can you work out, like, the compounded interest for $5,000 at a 5% annual rate over 10 years?",
          "asr_output_elevenlabs": "Um, can you work out like the compounded interest for five thousand dollars at a five percent annual rate over ten years?",
          "asr_output_deepgram": "Can you work out, like, the compounded interest for five thousand dollars at a five percent annual rate over ten years?",
          "clarifications": {
            "initial_principal": "$5000",
            "annual_interest_rate": "5%",
            "compounding_period": "10 years"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_compounded_interest",
        "description": "Calculate the compounded interest for a given principal, interest rate, and period.",
        "parameters": {
          "type": "dict",
          "properties": {
            "principal": {
              "type": "integer",
              "description": "The initial principal."
            },
            "interest_rate": {
              "type": "float",
              "description": "The annual interest rate."
            },
            "period": {
              "type": "integer",
              "description": "The period in years."
            },
            "compounding_frequency": {
              "type": "string",
              "description": "The frequency of compounding per year. Defaults to 'Annually'.",
              "enum": [
                "Annually",
                "Semiannually",
                "Quarterly",
                "Monthly",
                "Daily"
              ]
            }
          },
          "required": [
            "principal",
            "interest_rate",
            "period"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_146",
    "question": [
      [
        {
          "role": "user",
          "content": "What's the price of Amazon stock for the last 3 days?",
          "transcript": "Hey, fill me in on the Amazon stock price for the past three days.",
          "audio_path": "BFCL_v3_simple/simple_146_cartesia.mp3",
          "asr_output_openai": "Hey, fill me in on the Amazon stock price for the past three days.",
          "asr_output_elevenlabs": "Hey, fill me in on the Amazon stock price for the past three days.",
          "asr_output_deepgram": "Hey. Fill me in on the Amazon stock price for the past three days.",
          "clarifications": {
            "company_name": "Amazon",
            "number_of_days": "3"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "stock_price",
        "description": "Get stock price data for a given company over a specified number of days.",
        "parameters": {
          "type": "dict",
          "properties": {
            "company": {
              "type": "string",
              "description": "The company name."
            },
            "days": {
              "type": "integer",
              "description": "The number of previous days to retrieve data for."
            },
            "data_type": {
              "type": "string",
              "description": "The type of price data to retrieve (e.g., 'Open', 'Close', 'High', 'Low'). Default is 'Close'."
            }
          },
          "required": [
            "company",
            "days"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_147",
    "question": [
      [
        {
          "role": "user",
          "content": "Retrieve stock prices of Microsoft and Google for the last 2 weeks.",
          "transcript": "Um, can you get the stock prices for Microsoft and, uh, Google from the past two weeks?",
          "audio_path": "BFCL_v3_simple/simple_147_cartesia.mp3",
          "asr_output_openai": "Um, can you get the stock prices for Microsoft and Google from the past two weeks?",
          "asr_output_elevenlabs": "Um, can you get the stock prices for Microsoft and, uh, Google from the past two weeks?",
          "asr_output_deepgram": "Can you get the stock prices for Microsoft and, Google from the past two weeks?",
          "clarifications": {
            "company1": "Microsoft",
            "company2": "Google",
            "duration": "2 weeks"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_stock_prices",
        "description": "Retrieves stock prices for specified companies and duration.",
        "parameters": {
          "type": "dict",
          "properties": {
            "companies": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of companies to retrieve stock prices for."
            },
            "duration": {
              "type": "string",
              "description": "Time duration to retrieve stock prices for. E.g., '1 week', '2 weeks', '1 month', etc."
            }
          },
          "required": [
            "companies",
            "duration"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_148",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the future value of an investment with an annual rate of return of 8%, an initial investment of $20000, and a time frame of 5 years.",
          "transcript": "Um, if I put in twenty thousand dollars for five years at an, um, eight percent yearly return, whats the future value of the investment?",
          "audio_path": "BFCL_v3_simple/simple_148_cartesia.mp3",
          "asr_output_openai": "If I put in $20,000 for 5 years at an 8% yearly return, what's the future value of the investment?",
          "asr_output_elevenlabs": "Um, if I put in twenty thousand dollars for five years at an, um, eight percent yearly return, what's the future value of the investment?",
          "asr_output_deepgram": "If I put in twenty thousand dollars for five years at an, eight percent yearly return, what's the future value of the investment?",
          "clarifications": {
            "annual_rate_of_return": "8%",
            "initial_investment_amount": "$20000",
            "investment_time_frame": "5 years"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "finance.calculate_future_value",
        "description": "Calculate the future value of an investment given an initial investment, annual rate of return, and a time frame.",
        "parameters": {
          "type": "dict",
          "properties": {
            "initial_investment": {
              "type": "integer",
              "description": "The initial investment amount."
            },
            "rate_of_return": {
              "type": "float",
              "description": "The annual rate of return."
            },
            "years": {
              "type": "integer",
              "description": "The time frame of the investment in years."
            },
            "contribution": {
              "type": "integer",
              "description": "Optional: Additional regular contributions. Default is 0."
            }
          },
          "required": [
            "initial_investment",
            "rate_of_return",
            "years"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_149",
    "question": [
      [
        {
          "role": "user",
          "content": "What's the current stock price of Apple and Microsoft?",
          "transcript": "Um, hey, can you tell me what the latest stock prices are for Apple and Microsoft? Thanks.",
          "audio_path": "BFCL_v3_simple/simple_149_cartesia.mp3",
          "asr_output_openai": "Um, hey, can you tell me what the latest stock prices are for Apple and Microsoft? Thanks.",
          "asr_output_elevenlabs": "Um, hey! Can you tell me what the latest stock prices are for Apple and Microsoft? Thanks.",
          "asr_output_deepgram": "Hey. Can you tell me what the latest stock prices are for Apple and Microsoft? Thanks.",
          "clarifications": {
            "company_name1": "Apple",
            "company_name2": "Microsoft"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_stock_price",
        "description": "Retrieves the current stock price of the specified companies",
        "parameters": {
          "type": "dict",
          "properties": {
            "company_names": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The list of companies for which to retrieve the stock price."
            }
          },
          "required": [
            "company_names"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_150",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the return of investment of a bank's savings account with a deposit of $1000, annual interest rate of 3% for 1 year.",
          "transcript": "Hey, could you, uh, work out the ROI for a bank savings account if I deposit a thousand bucks at a three percent annual interest rate for one year, please?",
          "audio_path": "BFCL_v3_simple/simple_150_cartesia.mp3",
          "asr_output_openai": "Hey, could you work out the ROI for a bank savings account if I deposit a thousand bucks at a 3% annual interest rate for one year, please?",
          "asr_output_elevenlabs": "Hey, could you, uh, work out the ROI for a bank savings account if I deposit a thousand bucks at a 3% annual interest rate for one year, please?",
          "asr_output_deepgram": "Hey. Could you, work out the ROI for a bank savings account if I deposit a thousand bucks at a three percent annual interest rate for one year, please?",
          "clarifications": {
            "deposit_amount": "$1000",
            "annual_interest_rate": "3%",
            "investment_period": "1 year"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_roi",
        "description": "Calculate the return on investment for a given deposit amount, annual interest rate, and time frame.",
        "parameters": {
          "type": "dict",
          "properties": {
            "deposit": {
              "type": "integer",
              "description": "The initial deposit amount."
            },
            "annual_interest_rate": {
              "type": "float",
              "description": "The annual interest rate provided by the bank."
            },
            "years": {
              "type": "integer",
              "description": "The period for which the money is invested."
            }
          },
          "required": [
            "deposit",
            "annual_interest_rate",
            "years"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_151",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the highest grossing bank in the U.S for year 2020.",
          "transcript": "Whats the top-grossing bank in the U.S. for twenty-twenty?",
          "audio_path": "BFCL_v3_simple/simple_151_cartesia.mp3",
          "asr_output_openai": "What's the top grossing bank in the US for 2020?",
          "asr_output_elevenlabs": "What's the top-grossing bank in the U.S. for 2020?",
          "asr_output_deepgram": "What's the top grossing bank in the US for twenty twenty?",
          "clarifications": {
            "country": "U.S",
            "year": "2020"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "highest_grossing_banks",
        "description": "Retrieve the highest grossing banks in a specified country and year.",
        "parameters": {
          "type": "dict",
          "properties": {
            "country": {
              "type": "string",
              "description": "The country to get the data from."
            },
            "year": {
              "type": "integer",
              "description": "The year to get the data from."
            },
            "top_n": {
              "type": "integer",
              "description": "Top n banks in terms of grossing. Default is 5"
            }
          },
          "required": [
            "country",
            "year"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_152",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the balance of a mutual fund given a total investment of $50000 with a 5% annual yield after 3 years.",
          "transcript": "Hey, um, can you figure out the balance of a mutual fund if I invest fifty thousand dollars with a five percent annual yield over, uh, three years?",
          "audio_path": "BFCL_v3_simple/simple_152_cartesia.mp3",
          "asr_output_openai": "Hey, um, can you figure out the balance of a mutual fund if I invest fifty thousand dollars with a five percent annual yield over, uh, three years?",
          "asr_output_elevenlabs": "Hey, uhm, can you figure out the balance of a mutual fund if I invest $50,000 with a 5% annual yield over, uh, three years?",
          "asr_output_deepgram": "Hey. Can you figure out the balance of a mutual fund if I invest fifty thousand dollars with a five percent annual yield over, three years?",
          "clarifications": {
            "investment_amount": "$50000",
            "annual_yield": "5%",
            "years": "3"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_mutual_fund_balance",
        "description": "Calculate the final balance of a mutual fund investment based on the total initial investment, annual yield rate and the time period.",
        "parameters": {
          "type": "dict",
          "properties": {
            "investment_amount": {
              "type": "integer",
              "description": "The initial total amount invested in the fund."
            },
            "annual_yield": {
              "type": "float",
              "description": "The annual yield rate of the fund."
            },
            "years": {
              "type": "integer",
              "description": "The period of time for the fund to mature."
            }
          },
          "required": [
            "investment_amount",
            "annual_yield",
            "years"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_153",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the compounded interest on an initial deposit of $5000 at an annual interest rate of 3% for 5 years, compounded quarterly.",
          "transcript": "Um, can you, uh, figure out the compounded interest on a five thousand dollar deposit at a three percent annual rate, compounded quarterly over five years?",
          "audio_path": "BFCL_v3_simple/simple_153_cartesia.mp3",
          "asr_output_openai": "Um, can you figure out the compounded interest on a $5,000 deposit at a 3% annual rate, compounded quarterly, over five years?",
          "asr_output_elevenlabs": "Um, can you, uh, figure out the compounded interest on a $5,000 deposit at a 3% annual rate compounded quarterly over five years?",
          "asr_output_deepgram": "Can you, figure out the compounded interest on a five thousand dollar deposit at a three percent annual rate compounded quarterly over five years?",
          "clarifications": {
            "initial_deposit": "$5000",
            "annual_interest_rate": "3%",
            "investment_duration": "5 years",
            "compounding_frequency": "quarterly"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_compounded_interest",
        "description": "Calculate the compounded interest for a given initial deposit, interest rate, time and number of times the interest is compounded per unit time.",
        "parameters": {
          "type": "dict",
          "properties": {
            "principal": {
              "type": "integer",
              "description": "The initial amount of money that is being invested or loaned."
            },
            "rate": {
              "type": "float",
              "description": "The annual interest rate."
            },
            "time": {
              "type": "integer",
              "description": "The number of time periods the money is invested or loaned for."
            },
            "n": {
              "type": "integer",
              "description": "The number of times that interest is compounded per unit time."
            }
          },
          "required": [
            "principal",
            "rate",
            "time",
            "n"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_154",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the Future Value of a $5000 investment made today for a term of 10 years at an annual interest rate of 5%",
          "transcript": "Um, hey, can you figure out, uh, the future value of a five thousand dollar investment over, like, ten years at five percent interest annually? Thanks.",
          "audio_path": "BFCL_v3_simple/simple_154_cartesia.mp3",
          "asr_output_openai": "Hey, can you figure out the future value of a $5,000 investment over like 10 years at 5% interest annually? Thanks.",
          "asr_output_elevenlabs": "Um, hey, can you figure out, uh, the future value of a 5,000 dollar investment over, like, 10 years at 5% interest annually? Thanks!",
          "asr_output_deepgram": "Hey. Can you figure out, the future value of a five thousand dollar investment over, like, ten years at five percent interest annually? Thanks.",
          "clarifications": {
            "present_value": "$5000",
            "years": "10",
            "annual_interest_rate": "5%"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_future_value",
        "description": "Calculates the future value of an investment based on the present value, interest rate, and time period.",
        "parameters": {
          "type": "dict",
          "properties": {
            "present_value": {
              "type": "integer",
              "description": "The present value or principal amount."
            },
            "annual_interest_rate": {
              "type": "float",
              "description": "The annual interest rate in decimal form. Example, 5% is 0.05."
            },
            "years": {
              "type": "integer",
              "description": "The time period in years for which the investment is made."
            },
            "compounds_per_year": {
              "type": "integer",
              "description": "The number of times the interest is compounded per year. Default is 1 (annual compounding)."
            }
          },
          "required": [
            "present_value",
            "annual_interest_rate",
            "years"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_155",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the future value of my investment of $1000 with an annual interest rate of 5% over 2 years.",
          "transcript": "Whats the future value of my thousand-dollar investment with a five percent annual interest rate over two years?",
          "audio_path": "BFCL_v3_simple/simple_155_cartesia.mp3",
          "asr_output_openai": "What's the future value of my thousand-dollar investment with a 5% annual interest rate over two years?",
          "asr_output_elevenlabs": "What's the future value of my thousand-dollar investment with a 5% annual interest rate over two years?",
          "asr_output_deepgram": "What's the future value of my thousand dollar investment with a five percent annual interest rate over two years?",
          "clarifications": {
            "initial_investment": "$1000",
            "interest_rate": "5%",
            "duration": "2 years"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_future_value",
        "description": "Calculate the future value of an investment given the initial amount, interest rate, and investment duration.",
        "parameters": {
          "type": "dict",
          "properties": {
            "initial_investment": {
              "type": "integer",
              "description": "The initial investment amount."
            },
            "interest_rate": {
              "type": "float",
              "description": "The annual interest rate in decimal form."
            },
            "duration": {
              "type": "integer",
              "description": "The investment duration in years."
            },
            "compounded": {
              "type": "integer",
              "description": "The number of times the interest is compounded per year. Default is 1 (annual compounding)."
            }
          },
          "required": [
            "initial_investment",
            "interest_rate",
            "duration"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_156",
    "question": [
      [
        {
          "role": "user",
          "content": "Look up details of a felony crime record for case number CA123456 in San Diego County",
          "transcript": "Can you look up the felony crime record details for case number CA one two three four fifty-six in San Diego County?",
          "audio_path": "BFCL_v3_simple/simple_156_cartesia.mp3",
          "asr_output_openai": "Can you look up the felony crime record details for case number CA123456 in San Diego County?",
          "asr_output_elevenlabs": "Can you look up the felony crime record details for case number CA123456 in San Diego County?",
          "asr_output_deepgram": "Can you look up the felony crime record details for case number CA one two three four fifty six in San Diego County?",
          "clarifications": {
            "case_number": "CA123456",
            "county": "San Diego County"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "crime_record.get_record",
        "description": "Retrieve detailed felony crime records using a specific case number and location.",
        "parameters": {
          "type": "dict",
          "properties": {
            "case_number": {
              "type": "string",
              "description": "The case number related to the crime."
            },
            "county": {
              "type": "string",
              "description": "The county in which the crime occurred."
            },
            "details": {
              "type": "boolean",
              "description": "To get a detailed report, set as true. Defaults to false."
            }
          },
          "required": [
            "case_number",
            "county"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_157",
    "question": [
      [
        {
          "role": "user",
          "content": "Find out if an individual John Doe with a birthday 01-01-1980 has any prior felony convictions in California.",
          "transcript": "Uh, check if John Doe, um, born January 1, 1980, has any past felony convictions in California, okay.",
          "audio_path": "BFCL_v3_simple/simple_157_cartesia.mp3",
          "asr_output_openai": "Check if John Doe, born January 1, 1980, has any past felony convictions in California.",
          "asr_output_elevenlabs": "Uh, check if John Doe, um, born January 1st, 1980, has any past felony convictions in California, okay?",
          "asr_output_deepgram": "Check if John Doe, born January first nineteen eighty, has any past felony convictions in California. Okay?",
          "clarifications": {
            "full_name": "John Doe",
            "birth_date": "01-01-1980",
            "state": "California"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "criminal_history.check_felonies",
        "description": "This function checks if an individual has any prior felony convictions based on their full name and birth date.",
        "parameters": {
          "type": "dict",
          "properties": {
            "full_name": {
              "type": "string",
              "description": "The full name of the individual."
            },
            "birth_date": {
              "type": "string",
              "description": "The birth date of the individual. Must be in MM-DD-YYYY format."
            },
            "state": {
              "type": "string",
              "description": "The state to search the criminal record in. Default to 'None', which the function will search across all states."
            }
          },
          "required": [
            "full_name",
            "birth_date"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_158",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the information of criminal cases of Mr. X in New York between 2012 and 2015.",
          "transcript": "Uh, right, find Mr. Xs criminal cases in New York from twenty-twelve to twenty-fifteen.",
          "audio_path": "BFCL_v3_simple/simple_158_cartesia.mp3",
          "asr_output_openai": "All right. Find Mr. X criminal cases in New York from 2012 to 2015.",
          "asr_output_elevenlabs": "Uh, right. Find Mr. X criminal cases in New York from 2012 to 2015.",
          "asr_output_deepgram": "Alright. Find mister x criminal cases in New York from twenty twelve to twenty fifteen.",
          "clarifications": {
            "person_name": "Mr. X",
            "location": "New York",
            "start_year": "2012",
            "end_year": "2015"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_criminal_records",
        "description": "Retrieve the criminal records of a specific person in a specific area during a certain time period.",
        "parameters": {
          "type": "dict",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the person."
            },
            "location": {
              "type": "string",
              "description": "The city and state, e.g. New York, NY"
            },
            "from_year": {
              "type": "integer",
              "description": "The start year of the time frame."
            },
            "to_year": {
              "type": "integer",
              "description": "The end year of the time frame."
            }
          },
          "required": [
            "name",
            "location",
            "from_year",
            "to_year"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_159",
    "question": [
      [
        {
          "role": "user",
          "content": "Give me the details of Criminal Law Amendment Act of 2013.",
          "transcript": "Lemme see... oh, can you provide info about Criminal Law Amendment Act of twenty-thirteen?",
          "audio_path": "BFCL_v3_simple/simple_159_cartesia.mp3",
          "asr_output_openai": "Let me see. Oh, can you provide info about Criminal Law Amendment Act of 2013?",
          "asr_output_elevenlabs": "Lemme see. Oh, can you provide info about Criminal Law Amendment Act of 2013?",
          "asr_output_deepgram": "Let me see. Oh, can you provide info about Criminal Law Amendment Act of twenty thirteen?",
          "clarifications": {
            "act_name": "Criminal Law Amendment Act",
            "amendment_year": "2013"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_act_details",
        "description": "Retrieve the details of a particular legal act based on its name and year of amendment if any.",
        "parameters": {
          "type": "dict",
          "properties": {
            "act_name": {
              "type": "string",
              "description": "The name of the act."
            },
            "amendment_year": {
              "type": "integer",
              "description": "Year of amendment if any. If not provided, the latest amendment year will be considered."
            }
          },
          "required": [
            "act_name",
            "amendment_year"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_160",
    "question": [
      [
        {
          "role": "user",
          "content": "Who was the victim in the case docket numbered 2022/AL2562 in California?",
          "transcript": "Uh, hey, who was the victim in the California case with the docket number twenty twenty-two slash AL two five six two?",
          "audio_path": "BFCL_v3_simple/simple_160_cartesia.mp3",
          "asr_output_openai": "Uh, hey, who was the victim in the California case with the docket number 2020/AL2562?",
          "asr_output_elevenlabs": "Uh, hey, who was the victim in the California case with the docket number 2022/AL2562?",
          "asr_output_deepgram": "Hey. Who was the victim in the California case with the docket number twenty twenty two slash a l two five six two?",
          "clarifications": {
            "docket_number": "2022/AL2562",
            "court_location": "California"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_case_info",
        "description": "Retrieve case details using a specific case docket number and court location.",
        "parameters": {
          "type": "dict",
          "properties": {
            "docket": {
              "type": "string",
              "description": "Docket number for the specific court case."
            },
            "court": {
              "type": "string",
              "description": "Court in which the case was heard."
            },
            "info_type": {
              "type": "string",
              "description": "Specify the information type needed for the case. i.e., victim, accused, verdict etc."
            }
          },
          "required": [
            "docket",
            "court",
            "info_type"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_161",
    "question": [
      [
        {
          "role": "user",
          "content": "Find out the possible punishments for the crime of theft in California in detail.",
          "transcript": "Um, oh, can you tell me the detailed punishments for theft in California?",
          "audio_path": "BFCL_v3_simple/simple_161_cartesia.mp3",
          "asr_output_openai": "Um oh, can you tell me the detailed punishments for theft in California?",
          "asr_output_elevenlabs": "Um, O, can you tell me the detailed punishments for theft in California?",
          "asr_output_deepgram": "Oh, can you tell me the detailed punishments for theft in California?",
          "clarifications": {
            "jurisdiction": "California",
            "crime": "theft"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "crime_statute_lookup",
        "description": "Look up the criminal statutes in a specific jurisdiction to find possible punishments for a specific crime.",
        "parameters": {
          "type": "dict",
          "properties": {
            "jurisdiction": {
              "type": "string",
              "description": "The jurisdiction to search in, usually a state or country."
            },
            "crime": {
              "type": "string",
              "description": "The crime to search for."
            },
            "detail_level": {
              "type": "string",
              "enum": [
                "basic",
                "detailed"
              ],
              "description": "How detailed of a report to return. Optional, default is 'basic'."
            }
          },
          "required": [
            "jurisdiction",
            "crime"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_162",
    "question": [
      [
        {
          "role": "user",
          "content": "Generate a customized law contract between John and Alice for rental agreement in California.",
          "transcript": "Uh, can you write a custom rental agreement contract for John and Alice in California?",
          "audio_path": "BFCL_v3_simple/simple_162_cartesia.mp3",
          "asr_output_openai": "Can you write a custom rental agreement contract for John and Alice in California?",
          "asr_output_elevenlabs": "Uh, can you write a custom rental agreement contract for John and Alice in California?",
          "asr_output_deepgram": "Can you write a custom rental agreement contract for John and Alice in California?",
          "clarifications": {
            "first_party_name": "John",
            "second_party_name": "Alice",
            "contract_location": "California"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "generate_law_contract",
        "description": "Generates a customized law contract given involved parties, contract type and location.",
        "parameters": {
          "type": "dict",
          "properties": {
            "parties": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Parties involved in the contract."
            },
            "contract_type": {
              "type": "string",
              "description": "Type of the contract."
            },
            "location": {
              "type": "string",
              "description": "Location where the contract will be in effect."
            }
          },
          "required": [
            "parties",
            "contract_type",
            "location"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_163",
    "question": [
      [
        {
          "role": "user",
          "content": "Provide me with the property records of my house located at 123 main street, with parcel number 1234567890 in Santa Clara county. Include owners information in the response.",
          "transcript": "Can you get the property records for my house at 123 Main, parcel number one two three four five six seventy-eight ninety, in Santa Clara? And, oh, add the owners info too.",
          "audio_path": "BFCL_v3_simple/simple_163_cartesia.mp3",
          "asr_output_openai": "Can you get the property records for my house at 123 Main, parcel number 12345-67890, in Santa Clara? And oh, add the owner's info too!",
          "asr_output_elevenlabs": "Can you get the property records for my house at 123 Main, parcel number 1234567890 in Santa Clara? And oh, add the owner's info too.",
          "asr_output_deepgram": "Can you get the property records for my house at one hundred and twenty three Main, parcel number one two three four five six seventy eight ninety in Santa Clara? And, oh, add the owner's info too.",
          "clarifications": {
            "street_address": "123 main street",
            "parcel_number": "1234567890",
            "county": "Santa Clara"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "property_records.get",
        "description": "Fetch property records based on location, parcel number and county.",
        "parameters": {
          "type": "dict",
          "properties": {
            "address": {
              "type": "string",
              "description": "Address of the property."
            },
            "parcel_number": {
              "type": "string",
              "description": "Parcel number of the property."
            },
            "county": {
              "type": "string",
              "description": "County where the property is located."
            },
            "include_owner": {
              "type": "boolean",
              "description": "Include owner's name in the property record. Default is false.",
              "default": false
            }
          },
          "required": [
            "address",
            "parcel_number",
            "county"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_164",
    "question": [
      [
        {
          "role": "user",
          "content": "Provide me the official crime rate of violent crime in San Francisco in 2020.",
          "transcript": "Hey, um, can you give me the official violent crime rate for San Francisco in twenty-twenty?",
          "audio_path": "BFCL_v3_simple/simple_164_cartesia.mp3",
          "asr_output_openai": "Hey um, can you give me the official violent crime rate for San Francisco in 2020?",
          "asr_output_elevenlabs": "Hey, um, can you give me the official violent crime rate for San Francisco in 2020?",
          "asr_output_deepgram": "Hey, can you give me the official violent crime rate for San Francisco in twenty twenty?",
          "clarifications": {
            "city_name": "San Francisco",
            "crime_type": "violent crime",
            "year": "2020"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_crime_rate",
        "description": "Retrieve the official crime rate of a city.",
        "parameters": {
          "type": "dict",
          "properties": {
            "city": {
              "type": "string",
              "description": "The name of the city."
            },
            "state": {
              "type": "string",
              "description": "The state where the city is located."
            },
            "type": {
              "type": "string",
              "description": "Optional. The type of crime. Default is 'violent'"
            },
            "year": {
              "type": "integer",
              "description": "Optional. The year for the crime rate data. Default is year 2001."
            }
          },
          "required": [
            "city",
            "state"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_165",
    "question": [
      [
        {
          "role": "user",
          "content": "Retrieve cases from 2020 about theft crimes in Los Angeles, California",
          "transcript": "Can you get the twenty-twenty theft crime cases from Los Angeles, please?",
          "audio_path": "BFCL_v3_simple/simple_165_cartesia.mp3",
          "asr_output_openai": "Can you get the 2020 theft crime cases from Los Angeles police?",
          "asr_output_elevenlabs": "Can you get the 2020 theft crime cases from Los Angeles, please?",
          "asr_output_deepgram": "Can you get the twenty twenty theft crime cases from Los Angeles, please?",
          "clarifications": {
            "year": "2020",
            "crime_type": "theft",
            "location": "Los Angeles, California"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "civil_cases.retrieve",
        "description": "Retrieve civil cases based on given parameters, including year, crime type, and location.",
        "parameters": {
          "type": "dict",
          "properties": {
            "year": {
              "type": "integer",
              "description": "Year of the cases"
            },
            "crime_type": {
              "type": "string",
              "description": "Type of the crime."
            },
            "location": {
              "type": "string",
              "description": "Location of the case in the format of city name."
            }
          },
          "required": [
            "year",
            "crime_type",
            "location"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_166",
    "question": [
      [
        {
          "role": "user",
          "content": "Find a lawyer specializing in divorce cases and charge fee less than 400 dollars per hour in Chicago.",
          "transcript": "Uh, can you find divorce lawyer in Chicago who, um, charges less than four hundred bucks an hour?",
          "audio_path": "BFCL_v3_simple/simple_166_cartesia.mp3",
          "asr_output_openai": "Can you find a divorce lawyer in Chicago who charges less than 400 bucks an hour?",
          "asr_output_elevenlabs": "Can you find divorce lawyer in Chicago who charges less than $400 an hour?",
          "asr_output_deepgram": "Can you find divorce lawyer in Chicago who, charges less than four hundred bucks an hour?",
          "clarifications": {
            "city": "Chicago",
            "specialty": "divorce cases",
            "fee": "400"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "lawyer.find_nearby",
        "description": "Locate nearby lawyers based on specific criteria like specialty, fee per hour and city.",
        "parameters": {
          "type": "dict",
          "properties": {
            "city": {
              "type": "string",
              "description": "The city and state, e.g. Chicago, IL."
            },
            "specialty": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Civil",
                  "Divorce",
                  "Immigration",
                  "Business",
                  "Criminal"
                ]
              },
              "description": "Specialization of the lawyer."
            },
            "fee": {
              "type": "integer",
              "description": "Hourly fee charged by lawyer"
            }
          },
          "required": [
            "city",
            "specialty",
            "fee"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_167",
    "question": [
      [
        {
          "role": "user",
          "content": "Retrieve the details of a Supreme Court case titled 'Roe v. Wade'.Include dissent information.",
          "transcript": "Uh, get me details on the Supreme Court case called Roe v. Wade, including, um, any dissenting opinions.",
          "audio_path": "BFCL_v3_simple/simple_167_cartesia.mp3",
          "asr_output_openai": "Get me details on the Supreme Court case called Roe v. Wade, including any dissenting opinions.",
          "asr_output_elevenlabs": "Uh, get me details on the Supreme Court case called Roe v Wade, including, um, any dissenting opinions.",
          "asr_output_deepgram": "Get me details on the Supreme Court case called Roe v Wade, including, any dissenting opinions.",
          "clarifications": {
            "case_title": "Roe v. Wade"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "law.civil.get_case_details",
        "description": "Retrieve the details of a Supreme Court case given its title.",
        "parameters": {
          "type": "dict",
          "properties": {
            "case_title": {
              "type": "string",
              "description": "Title of the Supreme Court case."
            },
            "include_dissent": {
              "type": "boolean",
              "description": "If true, the output will include details of the dissenting opinion."
            }
          },
          "required": [
            "case_title",
            "include_dissent"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_168",
    "question": [
      [
        {
          "role": "user",
          "content": "Search for ongoing lawsuits related to the company 'Google' filed after January 1, 2021 in California.",
          "transcript": "Can you find ongoing lawsuits against Google filed in California after January first, twenty twenty-one?",
          "audio_path": "BFCL_v3_simple/simple_168_cartesia.mp3",
          "asr_output_openai": "Can you find ongoing lawsuits against Google filed in California after January 1, 2021?",
          "asr_output_elevenlabs": "Can you find ongoing lawsuits against Google filed in California after January 1st 2021?",
          "asr_output_deepgram": "Can you find ongoing lawsuits against Google filed in California after January first twenty twenty one?",
          "clarifications": {
            "company_name": "Google",
            "start_date": "January 1, 2021",
            "location": "California"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "lawsuit_search",
        "description": "Search for lawsuits related to a specific company within a specific date range and location.",
        "parameters": {
          "type": "dict",
          "properties": {
            "company": {
              "type": "string",
              "description": "The company related to the lawsuit."
            },
            "start_date": {
              "type": "string",
              "description": "Start of the date range for when the lawsuit was filed in the format of MM-DD-YYY."
            },
            "location": {
              "type": "string",
              "description": "Location where the lawsuit was filed in the format of full state name."
            },
            "status": {
              "type": "string",
              "enum": [
                "ongoing",
                "settled",
                "dismissed"
              ],
              "description": "The status of the lawsuit. Default is 'ongoing'."
            }
          },
          "required": [
            "company",
            "start_date",
            "location"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_169",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the details of the court case identified by docket number 123456 in Texas. Don't return full text",
          "transcript": "Uh, right, can you find details for Texas court case with docket number one two three, four five six? Just a summary, not full text.",
          "audio_path": "BFCL_v3_simple/simple_169_cartesia.mp3",
          "asr_output_openai": "Alright, can you find details for Texas court case with docket number 123456? Just a summary, not full text.",
          "asr_output_elevenlabs": "Uh, right. Can you find details for Texas court case with docket number 123456? Just a summary, not full text.",
          "asr_output_deepgram": "Right. Can you find details for Texas court case with docket number one two three four five six? Just a summary, not full text.",
          "clarifications": {
            "docket_number": "123456",
            "location": "Texas"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "court_case.search",
        "description": "Retrieves details about a court case using its docket number and location.",
        "parameters": {
          "type": "dict",
          "properties": {
            "docket_number": {
              "type": "string",
              "description": "The docket number for the case."
            },
            "location": {
              "type": "string",
              "description": "The location where the case is registered, in the format: state, e.g., Texas"
            },
            "full_text": {
              "type": "boolean",
              "default": "false",
              "description": "Option to return the full text of the case ruling."
            }
          },
          "required": [
            "docket_number",
            "location"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_170",
    "question": [
      [
        {
          "role": "user",
          "content": "Find a historical law case about fraud from 2010 to 2015.",
          "transcript": "Um, can you look up a fraud case, historical, from twenty-ten to twenty-fifteen?",
          "audio_path": "BFCL_v3_simple/simple_170_cartesia.mp3",
          "asr_output_openai": "Um, can you look up a fraud case, historical, from 2010 to 2015?",
          "asr_output_elevenlabs": "Um, can you look up a fraud case, historical, from 2010 to 2015?",
          "asr_output_deepgram": "Can you look up a fraud case historical from twenty ten to twenty fifteen?",
          "clarifications": {
            "subject": "fraud",
            "from_year": "2010",
            "to_year": "2015"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "law_case_search.find_historical",
        "description": "Search for a historical law case based on specific criteria like the subject and year.",
        "parameters": {
          "type": "dict",
          "properties": {
            "subject": {
              "type": "string",
              "description": "The subject matter of the case, e.g., 'fraud'"
            },
            "from_year": {
              "type": "integer",
              "description": "The start year for the range of the case. The case should happen after this year."
            },
            "to_year": {
              "type": "integer",
              "description": "The end year for the range of the case. The case should happen before this year."
            }
          },
          "required": [
            "subject",
            "from_year",
            "to_year"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_171",
    "question": [
      [
        {
          "role": "user",
          "content": "Fetch details of a law case with number 43403 in New York court for year 2018.",
          "transcript": "Um, can you get details for, like, law case number forty-three four oh three in the New York court from twenty eighteen? Thanks.",
          "audio_path": "BFCL_v3_simple/simple_171_cartesia.mp3",
          "asr_output_openai": "Um, can you get details for like law case number 43403 in the New York court from 2018? Thanks.",
          "asr_output_elevenlabs": "Um, c-can you get details for, like, law case number 43403 in the New York Court from 2018? Thanks!",
          "asr_output_deepgram": "Can you get details for, like, law case number forty three four zero three in the New York court from twenty eighteen? Thanks.",
          "clarifications": {
            "case_number": "43403",
            "court": "New York",
            "year": "2018"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "fetch_law_case_details",
        "description": "Fetch details of a specific law case based on case number, year and court.",
        "parameters": {
          "type": "dict",
          "properties": {
            "case_number": {
              "type": "integer",
              "description": "The specific number of the law case."
            },
            "court": {
              "type": "string",
              "description": "The city name where the court takes place"
            },
            "year": {
              "type": "integer",
              "description": "The year in which the law case took place."
            }
          },
          "required": [
            "case_number",
            "court",
            "year"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_172",
    "question": [
      [
        {
          "role": "user",
          "content": "How to obtain the detailed case information of the 'R vs Adams' legal case?",
          "transcript": "Um, right, how can I get detailed info on the R vs Adams legal case?",
          "audio_path": "BFCL_v3_simple/simple_172_cartesia.mp3",
          "asr_output_openai": "Um, right. How can I get detailed info on the RV's Adams legal case?",
          "asr_output_elevenlabs": "Um, right. How can I get detailed info on the R v Adams legal case?",
          "asr_output_deepgram": "Right. How can I get detailed info on the RVs Adams legal case?",
          "clarifications": {
            "case_name": "R vs Adams"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "legal_case.fetch",
        "description": "Fetch detailed legal case information from database.",
        "parameters": {
          "type": "dict",
          "properties": {
            "case_id": {
              "type": "string",
              "description": "The ID of the legal case."
            },
            "details": {
              "type": "boolean",
              "description": "True if need the detail info. "
            }
          },
          "required": [
            "case_id",
            "details"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_173",
    "question": [
      [
        {
          "role": "user",
          "content": "Find state law cases related to land disputes in the past 5 years from 2015 to 2021 in New York.",
          "transcript": "Um, can you look up state law cases about, uh, land disputes in New York from twenty-fifteen to twenty-twenty-one? Thanks?",
          "audio_path": "BFCL_v3_simple/simple_173_cartesia.mp3",
          "asr_output_openai": "Can you look up state law cases about land disputes in New York from 2015 to 2021? Thanks.",
          "asr_output_elevenlabs": "Um, can you look up state law cases about, uh, land disputes in New York from 2015 to 2021? Thanks.",
          "asr_output_deepgram": "Can you look up state law cases about, land disputes in New York from twenty fifteen to twenty twenty one? Thanks.",
          "clarifications": {
            "topic": "land disputes",
            "year_range": "2015 to 2021",
            "location": "New York"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "law_case_search",
        "description": "Search and retrieve law cases based on the topic, timeline, and location.",
        "parameters": {
          "type": "dict",
          "properties": {
            "topic": {
              "type": "string",
              "description": "The subject matter of the case."
            },
            "year_range": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "The start and end year for searching cases."
            },
            "location": {
              "type": "string",
              "description": "The location where the case is being heard."
            },
            "judicial_system": {
              "type": "string",
              "description": "The specific judicial system in which to search (e.g. 'federal', 'state').",
              "default": "all"
            }
          },
          "required": [
            "topic",
            "year_range",
            "location"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_174",
    "question": [
      [
        {
          "role": "user",
          "content": "Get me the top 10 landmark cases in constitutional law in China.",
          "transcript": "Uh, could you get the top ten landmark cases in Chinese constitutional law for me?",
          "audio_path": "BFCL_v3_simple/simple_174_cartesia.mp3",
          "asr_output_openai": "Could you get the top ten landmark cases in Chinese constitutional law for me?",
          "asr_output_elevenlabs": "Uh, could you get the top ten landmark cases in Chinese constitutional law for me?",
          "asr_output_deepgram": "Could you get the top ten landmark cases in Chinese constitutional law for me?",
          "clarifications": {
            "field_of_law": "constitutional law",
            "top_number": "10",
            "country": "China"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_top_cases",
        "description": "Retrieve a list of the most influential or landmark cases in a specific field of law.",
        "parameters": {
          "type": "dict",
          "properties": {
            "field_of_law": {
              "type": "string",
              "description": "The specific field of law e.g., constitutional law, criminal law, etc."
            },
            "top_number": {
              "type": "integer",
              "description": "The number of top cases to retrieve."
            },
            "country": {
              "type": "string",
              "description": "The country where the law cases should be retrieved from. Default is United States of America."
            }
          },
          "required": [
            "field_of_law",
            "top_number"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_175",
    "question": [
      [
        {
          "role": "user",
          "content": "How many months of experience a Lawyer John Doe has on handling Bankruptcy cases.",
          "transcript": "Hey, can you tell me how many months Lawyer John Doe, thats J-O-H-N D-O-E, has been handling bankruptcy cases?",
          "audio_path": "BFCL_v3_simple/simple_175_cartesia.mp3",
          "asr_output_openai": "Hey, can you tell me how many months lawyer John Doe, that's J-O-H-N D-O-E, has been handling bankruptcy cases?",
          "asr_output_elevenlabs": "Hey, can you tell me how many months lawyer John Doe, that's J-O-H-N D-O-E, has been handling bankruptcy cases?",
          "asr_output_deepgram": "Hey. Can you tell me how many months lawyer John Doe, that's j o h n d o e, has been handling bankruptcy cases?",
          "clarifications": {
            "lawyer_name": "John Doe",
            "law_type": "Bankruptcy"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "lawyer.get_experience",
        "description": "Retrieve months of experience of a Lawyer on handling certain type of law cases.",
        "parameters": {
          "type": "dict",
          "properties": {
            "name": {
              "type": "string",
              "description": "The full name of the Lawyer."
            },
            "law_type": {
              "type": "string",
              "description": "The type of law case. eg. Bankruptcy"
            }
          },
          "required": [
            "name",
            "law_type"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_176",
    "question": [
      [
        {
          "role": "user",
          "content": "Find details of patent lawsuits involving the company 'Apple Inc.' from the year 2010.",
          "transcript": "Uh, can you look up details of, um, patent lawsuits involving Apple Incorporated from twenty ten, please?",
          "audio_path": "BFCL_v3_simple/simple_176_cartesia.mp3",
          "asr_output_openai": "Can you look up details of patent lawsuits involving Apple Inc. from 2010, please?",
          "asr_output_elevenlabs": "Uh, can you look up details of, um, patent lawsuits involving Apple Incorporated from 2010, please?",
          "asr_output_deepgram": "Can you look up details of, patent lawsuits involving Apple Incorporated from twenty ten, please?",
          "clarifications": {
            "company_name": "Apple Inc.",
            "year": "2010"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "lawsuit_details.find",
        "description": "Find details of lawsuits involving a specific company from a given year.",
        "parameters": {
          "type": "dict",
          "properties": {
            "company_name": {
              "type": "string",
              "description": "Name of the company."
            },
            "year": {
              "type": "integer",
              "description": "Year of the lawsuit."
            },
            "case_type": {
              "type": "string",
              "description": "Type of the lawsuit, e.g., 'IPR', 'Patent', 'Commercial', etc. Default is 'all'."
            }
          },
          "required": [
            "company_name",
            "year"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_177",
    "question": [
      [
        {
          "role": "user",
          "content": "Find all Patent lawsuit cases of Facebook in 2018.",
          "transcript": "Can you look up all the patent lawsuits involving Facebook from twenty-eighteen?",
          "audio_path": "BFCL_v3_simple/simple_177_cartesia.mp3",
          "asr_output_openai": "Can you look up all the patent lawsuits involving Facebook from 2018?",
          "asr_output_elevenlabs": "Can you look up all the patent lawsuits involving Facebook from 2018?",
          "asr_output_deepgram": "Can you look up all the patent lawsuits involving Facebook from twenty eighteen?",
          "clarifications": {
            "company_name": "Facebook",
            "year": "2018"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_lawsuit_cases",
        "description": "Retrieve all lawsuit cases related to a specific company during a particular year.",
        "parameters": {
          "type": "dict",
          "properties": {
            "company_name": {
              "type": "string",
              "description": "The name of the company."
            },
            "year": {
              "type": "integer",
              "description": "The specific year to search for lawsuit cases."
            },
            "status": {
              "type": "string",
              "enum": [
                "open",
                "closed",
                "all"
              ],
              "description": "The status of the lawsuit cases to retrieve. If not specified, defaults to 'all'."
            }
          },
          "required": [
            "company_name",
            "year"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_178",
    "question": [
      [
        {
          "role": "user",
          "content": "Find details about lawsuit case numbered 'LAX2019080202' in the Los Angeles court.",
          "transcript": "Can you find info on the lawsuit case L-A-X twenty nineteen zero eight zero two zero two in the Los Angeles court?",
          "audio_path": "BFCL_v3_simple/simple_178_cartesia.mp3",
          "asr_output_openai": "Can you find info on the lawsuit case LAX2019080202 in the Los Angeles court?",
          "asr_output_elevenlabs": "Can you find info on the lawsuit case LAX 2019 08 02 02 in the Los Angeles Court?",
          "asr_output_deepgram": "Can you find info on the lawsuit case l a x twenty nineteen zero eight zero two zero two in the Los Angeles court?",
          "clarifications": {
            "case_number": "LAX2019080202",
            "court_location": "Los Angeles"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_lawsuit_details",
        "description": "Retrieve the detailed information about a lawsuit based on its case number and the court location.",
        "parameters": {
          "type": "dict",
          "properties": {
            "case_number": {
              "type": "string",
              "description": "The case number of the lawsuit."
            },
            "court_location": {
              "type": "string",
              "description": "The location of the court where the case is filed."
            },
            "additional_details": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "attorneys",
                  "plaintiffs",
                  "defendants",
                  "charges",
                  "court_updates"
                ]
              },
              "description": "Optional. Array containing additional details to be fetched. Default is all."
            }
          },
          "required": [
            "case_number",
            "court_location"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_179",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the latest court case between Apple and Samsung occured in USA.",
          "transcript": "Um, hey, can you, uh, find most recent court case between Apple and Samsung that happened in the U-S-A?",
          "audio_path": "BFCL_v3_simple/simple_179_cartesia.mp3",
          "asr_output_openai": "Um, hey, can you, uh, find the most recent court case between Apple and Samsung that happened in the USA?",
          "asr_output_elevenlabs": "Um, hey, can you, uh, find most recent court case between Apple and Samsung that happened in the USA?",
          "asr_output_deepgram": "Hey. Can you, find most recent court case between Apple and Samsung that happened in the USA?",
          "clarifications": {
            "company1": "Apple",
            "company2": "Samsung",
            "country": "USA"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "find_latest_court_case",
        "description": "Find the latest court case between two companies.",
        "parameters": {
          "type": "dict",
          "properties": {
            "company1": {
              "type": "string",
              "description": "The name of the first company."
            },
            "company2": {
              "type": "string",
              "description": "The name of the second company."
            },
            "country": {
              "type": "string",
              "description": "The country in which the court case is located.",
              "default": "USA"
            }
          },
          "required": [
            "company1",
            "company2"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_180",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the lawsuits filed against the company Google in California in the year 2020.",
          "transcript": "Hey, can you get the lawsuits against Google filed in California in twenty-twenty?",
          "audio_path": "BFCL_v3_simple/simple_180_cartesia.mp3",
          "asr_output_openai": "Hey, can you get the lawsuits against Google filed in California in 2020?",
          "asr_output_elevenlabs": "Hey, can you get the lawsuits against Google filed in California in 2020?",
          "asr_output_deepgram": "Hey. Can you get the lawsuits against Google filed in California in twenty twenty?",
          "clarifications": {
            "company_name": "Google",
            "location": "California",
            "year": "2020"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "lawsuits_search",
        "description": "Search for lawsuits against a specific company within a specific time and location.",
        "parameters": {
          "type": "dict",
          "properties": {
            "company_name": {
              "type": "string",
              "description": "The name of the company."
            },
            "location": {
              "type": "string",
              "description": "The location where the lawsuit was filed."
            },
            "year": {
              "type": "integer",
              "description": "The year when the lawsuit was filed."
            },
            "case_type": {
              "type": "string",
              "description": "The type of the case. Options include: 'civil', 'criminal', 'small_claims', etc. Default is 'all'."
            }
          },
          "required": [
            "company_name",
            "location",
            "year"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_181",
    "question": [
      [
        {
          "role": "user",
          "content": "Get details of a lawsuit with case number '123456-ABC' filed in Los Angeles court with verdict",
          "transcript": "Could you tell me details of the lawsuit with case number one two three four five six dash ABC from Los Angeles court, including the verdict, thanks?",
          "audio_path": "BFCL_v3_simple/simple_181_cartesia.mp3",
          "asr_output_openai": "Could you tell me details of the lawsuit with case number 123456-ABC from Los Angeles court, including the verdict? Thanks.",
          "asr_output_elevenlabs": "Could you tell me details of the lawsuit with case number 123456-ABC from Los Angeles Court including the verdict? Thanks.",
          "asr_output_deepgram": "Could you tell me details of the lawsuit with case number one two three four five six dash a b c from Los Angeles court including the verdict? Thanks.",
          "clarifications": {
            "case_number": "123456-ABC",
            "court_location": "Los Angeles"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_lawsuit_details",
        "description": "Retrieve details of a lawsuit based on its case number and court location.",
        "parameters": {
          "type": "dict",
          "properties": {
            "case_number": {
              "type": "string",
              "description": "Case number of the lawsuit."
            },
            "court_location": {
              "type": "string",
              "description": "The location of the court where the lawsuit was filed."
            },
            "with_verdict": {
              "type": "boolean",
              "description": "Flag to include verdict details if available. Default is False"
            }
          },
          "required": [
            "case_number",
            "court_location"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_182",
    "question": [
      [
        {
          "role": "user",
          "content": "Retrieve all the lawsuit details for case number XYZ123.",
          "transcript": "Can you tell me all the details for lawsuit case number X Y Z one twenty-three?",
          "audio_path": "BFCL_v3_simple/simple_182_cartesia.mp3",
          "asr_output_openai": "Can you tell me all the details for lawsuit case number XYZ123?",
          "asr_output_elevenlabs": "Can you tell me all the details for lawsuit case number XYZ123?",
          "asr_output_deepgram": "Can you tell me all the details for lawsuit case number x y z one twenty three?",
          "clarifications": {
            "case_number": "XYZ123"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "lawsuit_info",
        "description": "Retrieves details of a lawsuit given a case number",
        "parameters": {
          "type": "dict",
          "properties": {
            "case_number": {
              "type": "string",
              "description": "The unique identifier of the lawsuit case"
            },
            "year": {
              "type": "integer",
              "description": "The year in which the lawsuit case was initiated. Default is 2023 if not specified.",
              "optional": true,
              "default": 2023
            },
            "location": {
              "type": "string",
              "description": "The location or court jurisdiction where the case was filed. Default is 'all'.",
              "optional": true
            }
          },
          "required": [
            "case_number"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_183",
    "question": [
      [
        {
          "role": "user",
          "content": "Search for current lawsuits filed against Apple in Santa Clara County.",
          "transcript": "Hey, can you look for any lawsuits filed against Apple in Santa Clara County?",
          "audio_path": "BFCL_v3_simple/simple_183_cartesia.mp3",
          "asr_output_openai": "Hey, can you look for any lawsuits filed against Apple in Santa Clara County?",
          "asr_output_elevenlabs": "Hey, can you look for any lawsuits filed against Apple in Santa Clara County?",
          "asr_output_deepgram": "Hey. Can you look for any lawsuits filed against Apple in Santa Clara County?",
          "clarifications": {
            "entity": "Apple",
            "county": "Santa Clara County"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "lawsuit_search",
        "description": "Retrieve all lawsuits involving a particular entity from specified jurisdiction.",
        "parameters": {
          "type": "dict",
          "properties": {
            "entity": {
              "type": "string",
              "description": "The entity involved in lawsuits."
            },
            "county": {
              "type": "string",
              "description": "The jurisdiction for the lawsuit search for example Alameda county."
            },
            "state": {
              "type": "string",
              "description": "The state for the lawsuit search. Default is California."
            }
          },
          "required": [
            "entity",
            "county"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_184",
    "question": [
      [
        {
          "role": "user",
          "content": "I need the details of the lawsuit case with case ID of 1234 and verify if it's already closed.",
          "transcript": "Uh, can you get me the details for lawsuit case twelve thirty-four and, um, check if its closed? Thanks.",
          "audio_path": "BFCL_v3_simple/simple_184_cartesia.mp3",
          "asr_output_openai": "Can you get me the details for lawsuit case 1234, and check if it's closed? Thanks.",
          "asr_output_elevenlabs": "Uh, can you get me the details for lawsuit case 1234 and, um, check if it's closed? Thanks.",
          "asr_output_deepgram": "Can you get me the details for lawsuit case twelve thirty four and, check if it's closed? Thanks.",
          "clarifications": {
            "case_id": "1234"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "lawsuit.check_case",
        "description": "Verify the details of a lawsuit case and check its status using case ID.",
        "parameters": {
          "type": "dict",
          "properties": {
            "case_id": {
              "type": "integer",
              "description": "The identification number of the lawsuit case."
            },
            "closed_status": {
              "type": "boolean",
              "description": "The status of the lawsuit case to be verified."
            }
          },
          "required": [
            "case_id",
            "closed_status"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_185",
    "question": [
      [
        {
          "role": "user",
          "content": "What will be the weather in New York in the next 72 hours including the precipitation?",
          "transcript": "Um, can you give me the weather forecast for New York for the next seventy-two hours, including if it\u2019ll rain?",
          "audio_path": "BFCL_v3_simple/simple_185_cartesia.mp3",
          "asr_output_openai": "Can you give me the weather forecast for New York for the next 72 hours, including if it'll rain?",
          "asr_output_elevenlabs": "Um, can you give me the weather forecast for New York for the next 72 hours, including if it'll rain?",
          "asr_output_deepgram": "Can you give me the weather forecast for New York for the next seventy two hours, including if it'll rain?",
          "clarifications": {
            "location": "New York",
            "duration": "72"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "detailed_weather_forecast",
        "description": "Retrieve a detailed weather forecast for a specific location and duration including optional precipitation details.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city name that you want to get the weather for."
            },
            "duration": {
              "type": "integer",
              "description": "Duration in hours for the detailed forecast."
            },
            "include_precipitation": {
              "type": "boolean",
              "description": "Whether to include precipitation data in the forecast. Default is false."
            }
          },
          "required": [
            "location",
            "duration"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_186",
    "question": [
      [
        {
          "role": "user",
          "content": "What is the temperature in celsius and humidity level of Tokyo, Japan right now?",
          "transcript": "Hey, uh, whats the current temperature in Celsius and the humidity level, you know, in Tokyo, Japan?",
          "audio_path": "BFCL_v3_simple/simple_186_cartesia.mp3",
          "asr_output_openai": "Hey, what's the current temperature in Celsius and the humidity level, you know, in Tokyo, Japan?",
          "asr_output_elevenlabs": "Hey, uh, what's the current temperature in Celsius and the humidity level, you know, in Tokyo, Japan?",
          "asr_output_deepgram": "Hey. What's the current temperature in Celsius and the humidity level, you know, in Tokyo, Japan?",
          "clarifications": {
            "city": "Tokyo",
            "country": "Japan"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "current_weather_condition",
        "description": "Get the current weather conditions of a specific city including temperature and humidity.",
        "parameters": {
          "type": "dict",
          "properties": {
            "city": {
              "type": "string",
              "description": "The city that you want to get the current weather conditions for."
            },
            "country": {
              "type": "string",
              "description": "The country of the city you specified."
            },
            "measurement": {
              "type": "string",
              "description": "You can specify which unit to display the temperature in, 'c' for Celsius, 'f' for Fahrenheit. Default is 'c'."
            }
          },
          "required": [
            "city",
            "country"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_187",
    "question": [
      [
        {
          "role": "user",
          "content": "What's the current temperature and humidity in Seattle, Washington?",
          "transcript": "Hey, um, hows the temperature and humidity in Seattle right now?",
          "audio_path": "BFCL_v3_simple/simple_187_cartesia.mp3",
          "asr_output_openai": "Hey, um, how's the temperature and humidity in Seattle right now?",
          "asr_output_elevenlabs": "Hey, um, how's the temperature and humidity in Seattle right now?",
          "asr_output_deepgram": "Hey. How's the temperature and humidity in Seattle right now?",
          "clarifications": {
            "location": "Seattle, Washington"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_current_weather",
        "description": "Retrieves the current temperature and humidity for a specific location.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city name to get the weather for."
            },
            "include_temperature": {
              "type": "boolean",
              "description": "Whether to include the temperature in the result. Default is true."
            },
            "include_humidity": {
              "type": "boolean",
              "description": "Whether to include the humidity in the result. Default is true."
            }
          },
          "required": [
            "location"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_188",
    "question": [
      [
        {
          "role": "user",
          "content": "What is the humidity level in Miami, Florida in the upcoming 7 days?",
          "transcript": "Um, hey, can you give me the humidity forecast for the next seven days in Miami, Florida?",
          "audio_path": "BFCL_v3_simple/simple_188_cartesia.mp3",
          "asr_output_openai": "Um, hey, can you give me the humidity forecast for the next seven days in Miami, Florida?",
          "asr_output_elevenlabs": "Um, hey, can you give me the humidity forecast for the next seven days in Miami, Florida?",
          "asr_output_deepgram": "Hey. Can you give me the humidity forecast for the next seven days in Miami, Florida?",
          "clarifications": {
            "location": "Miami, Florida",
            "forecast_days": "7"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "weather.humidity_forecast",
        "description": "Retrieve a humidity forecast for a specific location and time frame.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city that you want to get the humidity for."
            },
            "days": {
              "type": "integer",
              "description": "Number of days for the forecast."
            },
            "min_humidity": {
              "type": "integer",
              "description": "Minimum level of humidity (in percentage) to filter the result. Default is 0."
            }
          },
          "required": [
            "location",
            "days"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_189",
    "question": [
      [
        {
          "role": "user",
          "content": "Get weather information for New York, USA for the next 3 days with details.",
          "transcript": "Can I get the weather details for the next 3 days in New York?",
          "audio_path": "BFCL_v3_simple/simple_189_cartesia.mp3",
          "asr_output_openai": "Can I get the weather details for the next three days in New York?",
          "asr_output_elevenlabs": "Can I get the weather details for the next three days in New York?",
          "asr_output_deepgram": "Can I get the weather details for the next three days in New York?",
          "clarifications": {
            "location": "New York, USA",
            "days": "3"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "weather_forecast_detailed",
        "description": "Retrieve a detailed weather forecast for a specific city like Boston and time frame.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city that you want to get the weather for."
            },
            "days": {
              "type": "integer",
              "description": "Number of days for the forecast."
            },
            "details": {
              "type": "boolean",
              "description": "Provide detailed weather information or not.",
              "default": false
            }
          },
          "required": [
            "location",
            "days"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_190",
    "question": [
      [
        {
          "role": "user",
          "content": "What's the elevation and area of Yellowstone National Park?",
          "transcript": "Hey, um, whats the elevation of Yellowstone National Park and, oh, the area?",
          "audio_path": "BFCL_v3_simple/simple_190_cartesia.mp3",
          "asr_output_openai": "Hey um, what's the elevation of Yellowstone National Park and oh the area?",
          "asr_output_elevenlabs": "Hey, um, what's the elevation of Yellowstone National Park and, oh, the area?",
          "asr_output_deepgram": "Hey, what's the elevation of Yellowstone National Park and, oh, the area?",
          "clarifications": {
            "park_name": "Yellowstone National Park"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "park_information",
        "description": "Retrieve the basic information such as elevation and area of a national park.",
        "parameters": {
          "type": "dict",
          "properties": {
            "park_name": {
              "type": "string",
              "description": "The name of the national park."
            },
            "information": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Elevation",
                  "Area",
                  "Location",
                  "Established Year"
                ]
              },
              "description": "The type of information you want about the park."
            }
          },
          "required": [
            "park_name",
            "information"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_191",
    "question": [
      [
        {
          "role": "user",
          "content": "Find me the 5 tallest mountains within 50km of Denver, Colorado.",
          "transcript": "Can you name the five tallest mountains within fifty kilometers of Denver?",
          "audio_path": "BFCL_v3_simple/simple_191_cartesia.mp3",
          "asr_output_openai": "Can you name the five tallest mountains within 50 kilometers of Denver?",
          "asr_output_elevenlabs": "Can you name the five tallest mountains within 50 kilometers of Denver?",
          "asr_output_deepgram": "Can you name the five tallest mountains within fifty kilometers of Denver?",
          "clarifications": {
            "location": "Denver, Colorado",
            "radius": "50",
            "amount": "5"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "locate_tallest_mountains",
        "description": "Find the tallest mountains within a specified radius of a location.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city from which to calculate distance."
            },
            "radius": {
              "type": "integer",
              "description": "The radius within which to find mountains, measured in kilometers."
            },
            "amount": {
              "type": "integer",
              "description": "The number of mountains to find, listed from tallest to smallest."
            }
          },
          "required": [
            "location",
            "radius",
            "amount"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_192",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the slope gradient in degree between two points on a landscape with coordinates (40.7128, -74.0060) and (34.0522, -118.2437).",
          "transcript": "Hey, can you work out the slope gradient in degrees between the points with coordinates forty point seven one two eight, minus seventy-four point zero zero six zero and thirty-four point zero five two two, minus one eighteen point two four three seven?",
          "audio_path": "BFCL_v3_simple/simple_192_cartesia.mp3",
          "asr_output_openai": "Hey, can you work out the slope gradient in degrees between the points with coordinates 40.7128, -74.0060 and 34.0522, -118.2437?",
          "asr_output_elevenlabs": "Hey, can you work out the slope gradient in degrees between the points with coordinates 40.7128,-74.0060 and 34.0522,-118.2437?",
          "asr_output_deepgram": "Hey. Can you work out the slope gradient in degrees between the points with coordinates forty point seven one two eight, minus seventy four point zero zero six zero, and thirty four point zero five two two, minus one eighteen point two four three seven?",
          "clarifications": {
            "first_point_coordinates": "(40.7128, -74.0060)",
            "second_point_coordinates": "(34.0522, -118.2437)"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_slope_gradient",
        "description": "Calculate the slope gradient between two geographical coordinates.",
        "parameters": {
          "type": "dict",
          "properties": {
            "point1": {
              "type": "array",
              "items": {
                "type": "float"
              },
              "description": "The geographic coordinates for the first point [Latitude, Longitude]."
            },
            "point2": {
              "type": "array",
              "items": {
                "type": "float"
              },
              "description": "The geographic coordinates for the second point [Latitude, Longitude]."
            },
            "unit": {
              "type": "string",
              "enum": [
                "degree",
                "percent",
                "ratio"
              ],
              "description": "The unit for the slope gradient. Default is 'degree'."
            }
          },
          "required": [
            "point1",
            "point2"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_193",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the best local nurseries in Toronto with a good variety of annual plants.",
          "transcript": "Hey, can you, uh, get top local nurseries in Toronto thatve got a great selection of annual plants? Thanks.",
          "audio_path": "BFCL_v3_simple/simple_193_cartesia.mp3",
          "asr_output_openai": "Hey, can you get top local nurseries in Toronto that've got a great selection of annual plants? Thanks.",
          "asr_output_elevenlabs": "Hey, can you, uh, get top local nurseries in Toronto that got a great selection of annual plants? Thanks.",
          "asr_output_deepgram": "Hey. Can you, get top local nurseries in Toronto that got a great selection of annual plants? Thanks.",
          "clarifications": {
            "location": "Toronto"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "local_nursery.find",
        "description": "Locate local nurseries based on location and plant types availability.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city or locality where the nursery needs to be located."
            },
            "plant_types": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Annual",
                  "Perennial",
                  "Shrub",
                  "Tree",
                  "Herbs",
                  "Fruits"
                ]
              },
              "description": "Type of plants the nursery should provide."
            }
          },
          "required": [
            "location",
            "plant_types"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_194",
    "question": [
      [
        {
          "role": "user",
          "content": "What are the top three plants suitable for a hill slope in terms of erosion prevention?",
          "transcript": "Uh, right, what are best, um, about three plants to prevent erosion on a hillside?",
          "audio_path": "BFCL_v3_simple/simple_194_cartesia.mp3",
          "asr_output_openai": "Right, what are best? About three plants to prevent erosion on a hillside?",
          "asr_output_elevenlabs": "Uh, right. What are best? Um, about three plants to prevent erosion on a hillside?",
          "asr_output_deepgram": "Right. What are best? About three plants to prevent erosion on a hillside?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "get_plants_for_slope",
        "description": "Retrieve the list of plants suitable for slope based on erosion control ability.",
        "parameters": {
          "type": "dict",
          "properties": {
            "slope_type": {
              "type": "string",
              "description": "The type of slope like steep, moderate etc."
            },
            "num_results": {
              "type": "integer",
              "description": "The number of top results needed. Default is 5."
            }
          },
          "required": [
            "slope_type",
            "num_results"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_195",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the carbon footprint of my lifestyle, assuming I drive 20 miles a day, consume 3 meat meals a week, and produce 500 lbs of trash in a year.",
          "transcript": "Um, could you find out my carbon footprint? I drive twenty miles daily, eat meat three times a week, and make five hundred pounds of trash each year.",
          "audio_path": "BFCL_v3_simple/simple_195_cartesia.mp3",
          "asr_output_openai": "Um, could you find out my carbon footprint? I drive 20 miles daily, eat meat three times a week, and make 500 pounds of trash each year.",
          "asr_output_elevenlabs": "Um, could you find out my carbon footprint? I drive 20 miles daily, eat meat three times a week, and make 500 pounds of trash each year.",
          "asr_output_deepgram": "Could you find out my carbon footprint? I drive twenty miles daily, eat meat three times a week, and make five hundred pounds of trash each year.",
          "clarifications": {
            "daily_miles": "20",
            "meat_meals_per_week": "3",
            "annual_trash_weight": "500"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_carbon_footprint",
        "description": "Calculate the estimated carbon footprint of a lifestyle based on factors such as daily driving distance, weekly meat consumption, and yearly trash production.",
        "parameters": {
          "type": "dict",
          "properties": {
            "daily_miles": {
              "type": "integer",
              "description": "The daily driving distance in miles."
            },
            "meat_meals_per_week": {
              "type": "integer",
              "description": "The number of meat-based meals consumed per week."
            },
            "annual_trash_weight": {
              "type": "integer",
              "description": "The yearly weight of trash production in pounds."
            },
            "flights_per_year": {
              "type": "integer",
              "description": "The number of flights taken per year. Default is 0."
            }
          },
          "required": [
            "daily_miles",
            "meat_meals_per_week",
            "annual_trash_weight"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_196",
    "question": [
      [
        {
          "role": "user",
          "content": "What is the air quality index in London 2022/08/16?",
          "transcript": "Can you tell me air quality index for London on August sixteenth, twenty-twenty-two?",
          "audio_path": "BFCL_v3_simple/simple_196_cartesia.mp3",
          "asr_output_openai": "Can you tell me air quality index for London on August 16, 2022?",
          "asr_output_elevenlabs": "Can you tell me air quality index for London on August 16th, 2022?",
          "asr_output_deepgram": "Can you tell me air quality index for London on August sixteenth twenty twenty two?",
          "clarifications": {
            "location": "London",
            "date": "2022/08/16"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "air_quality",
        "description": "Retrieve the air quality index for a specific location.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city that you want to get the air quality index for."
            },
            "date": {
              "type": "string",
              "description": "The date (month-day-year) you want to get the air quality index for."
            }
          },
          "required": [
            "location",
            "date"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_197",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the air quality index in San Diego at 12pm.",
          "transcript": "Hey, uh, whats the air quality index in San Diego at noon?",
          "audio_path": "BFCL_v3_simple/simple_197_cartesia.mp3",
          "asr_output_openai": "Hey, what's the air quality index in San Diego at noon?",
          "asr_output_elevenlabs": "Hey, uh, what's the air quality index in San Diego at noon?",
          "asr_output_deepgram": "Hey, what's the air quality index in San Diego at noon?",
          "clarifications": {
            "location": "San Diego",
            "time": "12pm"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_air_quality_index",
        "description": "Retrieve the air quality index at a specified location and time.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The location to get the air quality index for."
            },
            "time": {
              "type": "string",
              "description": "The specific time to check the air quality. Default is the current time."
            }
          },
          "required": [
            "location",
            "time"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_198",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the required water daily intake for a person with weight 70 kg.",
          "transcript": "Whats, uh, daily water intake for someone weighing seventy kilograms?",
          "audio_path": "BFCL_v3_simple/simple_198_cartesia.mp3",
          "asr_output_openai": "What's a daily water intake for someone weighing 70 kilograms?",
          "asr_output_elevenlabs": "What's a daily water intake for someone weighing 70 kilograms?",
          "asr_output_deepgram": "What's a daily water intake for someone weighing seventy kilograms?",
          "clarifications": {
            "person_weight": "70 kg"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_daily_water_intake",
        "description": "Calculate the recommended daily water intake for a person based on their weight.",
        "parameters": {
          "type": "dict",
          "properties": {
            "weight": {
              "type": "integer",
              "description": "The weight of the person in kilograms."
            },
            "activity_level": {
              "type": "string",
              "description": "The level of physical activity of the person. Default is 'moderate'."
            },
            "climate": {
              "type": "string",
              "description": "The climate of the area where the person lives. Default is 'temperate'."
            }
          },
          "required": [
            "weight"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_199",
    "question": [
      [
        {
          "role": "user",
          "content": "Find air quality index in San Jose for next three days.",
          "transcript": "Hey, um, could check the air quality index for San Jose over the next three days?",
          "audio_path": "BFCL_v3_simple/simple_199_cartesia.mp3",
          "asr_output_openai": "Hey Am, could check the air quality index for San Jose over the next three days?",
          "asr_output_elevenlabs": "Hey, um, could check the air quality index for San Jose over the next three days?",
          "asr_output_deepgram": "Hey, could check the air quality index for San Jose over the next three days?",
          "clarifications": {
            "location": "San Jose",
            "days": "three"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "environmental_data.air_quality_index",
        "description": "Retrieves Air Quality Index (AQI) for specified location over a number of days.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "Name of the city or town to retrieve air quality index for."
            },
            "days": {
              "type": "integer",
              "description": "Number of days for which to retrieve data. If not provided, default to today."
            }
          },
          "required": [
            "location"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_200",
    "question": [
      [
        {
          "role": "user",
          "content": "How much CO2 is produced annually by a gas-fueled car that travels 12,000 miles per year, with fuel efficiency of 25 MPG ?",
          "transcript": "Hey, uh, right, how much CO2 does a gas car put out each year if it drives, like, twelve thousand miles and gets twenty-five miles per gallon?",
          "audio_path": "BFCL_v3_simple/simple_200_cartesia.mp3",
          "asr_output_openai": "Heya, right? How much CO2 does a gas car put out each year if it drives like 12,000 miles and gets 25 miles per gallon?",
          "asr_output_elevenlabs": "Hey, uh, Wright? How much CO2 does a gas car put out each year if it drives, like, 12,000 miles and gets 25 miles per gallon?",
          "asr_output_deepgram": "Hey. Right. How much c o two does a gas car put out each year if it drives, like, twelve thousand miles and gets twenty five miles per gallon?",
          "clarifications": {
            "distance_traveled": "12,000 miles",
            "fuel_efficiency": "25 MPG"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_emissions",
        "description": "Calculates the annual carbon dioxide emissions produced by a vehicle based on the distance traveled, the fuel type and the fuel efficiency of the vehicle.",
        "parameters": {
          "type": "dict",
          "properties": {
            "distance": {
              "type": "integer",
              "description": "The distance travelled in miles."
            },
            "fuel_type": {
              "type": "string",
              "description": "Type of fuel used by the vehicle."
            },
            "fuel_efficiency": {
              "type": "float",
              "description": "The vehicle's fuel efficiency in miles per gallon."
            },
            "efficiency_reduction": {
              "type": "integer",
              "description": "The percentage decrease in fuel efficiency per year (optional). Default is 0"
            }
          },
          "required": [
            "distance",
            "fuel_type",
            "fuel_efficiency"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_201",
    "question": [
      [
        {
          "role": "user",
          "content": "Estimate the population of pandas in the wild in China.",
          "transcript": "Um, can you guess how many pandasre left, uh, in wild in China?",
          "audio_path": "BFCL_v3_simple/simple_201_cartesia.mp3",
          "asr_output_openai": "Can you guess how many pandas are left in wild in China?",
          "asr_output_elevenlabs": "Um, can you guess how many pandas are left, uh, in the wild in China?",
          "asr_output_deepgram": "Can you guess how many pandas were left, in wild in China?",
          "clarifications": {
            "species": "pandas",
            "country": "China"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "estimate_population",
        "description": "Estimate the population of a particular species in a given country.",
        "parameters": {
          "type": "dict",
          "properties": {
            "species": {
              "type": "string",
              "description": "The species for which population needs to be estimated."
            },
            "country": {
              "type": "string",
              "description": "The country where the species lives."
            },
            "year": {
              "type": "integer",
              "description": "The year for which population estimate is sought. Default is the current year."
            }
          },
          "required": [
            "species",
            "country"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_202",
    "question": [
      [
        {
          "role": "user",
          "content": "How many greenhouse gas emissions would I save if I switched to renewable energy sources for 3 months in California?",
          "transcript": "If I switch to renewable energy for three months in California, how much would my greenhouse gas emissions go down?",
          "audio_path": "BFCL_v3_simple/simple_202_cartesia.mp3",
          "asr_output_openai": "If I switch to renewable energy for three months in California, how much would my greenhouse gas emissions go down?",
          "asr_output_elevenlabs": "If I switch to renewable energy for 3 months in California, how much would my greenhouse gas emissions go down?",
          "asr_output_deepgram": "If I switch to renewable energy for three months in California, how much would my greenhouse gas emissions go down?",
          "clarifications": {
            "usage_duration": "3 months",
            "region": "California"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_emission_savings",
        "description": "Calculate potential greenhouse gas emissions saved by switching to renewable energy sources.",
        "parameters": {
          "type": "dict",
          "properties": {
            "energy_type": {
              "type": "string",
              "description": "Type of the renewable energy source."
            },
            "usage_duration": {
              "type": "integer",
              "description": "Usage duration in months."
            },
            "region": {
              "type": "string",
              "description": "The region where you use energy. Default is 'Texas'."
            }
          },
          "required": [
            "energy_type",
            "usage_duration"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_203",
    "question": [
      [
        {
          "role": "user",
          "content": "Can you find me the latest information about air quality index and pollution data for Chicago?",
          "transcript": "Uh, can you get the latest air quality index and, um, pollution data for Chicago? Thanks.",
          "audio_path": "BFCL_v3_simple/simple_203_cartesia.mp3",
          "asr_output_openai": "Can you get the latest air quality index and pollution data for Chicago? Thanks.",
          "asr_output_elevenlabs": "Uh, can you get the latest air quality index and, um, pollution data for Chicago? Thanks.",
          "asr_output_deepgram": "Can you get the latest air quality index and, pollution data for Chicago? Thanks.",
          "clarifications": {
            "location": "Chicago"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_air_quality",
        "description": "Retrieve real-time air quality and pollution data for a specific location.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city that you want to get the air quality data for."
            },
            "detail": {
              "type": "boolean",
              "description": "If true, additional data like PM2.5, PM10, ozone levels, and pollution sources will be retrieved. Default is false."
            }
          },
          "required": [
            "location"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_204",
    "question": [
      [
        {
          "role": "user",
          "content": "Find restaurants near me within 10 miles that offer Chinese cuisine in Seattle.",
          "transcript": "Can you look up Chinese restaurants in Seattle within ten miles of me?",
          "audio_path": "BFCL_v3_simple/simple_204_cartesia.mp3",
          "asr_output_openai": "Can you look up Chinese restaurants in Seattle within ten miles of me?",
          "asr_output_elevenlabs": "Can you look up Chinese restaurants in Seattle within 10 miles of me?",
          "asr_output_deepgram": "Can you look up Chinese restaurants in Seattle within ten miles of me?",
          "clarifications": {
            "location": "Seattle",
            "cuisine": "Chinese",
            "max_distance": "10 miles"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "restaurant.find_nearby",
        "description": "Locate nearby restaurants based on specific criteria like cuisine type.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city and state, e.g. Seattle, WA"
            },
            "cuisine": {
              "type": "string",
              "description": "Preferred type of cuisine in restaurant."
            },
            "max_distance": {
              "type": "integer",
              "description": "Maximum distance (in miles) within which to search for restaurants. Default is 5."
            }
          },
          "required": [
            "location",
            "cuisine"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_205",
    "question": [
      [
        {
          "role": "user",
          "content": "Find out the current traffic situation from Boston driving to New York.",
          "transcript": "Okay, um, whats the traffic situation like from Boston to New York right now?",
          "audio_path": "BFCL_v3_simple/simple_205_cartesia.mp3",
          "asr_output_openai": "Okay, um, what's the traffic situation like from Boston to New York right now?",
          "asr_output_elevenlabs": "Okay. Um, what's the traffic situation like from Boston to New York right now?",
          "asr_output_deepgram": "Okay. What's the traffic situation like from Boston to New York right now?",
          "clarifications": {
            "start_location": "Boston",
            "end_location": "New York"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_traffic_info",
        "description": "Retrieve current traffic conditions for a specified route.",
        "parameters": {
          "type": "dict",
          "properties": {
            "start_location": {
              "type": "string",
              "description": "The starting point of the route."
            },
            "end_location": {
              "type": "string",
              "description": "The destination of the route."
            },
            "mode": {
              "type": "string",
              "enum": [
                "driving",
                "walking",
                "bicycling",
                "transit"
              ],
              "description": "Preferred method of transportation, default to 'driving'."
            }
          },
          "required": [
            "start_location",
            "end_location"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_206",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the nearest park with a tennis court in London.",
          "transcript": "Hey, can you, uh, look up the closest park with a tennis court in London? Thanks.",
          "audio_path": "BFCL_v3_simple/simple_206_cartesia.mp3",
          "asr_output_openai": "Hey, can you look up the closest park with a tennis court in London? Thanks.",
          "asr_output_elevenlabs": "Hey, can you, uh, look up the closest park with a tennis court in London? Thanks.",
          "asr_output_deepgram": "Hey. Can you, look up the closest park with a tennis court in London? Thanks.",
          "clarifications": {
            "location": "London"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "parks.find_nearby",
        "description": "Locate nearby parks based on specific criteria like tennis court availability.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city and state, e.g. London, UK"
            },
            "amenities": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Tennis Court",
                  "Picnic Area",
                  "Playground",
                  "Running Track"
                ]
              },
              "description": "Preferred amenities in park. Default is ['Running Track']"
            }
          },
          "required": [
            "location"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_207",
    "question": [
      [
        {
          "role": "user",
          "content": "Get the shortest driving distance between New York, USA and Miami, USA.",
          "transcript": "Whats the shortest driving distance from New York to Miami?",
          "audio_path": "BFCL_v3_simple/simple_207_cartesia.mp3",
          "asr_output_openai": "What's the shortest driving distance from New York to Miami?",
          "asr_output_elevenlabs": "What's the shortest driving distance from New York to Miami?",
          "asr_output_deepgram": "What's the shortest driving distance from New York to Miami?",
          "clarifications": {
            "start_location": "New York, USA",
            "end_location": "Miami, USA"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_shortest_distance",
        "description": "Calculate the shortest driving distance between two locations.",
        "parameters": {
          "type": "dict",
          "properties": {
            "start_location": {
              "type": "string",
              "description": "The starting location for the drive."
            },
            "end_location": {
              "type": "string",
              "description": "The destination location for the drive."
            },
            "route_preference": {
              "type": "string",
              "enum": [
                "Shortest",
                "Scenic"
              ],
              "description": "The preferred type of route."
            }
          },
          "required": [
            "start_location",
            "end_location",
            "route_preference"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_208",
    "question": [
      [
        {
          "role": "user",
          "content": "Get me the directions from New York to Los Angeles avoiding highways and toll roads.",
          "transcript": "Okay, can you gimme directions from New York to Los Angeles but skip highways toll roads?",
          "audio_path": "BFCL_v3_simple/simple_208_cartesia.mp3",
          "asr_output_openai": "OK, can you give me directions from New York to Los Angeles but skip highways toll roads?",
          "asr_output_elevenlabs": "Okay, can you give me directions from New York to Los Angeles but skip highways toll roads.",
          "asr_output_deepgram": "Okay. Can you give me directions from New York to Los Angeles, but skip highways toll roads?",
          "clarifications": {
            "starting_location": "New York",
            "ending_location": "Los Angeles"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "map_service.get_directions",
        "description": "Retrieve directions from a starting location to an ending location, including options for route preferences.",
        "parameters": {
          "type": "dict",
          "properties": {
            "start": {
              "type": "string",
              "description": "Starting location for the route."
            },
            "end": {
              "type": "string",
              "description": "Ending location for the route."
            },
            "avoid": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "tolls",
                  "highways",
                  "ferries"
                ]
              },
              "description": "Route features to avoid. Default is ['highways', 'ferries']"
            }
          },
          "required": [
            "start",
            "end"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_209",
    "question": [
      [
        {
          "role": "user",
          "content": "Locate the nearest public library in Boston, Massachusetts with English fiction section and free Wi-Fi.",
          "transcript": "Locate the nearest public library in Boston that has an English fiction section and provides free Wi-Fi.",
          "audio_path": "BFCL_v3_simple/simple_209_cartesia.mp3",
          "asr_output_openai": "Locate the nearest public library in Boston that has an English fiction section and provides free Wi-Fi.",
          "asr_output_elevenlabs": "Locate the nearest public library in Boston that has an English fiction section and provides free Wi-Fi.",
          "asr_output_deepgram": "Locate the nearest public library in Boston that has an English fiction section and provides free Wi Fi.",
          "clarifications": {
            "location": "Boston, Massachusetts"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "public_library.find_nearby",
        "description": "Locate nearby public libraries based on specific criteria like English fiction availability and Wi-Fi.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city and state, e.g. Boston, MA"
            },
            "facilities": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Wi-Fi",
                  "Reading Room",
                  "Fiction",
                  "Children Section",
                  "Cafe"
                ]
              },
              "description": "Facilities and sections in public library."
            }
          },
          "required": [
            "location",
            "facilities"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_210",
    "question": [
      [
        {
          "role": "user",
          "content": "Get 5 latest news on Bitcoin in US",
          "transcript": "Uh, can you find five latest news articles bout Bitcoin in the US?",
          "audio_path": "BFCL_v3_simple/simple_210_cartesia.mp3",
          "asr_output_openai": "Can you find five latest news articles about bitcoin in the US?",
          "asr_output_elevenlabs": "Uh, can you find five latest news articles about Bitcoin in the U.S.?",
          "asr_output_deepgram": "Can you find five latest news articles about Bitcoin in the US?",
          "clarifications": {
            "topic": "Bitcoin",
            "quantity": "5",
            "region": "US"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_news",
        "description": "Fetches the latest news on a specific topic.",
        "parameters": {
          "type": "dict",
          "properties": {
            "topic": {
              "type": "string",
              "description": "The subject for the news topic."
            },
            "quantity": {
              "type": "integer",
              "description": "Number of articles to fetch."
            },
            "region": {
              "type": "string",
              "description": "The geographical region for the news. Default is 'US'."
            }
          },
          "required": [
            "topic",
            "quantity"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_211",
    "question": [
      [
        {
          "role": "user",
          "content": "Send an email to John Doe at john.doe@example.com with the subject 'Meeting' and body 'Let's meet at 10 AM tomorrow'.",
          "transcript": "Send an email to John Doe, thats J-O-H-N D-O-E, John Doe at john dot doe at example dot com. The subject is Meeting and say, Lets meet at ten A M tomorrow in the body, yeah.",
          "audio_path": "BFCL_v3_simple/simple_211_cartesia.mp3",
          "asr_output_openai": "Send an email to John Doe, that's J-O-H-N D-O-E, johndoe@john.doe@example.com. The subject is meeting and say, let's meet at 10am tomorrow in the body, yeah?",
          "asr_output_elevenlabs": "Send an email to John Doe. That's J-o-h-n D-o-e, johndoe@john.doe@example.com. The subject is Meeting, and say let's meet at 10:00 AM tomorrow in the body, yeah?",
          "asr_output_deepgram": "Send an email to John Doe. That's j o h n d o e, John Doe at John dot Doe at example dot com. The subject is meeting and say, let's meet at ten AM tomorrow in the body. Yeah?",
          "clarifications": {
            "recipient_name": "John Doe",
            "email_address": "john.doe@example.com",
            "email_subject": "Meeting",
            "email_body": "Let's meet at 10 AM tomorrow"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "send_email",
        "description": "Send an email to the specified email address.",
        "parameters": {
          "type": "dict",
          "properties": {
            "to": {
              "type": "string",
              "description": "The email address to send to."
            },
            "subject": {
              "type": "string",
              "description": "The subject of the email."
            },
            "body": {
              "type": "string",
              "description": "The body content of the email."
            },
            "cc": {
              "type": "string",
              "description": "The email address to carbon copy. Default is empty if not specified."
            },
            "bcc": {
              "type": "string",
              "description": "The email address to blind carbon copy. Default is empty if not specified."
            }
          },
          "required": [
            "to",
            "subject",
            "body"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_212",
    "question": [
      [
        {
          "role": "user",
          "content": "Give me detail information about stocks of Apple Inc.",
          "transcript": "Right, can you give me, let me see, detailed info on Apple stocks?",
          "audio_path": "BFCL_v3_simple/simple_212_cartesia.mp3",
          "asr_output_openai": "Right, can you give me... let me see... detailed info on Apple stocks?",
          "asr_output_elevenlabs": "Right! Can you give me\u2014 let me see, detailed info on Apple stocks?",
          "asr_output_deepgram": "Right. Can you give me let me see detailed info on Apple stocks?",
          "clarifications": {
            "company_name": "Apple Inc."
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_stock_info",
        "description": "Retrieves information about a specific stock based on company's name.",
        "parameters": {
          "type": "dict",
          "properties": {
            "company_name": {
              "type": "string",
              "description": "The name of the company."
            },
            "detail_level": {
              "type": "string",
              "description": "Level of detail for stock information. Can be 'summary' or 'detailed'."
            },
            "market": {
              "type": "string",
              "description": "The stock market of interest. Default is 'NASDAQ'"
            }
          },
          "required": [
            "company_name",
            "detail_level"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_213",
    "question": [
      [
        {
          "role": "user",
          "content": "Book a direct flight from San Francisco to London for 2022-04-27 afternoon",
          "transcript": "Um, can you book a direct flight, uh, from San Francisco to London for the afternoon of April twenty-seventh, twenty-twenty-two?",
          "audio_path": "BFCL_v3_simple/simple_213_cartesia.mp3",
          "asr_output_openai": "Can you book a direct flight from San Francisco to London for the afternoon of April 27, 2022?",
          "asr_output_elevenlabs": "Um, can you book a direct flight, uh, from San Francisco to London for the afternoon of April 27th, 2022?",
          "asr_output_deepgram": "Can you book a direct flight, from San Francisco to London for the afternoon of April twenty seventh twenty twenty two?",
          "clarifications": {
            "departure_location": "San Francisco",
            "destination_location": "London",
            "flight_date": "2022-04-27",
            "preferred_time": "afternoon"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "flight.book",
        "description": "Book a direct flight for a specific date and time from departure location to destination location.",
        "parameters": {
          "type": "dict",
          "properties": {
            "departure_location": {
              "type": "string",
              "description": "The location you are departing from."
            },
            "destination_location": {
              "type": "string",
              "description": "The location you are flying to."
            },
            "date": {
              "type": "string",
              "description": "The date of the flight. Accepts standard date format e.g., 2022-04-28."
            },
            "time": {
              "type": "string",
              "description": "Preferred time of flight. Default is 'morning'."
            },
            "direct_flight": {
              "type": "boolean",
              "description": "If set to true, only direct flights will be searched. Default is false."
            }
          },
          "required": [
            "departure_location",
            "destination_location",
            "date"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_214",
    "question": [
      [
        {
          "role": "user",
          "content": "Search for upcoming month rock concerts in New York.",
          "transcript": "Uh, find rock concerts happenin next month in New York.",
          "audio_path": "BFCL_v3_simple/simple_214_cartesia.mp3",
          "asr_output_openai": "A\u0165, fajn rock koncerts happenin next month in New York.",
          "asr_output_elevenlabs": "Uh, find rock concerts happening next month in New York.",
          "asr_output_deepgram": "Find rock concerts happen in next month in New York.",
          "clarifications": {
            "location": "New York",
            "genre": "rock"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "event_finder.find_upcoming",
        "description": "Find upcoming events of a specific genre in a given location.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city and state where the search will take place, e.g. New York, NY."
            },
            "genre": {
              "type": "string",
              "description": "The genre of events."
            },
            "days_ahead": {
              "type": "integer",
              "description": "The number of days from now to include in the search.",
              "default": 7
            }
          },
          "required": [
            "location",
            "genre"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_215",
    "question": [
      [
        {
          "role": "user",
          "content": "Give me a brief on movie 'Interstellar'",
          "transcript": "Hey, um, can you gimme a quick rundown of the movie Interstellar?",
          "audio_path": "BFCL_v3_simple/simple_215_cartesia.mp3",
          "asr_output_openai": "Hey, um, can you give me a quick rundown of the movie Interstellar?",
          "asr_output_elevenlabs": "Hey, um, can you give me a quick rundown of the movie Interstellar?",
          "asr_output_deepgram": "Hey. Can you give me a quick rundown of the movie Interstellar?",
          "clarifications": {
            "movie_title": "Interstellar"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "movie_details.brief",
        "description": "This function retrieves a brief about a specified movie.",
        "parameters": {
          "type": "dict",
          "properties": {
            "title": {
              "type": "string",
              "description": "Title of the movie"
            },
            "extra_info": {
              "type": "boolean",
              "description": "Option to get additional information like Director, Cast, Awards etc.",
              "default": "false"
            }
          },
          "required": [
            "title"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_216",
    "question": [
      [
        {
          "role": "user",
          "content": "Analyze the sentiment of a customer review 'I love the food here! It's always fresh and delicious.'.",
          "transcript": "Uh, right, look at sentiment of this customer review: I love the food here! Its always fresh and delicious.",
          "audio_path": "BFCL_v3_simple/simple_216_cartesia.mp3",
          "asr_output_openai": "Right? Look at sentiment of this customer review: I love the food here, it's always fresh and delicious.",
          "asr_output_elevenlabs": "Uh, right? Look at sentiment of this customer review: \"I love the food here. It's always fresh and delicious.\"",
          "asr_output_deepgram": "Right? Look at sentiment of this customer review. I love the food here. It's always fresh and delicious.",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "sentiment_analysis",
        "description": "Perform sentiment analysis on a given piece of text.",
        "parameters": {
          "type": "dict",
          "properties": {
            "text": {
              "type": "string",
              "description": "The text on which to perform sentiment analysis."
            },
            "language": {
              "type": "string",
              "description": "The language in which the text is written."
            }
          },
          "required": [
            "text",
            "language"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_217",
    "question": [
      [
        {
          "role": "user",
          "content": "Analyze my fMRI data in ~/data/myfMRI.nii from a multi-band sequence, that is smoothed at 6mm with an isotropic voxel size of 2mm.",
          "transcript": "Hey, can you analyze my, uh, f-M-R-I data in tilde slash data slash my f-M-R-I dot n-i-i? Its from a multi-band sequence, smoothed at, um, six millimeters with a voxel size of two millimeters.",
          "audio_path": "BFCL_v3_simple/simple_217_cartesia.mp3",
          "asr_output_openai": "Hey, can you analyze my fMRI data in /data/myfMRI.nii? It's from a multiband sequence smoothed at 6mm with a voxel size of 2mm.",
          "asr_output_elevenlabs": "Hey, can you analyze my, uh, fMRI data in ~/data/myfMRI.nii? It's from a multiband sequence smoothed at, um, six millimeters with a voxel size of two millimeters.",
          "asr_output_deepgram": "Hey. Can you analyze my, f, m, r, I? Data in tilde slash data slash my f, m, r, I. Dot n I I? It's from a multiband sequence smoothed at six millimeters with a voxel size of two millimeters.",
          "clarifications": {
            "data_source": "~/data/myfMRI.nii",
            "sequence_type": "multi-band",
            "smooth": "6mm",
            "voxel_size": "2mm"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "fMRI.analyze",
        "description": "This function takes in fMRI data to output analyzed data.",
        "parameters": {
          "type": "dict",
          "properties": {
            "data_source": {
              "type": "string",
              "description": "The path where the data is stored."
            },
            "sequence_type": {
              "type": "string",
              "description": "Type of fMRI sequence"
            },
            "smooth": {
              "type": "integer",
              "description": "Spatial smoothing FWHM. In mm."
            },
            "voxel_size": {
              "type": "integer",
              "description": "Size of isotropic voxels in mm.",
              "default": 3
            }
          },
          "required": [
            "data_source",
            "sequence_type",
            "smooth"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_218",
    "question": [
      [
        {
          "role": "user",
          "content": "Given patient with id 546382, retrieve their brain MRI report with the status 'concluded'.",
          "transcript": "Right, get finished brain MRI report for patient with ID fifty-four sixty-three eighty-two.",
          "audio_path": "BFCL_v3_simple/simple_218_cartesia.mp3",
          "asr_output_openai": "Write a finished brain MRI report for patient with ID 546382.",
          "asr_output_elevenlabs": "Right. Get finished brain MRI report for patient with ID 546382.",
          "asr_output_deepgram": "Right. Get finished brain MRI report for patient with ID fifty four sixty three eighty two.",
          "clarifications": {
            "patient_id": "546382",
            "report_status": "concluded"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "patient.get_mri_report",
        "description": "Fetch the brain MRI report of the patient for a given status.",
        "parameters": {
          "type": "dict",
          "properties": {
            "patient_id": {
              "type": "string",
              "description": "The patient identifier."
            },
            "mri_type": {
              "type": "string",
              "description": "Type of the MRI. Default to be 'brain'.",
              "enum": [
                "brain",
                "spinal",
                "chest",
                "abdominal"
              ]
            },
            "status": {
              "type": "string",
              "description": "Status of the report, could be 'in progress', 'concluded' or 'draft'.",
              "enum": [
                "in progress",
                "concluded",
                "draft"
              ]
            }
          },
          "required": [
            "patient_id",
            "status"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_219",
    "question": [
      [
        {
          "role": "user",
          "content": "What are the coordinates of the neuron in a rat's all part of the brain that produces GABA neurotransmitters?",
          "transcript": "Right, can you tell me, lets see, the spots in a rats brain where neurons make G-A-B-A, GABA neurotransmitters?",
          "audio_path": "BFCL_v3_simple/simple_219_cartesia.mp3",
          "asr_output_openai": "Right? Can you tell me? Let's see. The spots in a rat's brain where neurons make GABA neurotransmitters?",
          "asr_output_elevenlabs": "Right? Can you tell me? Let's see. The spots in a rat's brain where neurons make G, A, B, A GABA neurotransmitters?",
          "asr_output_deepgram": "Right? Can you tell me? Let's see. The spots in a rat's brain where neurons make GABBA neurotransmitters?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "get_neuron_coordinates",
        "description": "Retrieve the coordinates of the specified neuron in the rat's brain.",
        "parameters": {
          "type": "dict",
          "properties": {
            "neuron_type": {
              "type": "string",
              "description": "Type of neuron to find. For instance, GABA, Glutamate, etc."
            },
            "brain_region": {
              "type": "string",
              "description": "The region of the brain to consider.",
              "default": "All"
            }
          },
          "required": [
            "neuron_type",
            "brain_region"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_220",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the neuronal activity based on synaptic input rate of 200 and weight 0.5 and decay rate of 0.1.",
          "transcript": "Figure out neuronal activity, uh, with a synaptic input rate of two hundred, weight of zero point five, and, um, a decay rate of zero point one.",
          "audio_path": "BFCL_v3_simple/simple_220_cartesia.mp3",
          "asr_output_openai": "Figure out neuronal activity, with a synaptic input rate of 200, weight of 0.5, and a decay rate of 0.1.",
          "asr_output_elevenlabs": "Figure out neuronal activity, uh, with a synaptic input rate of 200, weight of 0.5, and, um, a decay rate of 0.1.",
          "asr_output_deepgram": "Figure out neuronal activity, with a synaptic input rate of two hundred, weight of zero point five, and, a decay rate of zero point one.",
          "clarifications": {
            "input_synaptic_rate": "200",
            "weight": "0.5",
            "decay_rate": "0.1"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_neuronal_activity",
        "description": "Calculate the neuronal activity (rate of firing) based on a given input synaptic rate, weight of inputs, and decay rate. Higher input or weight increases firing rate and higher decay rate decreases it.",
        "parameters": {
          "type": "dict",
          "properties": {
            "input_synaptic_rate": {
              "type": "integer",
              "description": "The synaptic input rate, usually represented as number of inputs per second."
            },
            "weight": {
              "type": "float",
              "description": "The weight of the input, denoting its influence on the neuron's state. Default is 1.0."
            },
            "decay_rate": {
              "type": "float",
              "description": "The rate at which the neuron's potential decays in the absence of inputs."
            }
          },
          "required": [
            "input_synaptic_rate",
            "decay_rate"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_221",
    "question": [
      [
        {
          "role": "user",
          "content": "What will be the population growth in London over the next five years?",
          "transcript": "Um, can you say how much Londons populations expected to grow next five years, right?",
          "audio_path": "BFCL_v3_simple/simple_221_cartesia.mp3",
          "asr_output_openai": "Um, can you say how much London's population's expected to grow next five years, right?",
          "asr_output_elevenlabs": "Um, can you say how much London's population is expected to grow next five years, right?",
          "asr_output_deepgram": "Can you say how much London's population is expected to grow next five years? Right?",
          "clarifications": {
            "location": "London",
            "time_period": "five years"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "population_growth_estimate",
        "description": "Estimate the future population growth of a specific location over a specified time period.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city that you want to estimate the population growth for."
            },
            "years": {
              "type": "integer",
              "description": "Number of years into the future for the estimate."
            },
            "rate": {
              "type": "float",
              "description": "Expected annual growth rate in percentage. Default is 1.2."
            }
          },
          "required": [
            "location",
            "years"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_222",
    "question": [
      [
        {
          "role": "user",
          "content": "Can you calculate my Body Mass Index (BMI) given my weight is 70 kg and height is 180 cm?",
          "transcript": "Hey, uh, could you figure out my BMI with my weight at seventy kilograms and height at one eighty centimeters?",
          "audio_path": "BFCL_v3_simple/simple_222_cartesia.mp3",
          "asr_output_openai": "Hey, could you figure out my BMI with my weight at 70 kilograms and height at 180 centimeters?",
          "asr_output_elevenlabs": "Hey, uh, could you figure out my BMI with my weight at 70 kilograms and height at 180 centimeters?",
          "asr_output_deepgram": "Hey, could you figure out my BMI with my weight at seventy kilograms and height at one eighty centimeters?",
          "clarifications": {
            "weight": "70 kg",
            "height": "180 cm"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_bmi",
        "description": "Calculate the Body Mass Index based on given weight and height.",
        "parameters": {
          "type": "dict",
          "properties": {
            "weight": {
              "type": "integer",
              "description": "The weight of a person in kilograms."
            },
            "height": {
              "type": "integer",
              "description": "The height of a person in centimeters."
            },
            "unit": {
              "type": "string",
              "description": "Optional. The measurement system to be used for the result. The default is 'metric'."
            }
          },
          "required": [
            "weight",
            "height"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_223",
    "question": [
      [
        {
          "role": "user",
          "content": "Find social behaviors and patterns in a group size of 50 with extroverted members being 15 and introverted members being 35.",
          "transcript": "Uh, look at the social behaviors and patterns in, um, a group of fifty people, with fifteen extroverts and, uh, thirty-five introverts, okay.",
          "audio_path": "BFCL_v3_simple/simple_223_cartesia.mp3",
          "asr_output_openai": "Look at the social behaviors and patterns in a group of 50 people with 15 extroverts and 35 introverts, okay?",
          "asr_output_elevenlabs": "Uh, look at the social behaviors and patterns in, um, a group of 50 people with 15 extroverts and, uh, 35 introverts, okay?",
          "asr_output_deepgram": "Look at the social behaviors and patterns in, a group of fifty people with fifteen extroverts and, thirty five introverts. Okay.",
          "clarifications": {
            "total_group_size": "50",
            "extroverted_members": "15",
            "introverted_members": "35"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "group_dynamics.pattern",
        "description": "Examine the social dynamics and interactions within a group based on the personality traits and group size.",
        "parameters": {
          "type": "dict",
          "properties": {
            "total": {
              "type": "integer",
              "description": "The total group size."
            },
            "extroverts": {
              "type": "integer",
              "description": "The number of extroverted members in the group."
            },
            "introverts": {
              "type": "integer",
              "description": "The number of introverted members in the group."
            }
          },
          "required": [
            "total",
            "extroverts",
            "introverts"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_224",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the most followed person on twitter who tweets about psychology related to behaviour and group dynamics.",
          "transcript": "Um, whos the top Twitter influencer talking about psychology, focusing on behavior and group dynamics?",
          "audio_path": "BFCL_v3_simple/simple_224_cartesia.mp3",
          "asr_output_openai": "Um, who's the top Twitter influencer talking about psychology, focusing on behavior and group dynamics?",
          "asr_output_elevenlabs": "Um, who's the top Twitter influencer talking about psychology, focusing on behavior and group dynamics?",
          "asr_output_deepgram": "Who's the top Twitter influencer talking about psychology, focusing on behavior and group dynamics?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "social_media_analytics.most_followed",
        "description": "Find the most followed Twitter user related to certain topics.",
        "parameters": {
          "type": "dict",
          "properties": {
            "topic": {
              "type": "string",
              "description": "The main topic of interest."
            },
            "sub_topics": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Sub-topics related to main topic. Default is empty."
            },
            "region": {
              "type": "string",
              "description": "Region of interest for twitter search. Default is 'all'."
            }
          },
          "required": [
            "topic"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_225",
    "question": [
      [
        {
          "role": "user",
          "content": "What is the percentage of population preferring digital reading over physical books?",
          "transcript": "Hey, uh, you know, what percentage of people like digital reading more than physical books?",
          "audio_path": "BFCL_v3_simple/simple_225_cartesia.mp3",
          "asr_output_openai": "Hey, uh, you know what percentage of people like digital reading more than physical books?",
          "asr_output_elevenlabs": "Hey, uh, you know what percentage of people like digital reading more than physical books?",
          "asr_output_deepgram": "Hey. You know, what percentage of people like digital reading more than physical books?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "psych_research.get_preference",
        "description": "Gathers research data on public preference between two options, based on societal category.",
        "parameters": {
          "type": "dict",
          "properties": {
            "category": {
              "type": "string",
              "description": "The societal category the preference data is about. E.g. reading, transportation, food"
            },
            "option_one": {
              "type": "string",
              "description": "The first option people could prefer."
            },
            "option_two": {
              "type": "string",
              "description": "The second option people could prefer."
            },
            "demographic": {
              "type": "string",
              "description": "Specific demographic of society to narrow down the research.",
              "default": "all"
            }
          },
          "required": [
            "category",
            "option_one",
            "option_two"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_226",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the compatibility score in percentage of Aries with Gemini.",
          "transcript": "Uh, whats compatibility percentage between Aries and Gemini, okay?",
          "audio_path": "BFCL_v3_simple/simple_226_cartesia.mp3",
          "asr_output_openai": "What's compatibility percentage between Aries and Gemini, okay?",
          "asr_output_elevenlabs": "What's compatibility percentage between Aries and Gemini? Okay.",
          "asr_output_deepgram": "What's compatibility percentage between Aries and Gemini? Okay?",
          "clarifications": {
            "first_zodiac_sign": "Aries",
            "second_zodiac_sign": "Gemini"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_zodiac_compatibility",
        "description": "Retrieve the compatibility score between two Zodiac signs.",
        "parameters": {
          "type": "dict",
          "properties": {
            "sign1": {
              "type": "string",
              "description": "The first Zodiac sign."
            },
            "sign2": {
              "type": "string",
              "description": "The second Zodiac sign."
            },
            "scale": {
              "type": "string",
              "enum": [
                "percentage",
                "0-10 scale"
              ],
              "description": "The scale on which compatibility should be shown. Default is 'percentage'."
            }
          },
          "required": [
            "sign1",
            "sign2"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_227",
    "question": [
      [
        {
          "role": "user",
          "content": "Get me strength and weakness traits for ENFJ personality type.",
          "transcript": "Okay, tell me the strengths and weaknesses of an ENFJ personality?",
          "audio_path": "BFCL_v3_simple/simple_227_cartesia.mp3",
          "asr_output_openai": "Okay. Tell me the strengths and weaknesses of an ENFJ personality?",
          "asr_output_elevenlabs": "Okay, tell me the strengths and weaknesses of an ENFJ personality.",
          "asr_output_deepgram": "Okay. Tell me the strengths and weaknesses of an e n f j personality.",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "get_personality_traits",
        "description": "Retrieve the personality traits for a specific personality type, including their strengths and weaknesses.",
        "parameters": {
          "type": "dict",
          "properties": {
            "type": {
              "type": "string",
              "description": "The personality type."
            },
            "traits": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "strengths",
                  "weaknesses"
                ]
              },
              "description": "List of traits to be retrieved, default is ['strengths']."
            }
          },
          "required": [
            "type"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_228",
    "question": [
      [
        {
          "role": "user",
          "content": "Find three personality traits of people who like jogging.",
          "transcript": "Um, right, whatre, uh, three personality traits of people who like jogging?",
          "audio_path": "BFCL_v3_simple/simple_228_cartesia.mp3",
          "asr_output_openai": "Write whatra, three personality traits of people who like jogging?",
          "asr_output_elevenlabs": "Um, write whatra, uh, three personality traits of people who like jogging?",
          "asr_output_deepgram": "Right, Whatra? Three personality traits of people who like jogging.",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "get_personality_traits",
        "description": "Retrieve the common personality traits of people based on their hobbies or activities.",
        "parameters": {
          "type": "dict",
          "properties": {
            "hobby": {
              "type": "string",
              "description": "The hobby or activity of interest."
            },
            "trait_count": {
              "type": "integer",
              "description": "The number of top traits to return, default is 5"
            }
          },
          "required": [
            "hobby"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_229",
    "question": [
      [
        {
          "role": "user",
          "content": "What's my Big Five Personality trait scores given that I am efficient, organized, easy going and compassionate?",
          "transcript": "Um, whatre my Big Five Personality trait scores if Im good at getting things done, organized, uh, easy-going, and compassionate? Oh, I should also ask bout conscientiousness.",
          "audio_path": "BFCL_v3_simple/simple_229_cartesia.mp3",
          "asr_output_openai": "Um, what are my Big Five personality trait scores if I'm good at getting things done, organized, easygoing, and compassionate? Oh, I should also ask about conscientiousness.",
          "asr_output_elevenlabs": "Um, what are my Big Five Personality Trait scores if I'm good at getting things done, organized, uh, easygoing, and compassionate? Oh, I should also ask about conscientiousness.",
          "asr_output_deepgram": "What are my big five personality trait scores if I'm good at getting things done, organized, easygoing, and compassionate? Oh, I should also ask about conscientiousness.",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "get_bigfive_scores",
        "description": "Retrieve Big Five Personality trait scores based on individual's behavioural characteristics.",
        "parameters": {
          "type": "dict",
          "properties": {
            "characteristics": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of user's behavioural characteristics."
            },
            "scale": {
              "type": "string",
              "enum": [
                "high",
                "medium",
                "low"
              ],
              "description": "The scoring scale of traits (default is medium)."
            }
          },
          "required": [
            "characteristics"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_230",
    "question": [
      [
        {
          "role": "user",
          "content": "Who was the King of France in 1510?",
          "transcript": "Um, can you tell me who King of France was in fifteen ten?",
          "audio_path": "BFCL_v3_simple/simple_230_cartesia.mp3",
          "asr_output_openai": "Um, can you tell me who King of France was in 1510?",
          "asr_output_elevenlabs": "Um, can you tell me who King of France was in 1510?",
          "asr_output_deepgram": "Can you tell me who King of France was in fifteen ten?",
          "clarifications": {
            "location": "France",
            "date": "1510"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "historic_leader_search",
        "description": "Retrieve information about a historical leader given a location and date.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The country or region in question."
            },
            "date": {
              "type": "integer",
              "description": "The year being queried."
            },
            "title": {
              "type": "string",
              "description": "The official title of the position. Default is 'King'."
            }
          },
          "required": [
            "location",
            "date"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_231",
    "question": [
      [
        {
          "role": "user",
          "content": "Provide key war events in German history from 1871 to 1945.",
          "transcript": "Uh, right, lemme know about major war events in, um, German history between eighteen seventy-one and nineteen forty-five.",
          "audio_path": "BFCL_v3_simple/simple_231_cartesia.mp3",
          "asr_output_openai": "Write, let me know about major war events in German history between 1871 and 1945.",
          "asr_output_elevenlabs": "Ah, right. Let me know about major war events in, um, German history between 1871 and 1945.",
          "asr_output_deepgram": "Right. Let him know about major war events in, German history between eighteen seventy one and nineteen forty five.",
          "clarifications": {
            "country": "German",
            "start_year": "1871",
            "end_year": "1945"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "history.get_key_events",
        "description": "Retrieve key historical events within a specific period for a certain country.",
        "parameters": {
          "type": "dict",
          "properties": {
            "country": {
              "type": "string",
              "description": "The name of the country for which history is queried."
            },
            "start_year": {
              "type": "integer",
              "description": "Start year of the period for which history is queried."
            },
            "end_year": {
              "type": "integer",
              "description": "End year of the period for which history is queried."
            },
            "event_type": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "War",
                  "Revolutions",
                  "Diplomacy",
                  "Economy"
                ]
              },
              "description": "Types of event. Default to 'all', which all types will be considered."
            }
          },
          "required": [
            "country",
            "start_year",
            "end_year"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_232",
    "question": [
      [
        {
          "role": "user",
          "content": "What was the full name king of England in 1800?",
          "transcript": "Um, in eighteen hundred, who was the king of England?",
          "audio_path": "BFCL_v3_simple/simple_232_cartesia.mp3",
          "asr_output_openai": "Um, in 1800, who was the king of England?",
          "asr_output_elevenlabs": "Umm, in 1800, who was the King of England?",
          "asr_output_deepgram": "In eighteen hundred, who was the king of England?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "monarch.getMonarchOfYear",
        "description": "Retrieve the monarch of a specific location during a specified year.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The location (e.g., country) whose monarch needs to be found."
            },
            "year": {
              "type": "integer",
              "description": "The year to search the monarch."
            },
            "fullName": {
              "type": "boolean",
              "default": false,
              "description": "If true, returns the full name and title of the monarch."
            }
          },
          "required": [
            "location",
            "year"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_233",
    "question": [
      [
        {
          "role": "user",
          "content": "When did the Treaty of Tordesillas take place? Put it in the format of YYYY.",
          "transcript": "Um, can you tell me, when exactly was the Treaty of Tordesillas signed? Uh, could you gimme the year in Y Y Y Y format?",
          "audio_path": "BFCL_v3_simple/simple_233_cartesia.mp3",
          "asr_output_openai": "Can you tell me when exactly was the Treaty of Tordesillas signed? Could you give me the year in YYYY format?",
          "asr_output_elevenlabs": "Um, can you tell me when exactly was the Treaty of Tordesillas signed? Uh, could you give me the year in YYYY format?",
          "asr_output_deepgram": "Can you tell me when exactly was the Treaty of Tortoisealia signed? Could you give me the year in y y y y format?",
          "clarifications": {
            "event_name": "Treaty of Tordesillas"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "european_history.get_event_date",
        "description": "Retrieve the date of a specific event in European history.",
        "parameters": {
          "type": "dict",
          "properties": {
            "event_name": {
              "type": "string",
              "description": "The name of the event."
            },
            "format": {
              "type": "string",
              "description": "Optional format of the returned date. Default is 'MM-DD-YYYY'."
            }
          },
          "required": [
            "event_name"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_234",
    "question": [
      [
        {
          "role": "user",
          "content": "Find important Wars in European history during the 19th century.",
          "transcript": "Can you, uh, tell me about key wars in Europe during the 1800s, oh?",
          "audio_path": "BFCL_v3_simple/simple_234_cartesia.mp3",
          "asr_output_openai": "Can you uh, tell me about key wars in Europe during the 1800s, oh?",
          "asr_output_elevenlabs": "Can you uh tell me about key wars in Europe during the 1800s? Oh.",
          "asr_output_deepgram": "Can you, tell me about key wars in Europe during the eighteen hundreds, o?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "history_eu.fetch_events",
        "description": "Fetches significant historical events within a specific time period in European history.",
        "parameters": {
          "type": "dict",
          "properties": {
            "century": {
              "type": "integer",
              "description": "The century you are interested in."
            },
            "region": {
              "type": "string",
              "description": "The region of Europe you are interested in.",
              "enum": [
                "Northern",
                "Southern",
                "Eastern",
                "Western"
              ]
            },
            "category": {
              "type": "string",
              "description": "Category of the historical events. Default is 'Culture'.",
              "enum": [
                "Wars",
                "Culture",
                "Politics",
                "Scientific",
                "Others"
              ]
            }
          },
          "required": [
            "century",
            "region"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_235",
    "question": [
      [
        {
          "role": "user",
          "content": "When was the signing of the Treaty of Lisbon?",
          "transcript": "Um, hey, right, when was Treaty of Lisbon signed?",
          "audio_path": "BFCL_v3_simple/simple_235_cartesia.mp3",
          "asr_output_openai": "Um, hey, right, when was Treaty of Lisbon signed?",
          "asr_output_elevenlabs": "Um, hey, right. When was Treaty of Lisbon signed?",
          "asr_output_deepgram": "Hey. Right. When was Treaty of Lisbon signed?",
          "clarifications": {
            "event_name": "Treaty of Lisbon"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_event_date",
        "description": "Retrieve the date of a historical event.",
        "parameters": {
          "type": "dict",
          "properties": {
            "event": {
              "type": "string",
              "description": "The name of the historical event."
            },
            "location": {
              "type": "string",
              "description": "Location where the event took place. Default to global if not specified."
            }
          },
          "required": [
            "event"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_236",
    "question": [
      [
        {
          "role": "user",
          "content": "Get start date on the American Civil War.",
          "transcript": "When did the American Civil War, uh, start?",
          "audio_path": "BFCL_v3_simple/simple_236_cartesia.mp3",
          "asr_output_openai": "When did the American Civil War start?",
          "asr_output_elevenlabs": "When did the American Civil War, uh, start?",
          "asr_output_deepgram": "When did the American Civil War, start?",
          "clarifications": {
            "event_name": "American Civil War",
            "specific_info": "start date"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "us_history.get_event_info",
        "description": "Retrieve detailed information about a significant event in U.S. history.",
        "parameters": {
          "type": "dict",
          "properties": {
            "event_name": {
              "type": "string",
              "description": "The name of the event."
            },
            "specific_info": {
              "type": "string",
              "description": "Specific aspect of information related to event.",
              "enum": [
                "Start Date",
                "End Date",
                "Participants",
                "Result",
                "Notable Figures",
                "Importance in History"
              ]
            }
          },
          "required": [
            "event_name",
            "specific_info"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_237",
    "question": [
      [
        {
          "role": "user",
          "content": "Get historical GDP data for United States from 1960 to 2000.",
          "transcript": "Um, can you pull the historical GDP data for the United States from nineteen sixty to two thousand?",
          "audio_path": "BFCL_v3_simple/simple_237_cartesia.mp3",
          "asr_output_openai": "Can you pull the historical GDP data for the United States from 1960 to 2000?",
          "asr_output_elevenlabs": "Um, can you pull the historical GDP data for the United States from 1960 to 2000?",
          "asr_output_deepgram": "Can you pull the historical GDP data for the United States from nineteen sixty to two thousand?",
          "clarifications": {
            "country": "United States",
            "start_year": "1960",
            "end_year": "2000"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_historical_GDP",
        "description": "Retrieve historical GDP data for a specific country and time range.",
        "parameters": {
          "type": "dict",
          "properties": {
            "country": {
              "type": "string",
              "description": "The country for which the historical GDP data is required."
            },
            "start_year": {
              "type": "integer",
              "description": "Starting year of the period for which GDP data is required."
            },
            "end_year": {
              "type": "integer",
              "description": "Ending year of the period for which GDP data is required."
            }
          },
          "required": [
            "country",
            "start_year",
            "end_year"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_238",
    "question": [
      [
        {
          "role": "user",
          "content": "Who was the president of the United States during the American Civil War?",
          "transcript": "Hey, uh, who was U.S. president during the Civil War?",
          "audio_path": "BFCL_v3_simple/simple_238_cartesia.mp3",
          "asr_output_openai": "Hey, aa who was US president during the Civil War?",
          "asr_output_elevenlabs": "Hey, uh, who was U.S. President during the Civil War?",
          "asr_output_deepgram": "Hey, who was US president during the civil war?",
          "clarifications": {
            "event_details": "American Civil War"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "us_history.get_president",
        "description": "Retrieve the U.S. president during a specific event in American history.",
        "parameters": {
          "type": "dict",
          "properties": {
            "event": {
              "type": "string",
              "description": "The event in U.S. history."
            },
            "year": {
              "type": "integer",
              "description": "The specific year of the event."
            }
          },
          "required": [
            "event",
            "year"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_239",
    "question": [
      [
        {
          "role": "user",
          "content": "Who was the full name of the president of the United States in 1861?",
          "transcript": "Uh, hey, whos U.S. president in eighteen sixty-one, and, um, whats his full name, right?",
          "audio_path": "BFCL_v3_simple/simple_239_cartesia.mp3",
          "asr_output_openai": "Uh, hey, who's U.S. President in 1861? And, um, what's his full name, right?",
          "asr_output_elevenlabs": "Ah, hey, who's US President in 1861? And, um, what's his full name? Right.",
          "asr_output_deepgram": "Hey. Who's US president in eighteen sixty one? And, what's his full name? Right?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "US_president.in_year",
        "description": "Retrieve the name of the U.S. president in a given year.",
        "parameters": {
          "type": "dict",
          "properties": {
            "year": {
              "type": "integer",
              "description": "The year in question."
            },
            "full_name": {
              "type": "boolean",
              "default": true,
              "description": "Option to return full name with middle initial, if applicable."
            }
          },
          "required": [
            "year"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_240",
    "question": [
      [
        {
          "role": "user",
          "content": "Who was the President of the United States in 1940?",
          "transcript": "Hey, um, who was U.S. President in nineteen forty, yeah?",
          "audio_path": "BFCL_v3_simple/simple_240_cartesia.mp3",
          "asr_output_openai": "Hey Ann, hu was US-President 1940, ya?",
          "asr_output_elevenlabs": "Hey, um, who was U.S. President in 1940? Yeah?",
          "asr_output_deepgram": "Hey, who was US president in nineteen forty? Yeah?",
          "clarifications": {
            "year": "1940"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "history_api.get_president_by_year",
        "description": "Get the name of the U.S. President for a specified year.",
        "parameters": {
          "type": "dict",
          "properties": {
            "year": {
              "type": "integer",
              "description": "The year you want to know the U.S. president of."
            },
            "full_term_only": {
              "type": "boolean",
              "description": "Flag to determine if we should only return presidents that served a full term for the specified year.",
              "default": false
            }
          },
          "required": [
            "year"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_241",
    "question": [
      [
        {
          "role": "user",
          "content": "Who was the U.S. president during the Civil War?",
          "transcript": "Hey, uh, who was U-S president during the Civil War?",
          "audio_path": "BFCL_v3_simple/simple_241_cartesia.mp3",
          "asr_output_openai": "Hey, who was US president during the Civil War?",
          "asr_output_elevenlabs": "Hey, uh, who was U.S. president during the Civil War?",
          "asr_output_deepgram": "Hey. Who was US president during the Civil War?",
          "clarifications": {
            "event_details": "Civil War"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "US_President_During_Event",
        "description": "Returns the U.S. president during a specified historical event.",
        "parameters": {
          "type": "dict",
          "properties": {
            "event": {
              "type": "string",
              "description": "The historical event."
            },
            "country": {
              "type": "string",
              "description": "The country the president leads (optional parameter, defaults to 'USA' if not specified)."
            }
          },
          "required": [
            "event"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_242",
    "question": [
      [
        {
          "role": "user",
          "content": "Who is the scientist that first proposed the theory of evolution?",
          "transcript": "Um, who thought up the theory of evolution first, right?",
          "audio_path": "BFCL_v3_simple/simple_242_cartesia.mp3",
          "asr_output_openai": "Um, who thought up the theory of evolution first, right?",
          "asr_output_elevenlabs": "Um, who thought up the theory of evolution first? Right?",
          "asr_output_deepgram": "Who thought up the theory of evolution first? Right?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "get_scientist_for_discovery",
        "description": "Retrieve the scientist's name who is credited for a specific scientific discovery or theory.",
        "parameters": {
          "type": "dict",
          "properties": {
            "discovery": {
              "type": "string",
              "description": "The scientific discovery or theory."
            }
          },
          "required": [
            "discovery"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_243",
    "question": [
      [
        {
          "role": "user",
          "content": "Who discovered the neutron? Give me detail information.",
          "transcript": "Who, um, discovered the neutron? Can, uh, gimme more details, right?",
          "audio_path": "BFCL_v3_simple/simple_243_cartesia.mp3",
          "asr_output_openai": "Who discovered the neutron?",
          "asr_output_elevenlabs": "Who, um, discovered the neutron can give more details, right?",
          "asr_output_deepgram": "Who, discovered the neutron? Can, give more details. Right?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "get_discoverer",
        "description": "Get the person or team who made a particular scientific discovery",
        "parameters": {
          "type": "dict",
          "properties": {
            "discovery": {
              "type": "string",
              "description": "The discovery for which the discoverer's information is needed."
            },
            "detail": {
              "type": "boolean",
              "description": "Optional flag to get additional details about the discoverer, such as birth date and nationality. Defaults to false."
            }
          },
          "required": [
            "discovery",
            "detail"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_244",
    "question": [
      [
        {
          "role": "user",
          "content": "What year was the law of universal gravitation published by Isaac Newton?",
          "transcript": "Whend Isaac Newton publish law of universal gravitation, right?",
          "audio_path": "BFCL_v3_simple/simple_244_cartesia.mp3",
          "asr_output_openai": "When'd Isaac Newton publish law of universal gravitation, right?",
          "asr_output_elevenlabs": "When did Isaac Newton publish Law of Universal Gravitation? Right!",
          "asr_output_deepgram": "When Isaac Newton published law of universal gravitation. Right?",
          "clarifications": {
            "author_name": "Isaac Newton",
            "work_title": "law of universal gravitation"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "publication_year.find",
        "description": "Fetches the year a particular scientific work was published.",
        "parameters": {
          "type": "dict",
          "properties": {
            "author": {
              "type": "string",
              "description": "Name of the author of the work."
            },
            "work_title": {
              "type": "string",
              "description": "Title of the scientific work."
            },
            "location": {
              "type": "string",
              "description": "Place of the publication, if known. Default to 'all'."
            }
          },
          "required": [
            "author",
            "work_title"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_245",
    "question": [
      [
        {
          "role": "user",
          "content": "Who discovered radium?",
          "transcript": "Um, right, who discovered radium?",
          "audio_path": "BFCL_v3_simple/simple_245_cartesia.mp3",
          "asr_output_openai": "Um, right? Who discovered radium?",
          "asr_output_elevenlabs": "Um, right? Who discovered radium?",
          "asr_output_deepgram": "Right. Who discovered radium?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "discoverer.get",
        "description": "Retrieve the name of the discoverer of an element based on its name.",
        "parameters": {
          "type": "dict",
          "properties": {
            "element_name": {
              "type": "string",
              "description": "The name of the element."
            },
            "year": {
              "type": "integer",
              "description": "Optional parameter that refers to the year of discovery. It could be helpful in case an element was discovered more than once. Default to 0, which means not use it."
            },
            "first": {
              "type": "boolean",
              "default": true,
              "description": "Optional parameter indicating if the first discoverer's name should be retrieved."
            }
          },
          "required": [
            "element_name"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_246",
    "question": [
      [
        {
          "role": "user",
          "content": "Who discovered Gravity and what was the method used?",
          "transcript": "Um, who discovered gravity and, uh, howd they do it, right?",
          "audio_path": "BFCL_v3_simple/simple_246_cartesia.mp3",
          "asr_output_openai": "Who discovered gravity and how'd they do it, right?",
          "asr_output_elevenlabs": "Um, who discovered gravity and, uh, how'd they do it, right?",
          "asr_output_deepgram": "Who discovered gravity and, how'd they do it. Right?",
          "clarifications": {
            "discovery_name": "Gravity"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "science_history.get_discovery_details",
        "description": "Retrieve the details of a scientific discovery based on the discovery name.",
        "parameters": {
          "type": "dict",
          "properties": {
            "discovery": {
              "type": "string",
              "description": "The name of the discovery, e.g. Gravity"
            },
            "method_used": {
              "type": "string",
              "description": "The method used for the discovery, default value is 'default' which gives the most accepted method."
            }
          },
          "required": [
            "discovery"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_247",
    "question": [
      [
        {
          "role": "user",
          "content": "What was Albert Einstein's contribution to science on March 17, 1915?",
          "transcript": "Hey, um, whatd Albert Einstein contribute to science on March seventeenth, nineteen fifteen?",
          "audio_path": "BFCL_v3_simple/simple_247_cartesia.mp3",
          "asr_output_openai": "Hey, um, what Albert Einstein contribute to science on March 17, 1915?",
          "asr_output_elevenlabs": "Hey, um, what Albert Einstein contribute to science on March 17th, 1915?",
          "asr_output_deepgram": "Hey. Would Albert Einstein contribute to science on March seventeenth nineteen fifteen?",
          "clarifications": {
            "scientist_name": "Albert Einstein",
            "contribution_date": "March 17, 1915"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "historical_contrib.get_contrib",
        "description": "Retrieve historical contribution made by a scientist on a specific date.",
        "parameters": {
          "type": "dict",
          "properties": {
            "scientist": {
              "type": "string",
              "description": "The scientist whose contributions need to be searched."
            },
            "date": {
              "type": "string",
              "description": "The date when the contribution was made in yyyy-mm-dd format."
            },
            "category": {
              "type": "string",
              "description": "The field of the contribution, such as 'Physics' or 'Chemistry'. Default is 'all'."
            }
          },
          "required": [
            "scientist",
            "date"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_248",
    "question": [
      [
        {
          "role": "user",
          "content": "Who invented the theory of relativity and in which year?",
          "transcript": "Um, who came up with theory of relativity, and, uh, when was it, right?",
          "audio_path": "BFCL_v3_simple/simple_248_cartesia.mp3",
          "asr_output_openai": "Who came up with theory of relativity and when was it, right?",
          "asr_output_elevenlabs": "Um, who came up with theory of relativity. And, uh, when was it, right?",
          "asr_output_deepgram": "Who came up with theory of relativity? And, when was it? Right?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "science_history.get_invention",
        "description": "Retrieve the inventor and year of invention based on the invention's name.",
        "parameters": {
          "type": "dict",
          "properties": {
            "invention_name": {
              "type": "string",
              "description": "The name of the invention."
            },
            "want_year": {
              "type": "boolean",
              "default": false,
              "description": "Return the year of invention if set to true."
            }
          },
          "required": [
            "invention_name",
            "want_year"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_249",
    "question": [
      [
        {
          "role": "user",
          "content": "Tell me more about Christianity and its history till the 14th century",
          "transcript": "Can you give me a rundown on Christianity and its history up to the fourteen century?",
          "audio_path": "BFCL_v3_simple/simple_249_cartesia.mp3",
          "asr_output_openai": "Can you give me a rundown on Christianity and its history up to the 14th century?",
          "asr_output_elevenlabs": "Can you give me a rundown on Christianity and its history up to the 14th century?",
          "asr_output_deepgram": "Can you give me a rundown on Christianity and its history up to the fourteenth century?",
          "clarifications": {
            "religion": "Christianity",
            "till_century": "14th"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "religion.history_info",
        "description": "Provides comprehensive historical details about a specified religion till a specified century.",
        "parameters": {
          "type": "dict",
          "properties": {
            "religion": {
              "type": "string",
              "description": "The name of the religion for which historical details are needed."
            },
            "till_century": {
              "type": "integer",
              "description": "The century till which historical details are needed."
            },
            "include_people": {
              "type": "boolean",
              "description": "To include influential people related to the religion during that time period, default is False"
            }
          },
          "required": [
            "religion",
            "till_century"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_250",
    "question": [
      [
        {
          "role": "user",
          "content": "What's the time difference between San Francisco and Sydney?",
          "transcript": "Hey, uh, whats the time difference between San Francisco and Sydney, right?",
          "audio_path": "BFCL_v3_simple/simple_250_cartesia.mp3",
          "asr_output_openai": "Hey, uh, what's the time difference between San Francisco and Sydney, right?",
          "asr_output_elevenlabs": "Hey, uh, what's the time difference between San Francisco and Sydney, right?",
          "asr_output_deepgram": "Hey. What's the time difference between San Francisco and Sydney. Right?",
          "clarifications": {
            "first_place": "San Francisco",
            "second_place": "Sydney"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_time_difference",
        "description": "Get the time difference between two places.",
        "parameters": {
          "type": "dict",
          "properties": {
            "place1": {
              "type": "string",
              "description": "The first place for time difference."
            },
            "place2": {
              "type": "string",
              "description": "The second place for time difference."
            }
          },
          "required": [
            "place1",
            "place2"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_251",
    "question": [
      [
        {
          "role": "user",
          "content": "What is the earliest reference of Jesus Christ in history from historical record?",
          "transcript": "Whens, uh, the first historical mention of Jesus Christ, right?",
          "audio_path": "BFCL_v3_simple/simple_251_cartesia.mp3",
          "asr_output_openai": "Whence? Ah, the first historical mention of Jesus Christ, right?",
          "asr_output_elevenlabs": "Whence? Uh, the first historical mention of Jesus Christ. Right?",
          "asr_output_deepgram": "When's, the first historical mention of Jesus Christ. Right?",
          "clarifications": {
            "person_name": "Jesus Christ"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_earliest_reference",
        "description": "Retrieve the earliest historical reference of a person.",
        "parameters": {
          "type": "dict",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the person."
            },
            "source": {
              "type": "string",
              "enum": [
                "scriptures",
                "historical records"
              ],
              "description": "Source to fetch the reference. Default is 'scriptures'"
            }
          },
          "required": [
            "name"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_252",
    "question": [
      [
        {
          "role": "user",
          "content": "Find ten major historical events related to Christianity in the 16th century sort by importance.",
          "transcript": "Um, can you list the ten most important historical events, uh, related to Christianity from the 16th century, okay?",
          "audio_path": "BFCL_v3_simple/simple_252_cartesia.mp3",
          "asr_output_openai": "Can you list the ten most important historical events related to Christianity from the 16th century?",
          "asr_output_elevenlabs": "Um, can you list the ten most important historical events, uh, related to Christianity from the 16th century, okay?",
          "asr_output_deepgram": "Can you list the ten most important historical events, related to Christianity from the sixteenth century? Okay?",
          "clarifications": {
            "religion": "Christianity",
            "century": "16th",
            "event_count": "ten",
            "sort_order": "importance"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_religion_history",
        "description": "Retrieves significant religious events, including the details of the event, its historical context, and its impacts.",
        "parameters": {
          "type": "dict",
          "properties": {
            "religion": {
              "type": "string",
              "description": "Name of the religion to be queried."
            },
            "century": {
              "type": "integer",
              "description": "The century in which the event(s) took place."
            },
            "sort_by": {
              "type": "string",
              "enum": [
                "importance",
                "chronological"
              ],
              "default": "chronological",
              "description": "Order of sorting the events. Default is chronological."
            },
            "count": {
              "type": "integer",
              "default": 5,
              "description": "Number of events to return. Default is 5."
            }
          },
          "required": [
            "religion",
            "century"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_253",
    "question": [
      [
        {
          "role": "user",
          "content": "Retrieve the full historyof Buddhism",
          "transcript": "Um, can you get the, uh, complete history of Buddhism for me?",
          "audio_path": "BFCL_v3_simple/simple_253_cartesia.mp3",
          "asr_output_openai": "Um, can you get the complete history of Buddhism for me?",
          "asr_output_elevenlabs": "Um, can you get the uh, Complete History of Buddhism for me?",
          "asr_output_deepgram": "Can you get the, complete history of Buddhism for me?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "retrieve_religion_info",
        "description": "Retrieve the history and main beliefs of a religion.",
        "parameters": {
          "type": "dict",
          "properties": {
            "religion_name": {
              "type": "string",
              "description": "The name of the religion."
            },
            "detail_level": {
              "type": "string",
              "description": "Level of detail for the returned information, either 'summary' or 'full'.",
              "default": "summary"
            }
          },
          "required": [
            "religion_name",
            "detail_level"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_254",
    "question": [
      [
        {
          "role": "user",
          "content": "Retrieve the historic dates and facts related to Christianity between year 300 and 400.",
          "transcript": "Um, can you, oh, get historical dates and facts about Christianity from between the years three hundred n four hundred?",
          "audio_path": "BFCL_v3_simple/simple_254_cartesia.mp3",
          "asr_output_openai": "Um, can you, oh, get historical dates and facts about Christianity from between the years 300 and 400?",
          "asr_output_elevenlabs": "Um, can you, oh, get historical dates and facts about Christianity from between the years 300 and 400?",
          "asr_output_deepgram": "Can you, oh, get historical dates and facts about Christianity from between the years three hundred and four hundred?",
          "clarifications": {
            "religion": "Christianity",
            "start_year": "300",
            "end_year": "400"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_religion_history",
        "description": "Retrieves historic events and facts related to a specified religion for a given period.",
        "parameters": {
          "type": "dict",
          "properties": {
            "religion": {
              "type": "string",
              "description": "The name of the religion."
            },
            "start_year": {
              "type": "integer",
              "description": "The starting year of the period."
            },
            "end_year": {
              "type": "integer",
              "description": "The end year of the period."
            },
            "event_type": {
              "type": "string",
              "enum": [
                "all",
                "crusade",
                "schism",
                "reform"
              ],
              "description": "Optional parameter specifying the type of event. Default is 'all'."
            }
          },
          "required": [
            "religion",
            "start_year",
            "end_year"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_255",
    "question": [
      [
        {
          "role": "user",
          "content": "Get the biography and main contributions of Pope Innocent III.",
          "transcript": "Um, can you find Pope Innocent IIIs biography and, uh, his main contributions?",
          "audio_path": "BFCL_v3_simple/simple_255_cartesia.mp3",
          "asr_output_openai": "Can you find Pope Innocent 30's biography and his main contributions?",
          "asr_output_elevenlabs": "Um, can you find Pope Innocent Thirty's biography and, uh, his main contributions?",
          "asr_output_deepgram": "Can you find Pope Innocent Thirties biography and, his main contributions?",
          "clarifications": {
            "papal_name": "Pope Innocent III"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "religious_history.get_papal_biography",
        "description": "Retrieve the biography and main religious and historical contributions of a Pope based on his papal name.",
        "parameters": {
          "type": "dict",
          "properties": {
            "papal_name": {
              "type": "string",
              "description": "The papal name of the Pope."
            },
            "include_contributions": {
              "type": "boolean",
              "default": false,
              "description": "Include main contributions of the Pope in the response if true."
            }
          },
          "required": [
            "papal_name",
            "include_contributions"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_256",
    "question": [
      [
        {
          "role": "user",
          "content": "Generate an image of a circle with a radius of 50 pixels and color 'Red'.",
          "transcript": "Create, um, an image of a red circle with a fifty-pixel radius, thanks.",
          "audio_path": "BFCL_v3_simple/simple_256_cartesia.mp3",
          "asr_output_openai": "Create an image of a red circle with a 50-pixel radius, thanks.",
          "asr_output_elevenlabs": "Create, um, an image of a red circle with a 50-pixel radius. Thanks.",
          "asr_output_deepgram": "Create, an image of a red circle with a fifty pixel radius. Thanks.",
          "clarifications": {
            "circle_radius": "50 pixels",
            "circle_color": "Red"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "generate_circle_image",
        "description": "Generates a circle image based on the given radius and color",
        "parameters": {
          "type": "dict",
          "properties": {
            "radius": {
              "type": "integer",
              "description": "The radius of the circle in pixels."
            },
            "color": {
              "type": "string",
              "description": "The color of the circle."
            },
            "background": {
              "type": "string",
              "description": "Optional: The color of the background, default is white."
            }
          },
          "required": [
            "radius",
            "color"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_257",
    "question": [
      [
        {
          "role": "user",
          "content": "Can you help me identify the basic RGB value of Sea Green color?",
          "transcript": "Can you tell me the basic RGB value for Sea Green?",
          "audio_path": "BFCL_v3_simple/simple_257_cartesia.mp3",
          "asr_output_openai": "Can you tell me the basic RGB value for sea green?",
          "asr_output_elevenlabs": "Can you tell me the basic RGB value for sea green?",
          "asr_output_deepgram": "Can you tell me the basic RGB value for Seagreen?",
          "clarifications": {
            "color_name": "Sea Green"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "identify_color_rgb",
        "description": "This function identifies the RGB values of a named color.",
        "parameters": {
          "type": "dict",
          "properties": {
            "color_name": {
              "type": "string",
              "description": "Name of the color."
            },
            "standard": {
              "type": "string",
              "description": "The color standard (e.g. basic, pantone). Default is 'basic'"
            }
          },
          "required": [
            "color_name"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_258",
    "question": [
      [
        {
          "role": "user",
          "content": "Mix yellow and blue colors and adjust the lightness level to 60 percent.",
          "transcript": "Combine yellow and, uh, blue, then set lightness to sixty percent, right.",
          "audio_path": "BFCL_v3_simple/simple_258_cartesia.mp3",
          "asr_output_openai": "Combine yellow and blue, then set lightness to sixty percent, right?",
          "asr_output_elevenlabs": "Combine yellow and, uh, blue. Then set lightness to 60%, right?",
          "asr_output_deepgram": "Combine yellow and, blue, then set lightness to sixty percent. Right?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "mix_paint_color",
        "description": "Combine two primary paint colors and adjust the resulting color's lightness level.",
        "parameters": {
          "type": "dict",
          "properties": {
            "color1": {
              "type": "string",
              "description": "The first primary color to be mixed."
            },
            "color2": {
              "type": "string",
              "description": "The second primary color to be mixed."
            },
            "lightness": {
              "type": "integer",
              "description": "The desired lightness level of the resulting color in percentage. The default level is set to 50."
            }
          },
          "required": [
            "color1",
            "color2"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_259",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the total quantity of paint needed to cover a wall of 30 feet by 12 feet using a specific brand that covers 400 square feet per gallon.",
          "transcript": "Um, how much paint do I need for a thirty by twelve feet wall if, uh, one gallon covers four hundred square feet?",
          "audio_path": "BFCL_v3_simple/simple_259_cartesia.mp3",
          "asr_output_openai": "Um, how much paint do I need for a 30 by 12 feet wall if one gallon covers 400 square feet?",
          "asr_output_elevenlabs": "Um, how much paint do I need for a 30 by 12 feet wall if, uh, one gallon covers 400 square feet?",
          "asr_output_deepgram": "How much paint do I need for a thirty by twelve feet wall if, one gallon covers four hundred square feet?",
          "clarifications": {
            "wall_length": "30 feet",
            "wall_height": "12 feet",
            "coverage_rate": "400 square feet per gallon"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_paint_needed",
        "description": "Calculate the amount of paint needed to cover a surface area based on the coverage rate of a specific paint brand.",
        "parameters": {
          "type": "dict",
          "properties": {
            "coverage_rate": {
              "type": "integer",
              "description": "The area in square feet that one gallon of paint can cover."
            },
            "length": {
              "type": "integer",
              "description": "Length of the wall to be painted in feet."
            },
            "height": {
              "type": "integer",
              "description": "Height of the wall to be painted in feet."
            }
          },
          "required": [
            "coverage_rate",
            "length",
            "height"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_260",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate how many gallons of paint is required to paint a wall with width of 20ft and height of 12ft, assuming 1 gallon covers approximately 350 sq.ft. Don't include window area of 15 sq.ft.",
          "transcript": "Um, can you, like, find out how many gallons of paint well need for a wall thats twenty feet wide and twelve feet high? Remember, uh, one gallon covers roughly three fifty square feet, and theres a window thats fifteen square feet we dont need to paint.",
          "audio_path": "BFCL_v3_simple/simple_260_cartesia.mp3",
          "asr_output_openai": "Can you, like, find out how many gallons of paint we'll need for a wall that's 20 feet wide and 12 feet high? Remember, one gallon covers roughly 350 square feet, and there is a window that's 15 square feet we don't need to paint.",
          "asr_output_elevenlabs": "Um, can you, like, find out how many gallons of paint we'll need for a wall that's 20 feet wide and 12 feet high? Remember, uh, one gallon covers roughly 350 square feet, and there is a window that's 15 square feet we don't need to paint.",
          "asr_output_deepgram": "Can you, like, find out how many gallons of paint we'll need for a wall that's twenty feet wide and twelve feet high? Remember, one gallon covers roughly three fifty square feet, and there is a window that's fifteen square feet we don't need to paint.",
          "clarifications": {
            "wall_width": "20ft",
            "wall_height": "12ft",
            "window_area": "15 sq.ft",
            "paint_coverage": "350 sq.ft"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "paint_requirement.calculate",
        "description": "Calculate the amount of paint required to paint a given area. Account for coverage efficiency of the paint and exclusions (like windows).",
        "parameters": {
          "type": "dict",
          "properties": {
            "area": {
              "type": "dict",
              "properties": {
                "width": {
                  "type": "integer",
                  "description": "The width of the area to be painted in feet."
                },
                "height": {
                  "type": "integer",
                  "description": "The height of the area to be painted in feet."
                }
              },
              "description": "The area to be painted."
            },
            "paint_coverage": {
              "type": "integer",
              "description": "Coverage area per gallon of the paint in square feet.",
              "default": 350
            },
            "exclusion": {
              "type": "dict",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The type of the exclusion e.g window, door etc."
                },
                "area": {
                  "type": "integer",
                  "description": "The area of the exclusion in square feet."
                }
              },
              "description": "Area not to be painted. Default to not use any exclusion if not specified."
            }
          },
          "required": [
            "area",
            "paint_coverage"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_261",
    "question": [
      [
        {
          "role": "user",
          "content": "Draw a rectangle with a width of 20 units and height of 10 units in red.",
          "transcript": "Um, can you, uh, draw a red rectangle, twenty units wide and ten units tall, okay?",
          "audio_path": "BFCL_v3_simple/simple_261_cartesia.mp3",
          "asr_output_openai": "Um, can you, uh, draw a red rectangle 20 units wide and 10 units tall, okay?",
          "asr_output_elevenlabs": "Um, can you, uh, draw a red rectangle 20 units wide and 10 units tall? Okay?",
          "asr_output_deepgram": "Can you, draw a red rectangle twenty units wide and ten units tall? Okay?",
          "clarifications": {
            "rectangle_width": "20 units",
            "rectangle_height": "10 units",
            "rectangle_color": "red"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "draw_rectangle",
        "description": "Draw a rectangle given its width and height.",
        "parameters": {
          "type": "dict",
          "properties": {
            "width": {
              "type": "integer",
              "description": "The width of the rectangle."
            },
            "height": {
              "type": "integer",
              "description": "The height of the rectangle."
            },
            "color": {
              "type": "string",
              "description": "The color of the rectangle. Default is 'black'."
            }
          },
          "required": [
            "width",
            "height"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_262",
    "question": [
      [
        {
          "role": "user",
          "content": "Change my painting's medium to oil and change size to 12x18 with red dominant color.",
          "transcript": "Switch my painting to oil medium, um, and resize it to twelve by eighteen. Make red the dominant color.",
          "audio_path": "BFCL_v3_simple/simple_262_cartesia.mp3",
          "asr_output_openai": "Switch my painting to oil medium, and resize it to 12 by 18. Make red the dominant color.",
          "asr_output_elevenlabs": "Switch my painting to oil medium. Um, and resize it to twelve by eighteen. Make red the dominant color.",
          "asr_output_deepgram": "Switch my painting to oil medium, and resize it to twelve by eighteen. Make red the dominant color.",
          "clarifications": {
            "painting_medium": "oil",
            "painting_size": "12x18",
            "dominant_color": "red"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "modify_painting",
        "description": "Modify an existing painting's attributes such as size, medium, and color.",
        "parameters": {
          "type": "dict",
          "properties": {
            "size": {
              "type": "string",
              "description": "The size of the painting in inches, width by height."
            },
            "medium": {
              "type": "string",
              "description": "The medium of the painting, such as oil, acrylic, etc."
            },
            "dominant_color": {
              "type": "string",
              "description": "The dominant color of the painting. Default to 'black'."
            }
          },
          "required": [
            "size",
            "medium"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_263",
    "question": [
      [
        {
          "role": "user",
          "content": "Find me the most recent art sculpture by James Plensa with detailed description.",
          "transcript": "Lemme see... can you show me the latest sculpture by James Plensa, thats J-A-M-E-S P-L-E-N-S-A, James Plensa, with a detailed description?",
          "audio_path": "BFCL_v3_simple/simple_263_cartesia.mp3",
          "asr_output_openai": "Let me see. Can you show me the latest sculpture by Jaume Plensa, that's J-A-U-M-E P-L-E-N-S-A, Jaume Plensa, with a detailed description?",
          "asr_output_elevenlabs": "Let me see. Can you show me the latest sculpture by James Plensa? That's J a m e s P l e n s a., James Plensa, with a detailed description.",
          "asr_output_deepgram": "Let me see. Can you show me the latest sculpture by James Plensa? That's j a m e s p l e n s a James Plensa with a detailed description.",
          "clarifications": {
            "artist_name": "James Plensa"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_sculpture_info",
        "description": "Retrieves the most recent artwork by a specified artist with its detailed description.",
        "parameters": {
          "type": "dict",
          "properties": {
            "artist_name": {
              "type": "string",
              "description": "The name of the artist."
            },
            "detail": {
              "type": "boolean",
              "description": "If True, it provides detailed description of the sculpture. Defaults to False."
            }
          },
          "required": [
            "artist_name"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_264",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the size of the sculpture with title 'David' by Michelangelo.",
          "transcript": "Whats, uh, size of Michelangelos sculpture titled David, right?",
          "audio_path": "BFCL_v3_simple/simple_264_cartesia.mp3",
          "asr_output_openai": "What's the size of Michelangelo's sculpture titled David, right?",
          "asr_output_elevenlabs": "What's? Size of Michelangelo's sculpture titled David, right?",
          "asr_output_deepgram": "What? Size of Michelangelo sculpture titled David. Right?",
          "clarifications": {
            "sculpture_title": "David",
            "artist_name": "Michelangelo"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "sculpture.get_details",
        "description": "Retrieve details of a sculpture based on the artist and the title of the sculpture.",
        "parameters": {
          "type": "dict",
          "properties": {
            "artist": {
              "type": "string",
              "description": "The artist who made the sculpture."
            },
            "title": {
              "type": "string",
              "description": "The title of the sculpture."
            },
            "detail": {
              "type": "string",
              "description": "The specific detail wanted about the sculpture. Default is 'general information'."
            }
          },
          "required": [
            "artist",
            "title"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_265",
    "question": [
      [
        {
          "role": "user",
          "content": "Find me sculptures near Chicago that were made in the 19th century.",
          "transcript": "Uh, can you check out 19th-century sculptures around Chicago for me? Thanks!",
          "audio_path": "BFCL_v3_simple/simple_265_cartesia.mp3",
          "asr_output_openai": "Can you check out 19th-century sculptures around Chicago for me? Thanks.",
          "asr_output_elevenlabs": "Uh, can you check out 19th century sculptures around Chicago for me? Thanks.",
          "asr_output_deepgram": "Can you check out nineteenth century sculptures around Chicago for me? Thanks.",
          "clarifications": {
            "location": "Chicago",
            "time_frame": "19th century"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "sculpture_search",
        "description": "Find sculptures based on location and a specific time frame.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city where the sculptures are located."
            },
            "time_frame": {
              "type": "string",
              "description": "The time frame during which the sculptures were made."
            },
            "material": {
              "type": "string",
              "description": "Optional material of the sculptures. Default is 'all'"
            }
          },
          "required": [
            "location",
            "time_frame"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_266",
    "question": [
      [
        {
          "role": "user",
          "content": "What is the value of the sculpture 'The Thinker' by Rodin?",
          "transcript": "Um, hey, can you tell me the value of Rodins sculpture, The Thinker, spelled R-O-D-I-N?",
          "audio_path": "BFCL_v3_simple/simple_266_elevenlabs.mp3",
          "asr_output_openai": "Um, hey, can you tell me the value of Rodin's sculpture \"The Thinker,\" spelled R-O-D-I-N?",
          "asr_output_elevenlabs": "Um, hey, can you tell me the value of Rodin sculpture The Thinker, spelled R-O-D-I-N?",
          "asr_output_deepgram": "Hey. Can you tell me the value of Rodin's sculpture, the thinker, spelled r o d I n?",
          "clarifications": {
            "sculpture_name": "The Thinker",
            "artist_name": "Rodin"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_sculpture_value",
        "description": "Retrieve the current market value of a particular sculpture by a specific artist.",
        "parameters": {
          "type": "dict",
          "properties": {
            "sculpture": {
              "type": "string",
              "description": "The name of the sculpture."
            },
            "artist": {
              "type": "string",
              "description": "The name of the artist who created the sculpture."
            }
          },
          "required": [
            "sculpture",
            "artist"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_267",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the top rated modern sculpture exhibition happening in New York in the upcoming month.",
          "transcript": "Uh, can you find top-rated modern sculpture exhibition in New York thats happenin next month, please?",
          "audio_path": "BFCL_v3_simple/simple_267_elevenlabs.mp3",
          "asr_output_openai": "Can you find top-rated modern sculpture exhibition in New York that's happening next month, please?",
          "asr_output_elevenlabs": "Uh, can you find top rated modern sculpture exhibition in New York that's happening next month please?",
          "asr_output_deepgram": "Can you find top rated modern sculpture exhibition in New York that's happening next month, please?",
          "clarifications": {
            "location": "New York",
            "art_form": "sculpture"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "find_exhibition",
        "description": "Locate the most popular exhibitions based on criteria like location, time, art form, and user ratings.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city and state where the exhibition is held, e.g., New York City, NY."
            },
            "art_form": {
              "type": "string",
              "description": "The form of art the exhibition is displaying e.g., sculpture."
            },
            "month": {
              "type": "string",
              "description": "The month of exhibition. Default value will return upcoming events if not specified."
            },
            "user_ratings": {
              "type": "string",
              "enum": [
                "low",
                "average",
                "high"
              ],
              "description": "Select exhibitions with user rating threshold. Default is 'low'"
            }
          },
          "required": [
            "location",
            "art_form"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_268",
    "question": [
      [
        {
          "role": "user",
          "content": "Find me the sculptures of Michelangelo with material Marble in Rome, Italy.",
          "transcript": "Hey, um, can you look up Michelangelos marble sculptures in Rome, Italy? Thanks.",
          "audio_path": "BFCL_v3_simple/simple_268_elevenlabs.mp3",
          "asr_output_openai": "Hey, um, can you look up Michelangelo's marble sculptures in Rome, Italy? Thanks.",
          "asr_output_elevenlabs": "Hey, um, can you look up Michelangelo's marble sculptures in Rome, Italy? Thanks.",
          "asr_output_deepgram": "Hey. Can you look up Michelangelo's marble sculptures in Rome, Italy? Thanks.",
          "clarifications": {
            "artist_name": "Michelangelo",
            "material": "Marble",
            "location": "Rome, Italy"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "sculpture_locator.find_by_artist",
        "description": "Locate the sculptures of specific artist by material and location",
        "parameters": {
          "type": "dict",
          "properties": {
            "artist": {
              "type": "string",
              "description": "Name of the Artist of the sculpture"
            },
            "material": {
              "type": "string",
              "description": "Material of the sculpture."
            },
            "location": {
              "type": "string",
              "description": "The location where you want to find the sculpture. Default is 'all' if not specified."
            }
          },
          "required": [
            "artist",
            "material"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_269",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the compound interest of an investment of $10,000 at an interest rate of 5% compounded yearly for 10 years.",
          "transcript": "Um, hey, can you work out compound interest for a ten thousand dollar investment at a five percent rate, compounded annually, over ten years?",
          "audio_path": "BFCL_v3_simple/simple_269_elevenlabs.mp3",
          "asr_output_openai": "Um, hey, can you work out compound interest for a $10,000 investment at a 5% rate, compounded annually, over 10 years?",
          "asr_output_elevenlabs": "Um, hey, can you work out compound interest for a ten thousand dollar investment at a five percent rate, compounded annually over 10 years?",
          "asr_output_deepgram": "Hey. Can you work out compound interest for a ten thousand dollar investment at a five percent rate compounded annually over ten years?",
          "clarifications": {
            "principle_amount": "$10,000",
            "interest_rate": "5%",
            "investment_duration": "10 years"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_compound_interest",
        "description": "Calculates the compound interest of an investment over a given time period.",
        "parameters": {
          "type": "dict",
          "properties": {
            "principle": {
              "type": "integer",
              "description": "The initial amount of the investment."
            },
            "interest_rate": {
              "type": "float",
              "description": "The yearly interest rate of the investment."
            },
            "time": {
              "type": "integer",
              "description": "The time, in years, the money is invested or borrowed for."
            },
            "compounds_per_year": {
              "type": "integer",
              "description": "The number of times the interest is compounded per year. Default is 1 (interest is compounded yearly)."
            }
          },
          "required": [
            "principle",
            "interest_rate",
            "time"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_270",
    "question": [
      [
        {
          "role": "user",
          "content": "Can you give me the height and width of Empire State building in feet?",
          "transcript": "Hey, uh, whats height and width of the Empire State Building in feet?",
          "audio_path": "BFCL_v3_simple/simple_270_elevenlabs.mp3",
          "asr_output_openai": "Hey, what's height and width of the Empire State Building in feet?",
          "asr_output_elevenlabs": "Hey, uh, what's height and width of the Empire State Building in feet?",
          "asr_output_deepgram": "Hey. What's height and width of the Empire State Building in feet?",
          "clarifications": {
            "building_name": "Empire State building",
            "unit": "feet"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "building.get_dimensions",
        "description": "Retrieve the dimensions of a specific building based on its name.",
        "parameters": {
          "type": "dict",
          "properties": {
            "building_name": {
              "type": "string",
              "description": "The name of the building."
            },
            "unit": {
              "type": "string",
              "description": "The unit in which you want the dimensions. Default is meter.",
              "enum": [
                "meter",
                "feet"
              ]
            }
          },
          "required": [
            "building_name",
            "unit"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_271",
    "question": [
      [
        {
          "role": "user",
          "content": "What is the structural dynamic analysis of the building with building Id B1004 for 2nd, 3rd and 4th floors?",
          "transcript": "Um, can you get me the structural dynamic analysis for, uh, building ID B one thousand four, specifically for the second, third, and fourth floors? Thanks.",
          "audio_path": "BFCL_v3_simple/simple_271_elevenlabs.mp3",
          "asr_output_openai": "Can you get me the structural dynamic analysis for Building IDB 1004, specifically for the second, third, and fourth floors? Thanks.",
          "asr_output_elevenlabs": "Um, can you get me the structural dynamic analysis for, uh, building ID B1004, specifically for the second, third and fourth floors? Thanks.",
          "asr_output_deepgram": "Can you get me the structural dynamic analysis for, building IDB one thousand four, specifically for the second, third, and fourth floors? Thanks.",
          "clarifications": {
            "building_id": "B1004",
            "floors": "2nd, 3rd and 4th"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "analyze_structure",
        "description": "Analyze a structure of a building based on its Id and floor numbers.",
        "parameters": {
          "type": "dict",
          "properties": {
            "building_id": {
              "type": "string",
              "description": "The unique identification number of the building."
            },
            "floors": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "Floor numbers to be analyzed."
            },
            "mode": {
              "type": "string",
              "description": "Mode of analysis, e.g. 'static' or 'dynamic'. Default is 'static'."
            }
          },
          "required": [
            "building_id",
            "floors"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_272",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the area and circumference of a circle with a radius of 5 units.",
          "transcript": "Um, hey, can you find the area and, uh, the edge length for a circle with a five-unit radius?",
          "audio_path": "BFCL_v3_simple/simple_272_elevenlabs.mp3",
          "asr_output_openai": "Um, hey, can you find the area and the edge length for a circle with a five-unit radius?",
          "asr_output_elevenlabs": "Um, hey, can you find the area and, uh, the edge length for a circle with a five-unit radius?",
          "asr_output_deepgram": "Hey. Can you find the area and, the edge length for a circle with a five unit radius?",
          "clarifications": {
            "circle_radius": "5"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_circle_dimensions",
        "description": "Calculate the area and circumference of a circle based on the radius.",
        "parameters": {
          "type": "dict",
          "properties": {
            "radius": {
              "type": "integer",
              "description": "The radius of the circle."
            }
          },
          "required": [
            "radius"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_273",
    "question": [
      [
        {
          "role": "user",
          "content": "Find out the open hours for the Louvre Museum in Paris.",
          "transcript": "Um, hey, can you check, uh, the opening hours for the Louvre Museum in Paris?",
          "audio_path": "BFCL_v3_simple/simple_273_elevenlabs.mp3",
          "asr_output_openai": "Um, hey, can you check the opening hours for the Louvre Museum in Paris?",
          "asr_output_elevenlabs": "Um, hey, can you check the opening hours for the Louvre Museum in Paris?",
          "asr_output_deepgram": "Hey. Can you check, the opening hours for the Louvre Museum in Paris?",
          "clarifications": {
            "museum_name": "Louvre Museum",
            "city_location": "Paris"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "museum.get_hours",
        "description": "Retrieve the open hours for a museum based on its name and location.",
        "parameters": {
          "type": "dict",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the museum."
            },
            "location": {
              "type": "string",
              "description": "The city where the museum is located."
            },
            "day": {
              "type": "string",
              "description": "Optional: Day of the week for specific open hours. Default 'Monday'."
            }
          },
          "required": [
            "name",
            "location"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_274",
    "question": [
      [
        {
          "role": "user",
          "content": "Find information about the opening hours of the Metropolitan Museum of Art.",
          "transcript": "Um, can you check Metropolitan Museum of Arts opening hours for me, please?",
          "audio_path": "BFCL_v3_simple/simple_274_elevenlabs.mp3",
          "asr_output_openai": "Can you check Metropolitan Museum of Art's opening hours for me please?",
          "asr_output_elevenlabs": "Um, can you check Metropolitan Museum of Art's opening hours for me, please?",
          "asr_output_deepgram": "Can you check Metropolitan Museum of Art's opening hours for me, please?",
          "clarifications": {
            "museum_name": "Metropolitan Museum of Art"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "museum_info",
        "description": "Retrieve information about the opening hours of a museum based on its name.",
        "parameters": {
          "type": "dict",
          "properties": {
            "museum_name": {
              "type": "string",
              "description": "The name of the museum."
            },
            "info_type": {
              "type": "string",
              "description": "The type of information needed about the museum.",
              "default": "opening_hours"
            }
          },
          "required": [
            "museum_name"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_275",
    "question": [
      [
        {
          "role": "user",
          "content": "Get the list of top 5 popular artworks at the Metropolitan Museum of Art. Please sort by popularity.",
          "transcript": "Uh, can you get me the top five popular artworks at the Metropolitan Museum of Art, like, sorted by popularity?",
          "audio_path": "BFCL_v3_simple/simple_275_elevenlabs.mp3",
          "asr_output_openai": "Can you get me the top five popular artworks at the Metropolitan Museum of Art, like sorted by popularity?",
          "asr_output_elevenlabs": "Uh, can you get me the top five popular artworks at the Metropolitan Museum of Art? Like sorted by popularity.",
          "asr_output_deepgram": "Can you get me the top five popular artworks at the Metropolitan Museum of Art, like sorted by popularity?",
          "clarifications": {
            "museum_name": "Metropolitan Museum of Art",
            "number_of_artworks": "5"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "metropolitan_museum.get_top_artworks",
        "description": "Fetches the list of popular artworks at the Metropolitan Museum of Art. Results can be sorted based on popularity.",
        "parameters": {
          "type": "dict",
          "properties": {
            "number": {
              "type": "integer",
              "description": "The number of artworks to fetch"
            },
            "sort_by": {
              "type": "string",
              "description": "The criteria to sort the results on. Default is 'popularity'.",
              "enum": [
                "popularity",
                "chronological",
                "alphabetical"
              ]
            }
          },
          "required": [
            "number"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_277",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the working hours and ticket price of The British Museum for this weekend, Jun.20,2023.",
          "transcript": "Hey, can you check the stuff about the working hours and ticket prices for The British Museum this weekend, June twentieth, twenty twenty-three?",
          "audio_path": "BFCL_v3_simple/simple_277_elevenlabs.mp3",
          "asr_output_openai": "Hey, can you check the stuff about the working hours and ticket prices for the British Museum this weekend, June 20, 2023?",
          "asr_output_elevenlabs": "Hey, can you check the stuff about the working hours and ticket prices for the British Museum this weekend, June 20th, 2023?",
          "asr_output_deepgram": "Hey. Can you check the stuff about the working hours and ticket prices for the British Museum this weekend, June twentieth twenty twenty three?",
          "clarifications": {
            "museum_name": "The British Museum",
            "specific_date": "Jun.20,2023"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "museum_info",
        "description": "Get information about a museum including its opening hours and ticket prices for a specific date range.",
        "parameters": {
          "type": "dict",
          "properties": {
            "museum": {
              "type": "string",
              "description": "The name of the museum."
            },
            "date": {
              "type": "string",
              "description": "The specific date for which information is needed, in the format of YYYY-MM-DD such as '2022-12-01'."
            },
            "information": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "opening_hours",
                  "ticket_price",
                  "address"
                ]
              },
              "description": "The type of information needed from the museum. This is optional and defaults to 'all' if not specified.",
              "default": "all"
            }
          },
          "required": [
            "museum",
            "date"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_278",
    "question": [
      [
        {
          "role": "user",
          "content": "Find me the average price and ratings of piano from Yamaha.",
          "transcript": "Um, could you please give me the average price and, uh, ratings for Yamaha pianos?",
          "audio_path": "BFCL_v3_simple/simple_278_elevenlabs.mp3",
          "asr_output_openai": "Could you please give me the average price and ratings for Yamaha pianos?",
          "asr_output_elevenlabs": "Um, could you please give me the average price and, uh, ratings for Yamaha pianos?",
          "asr_output_deepgram": "Could you please give me the average price and, ratings for Yamaha pianos?",
          "clarifications": {
            "instrument": "piano",
            "manufacturer": "Yamaha"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_instrument_details",
        "description": "Retrieve the average price and ratings of an instrument from a particular manufacturer.",
        "parameters": {
          "type": "dict",
          "properties": {
            "instrument": {
              "type": "string",
              "description": "The name of the instrument."
            },
            "manufacturer": {
              "type": "string",
              "description": "The manufacturer of the instrument."
            },
            "features": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "price",
                  "rating"
                ]
              },
              "description": "The features to retrieve about the instrument. Default is 'price'"
            }
          },
          "required": [
            "instrument",
            "manufacturer"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_279",
    "question": [
      [
        {
          "role": "user",
          "content": "What's the retail price of a Fender American Professional II Stratocaster in Rosewood Finish?",
          "transcript": "Hey, right, whats the retail price for a Fender American Professional II Stratocaster, thats S-T-R-A-T-O-C-A-S-T-E-R, Stratocaster, with a Rosewood finish?",
          "audio_path": "BFCL_v3_simple/simple_279_elevenlabs.mp3",
          "asr_output_openai": "Hey, right, what's the retail price for a Fender American Professional II Stratocaster (that's S-T-R-A-T-O-C-A-S-T-E-R) with a rosewood finish?",
          "asr_output_elevenlabs": "Hey, right. What's the retail price for a Fender American Professional II Stratocaster? That's S-T-R-A-T-O-C-A-S-T-E-R, Stratocaster with a rosewood finish.",
          "asr_output_deepgram": "Hey. Right. What's the retail price for a Fender American Professional two Stratocaster? That's s t r a t o c a s t e r Stratocaster with a rosewood finish.",
          "clarifications": {
            "brand": "Fender",
            "model": "American Professional II Stratocaster",
            "finish": "Rosewood Finish"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "instrument_price.get",
        "description": "Retrieve the current retail price of a specific musical instrument.",
        "parameters": {
          "type": "dict",
          "properties": {
            "brand": {
              "type": "string",
              "description": "The brand of the instrument."
            },
            "model": {
              "type": "string",
              "description": "The specific model of the instrument."
            },
            "finish": {
              "type": "string",
              "description": "The color or type of finish on the instrument."
            }
          },
          "required": [
            "brand",
            "model",
            "finish"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_280",
    "question": [
      [
        {
          "role": "user",
          "content": "Find an acoustic instrument within my budget of $1000.",
          "transcript": "Um, can you get, uh, an acoustic instrument for me, keepin it under one thousand dollars?",
          "audio_path": "BFCL_v3_simple/simple_280_elevenlabs.mp3",
          "asr_output_openai": "Can you get an acoustic instrument for me, keeping it under $1000?",
          "asr_output_elevenlabs": "Um, can you get a-an acoustic instrument for me? Keepin' it under $1,000.",
          "asr_output_deepgram": "Can you get, an acoustic instrument for me keeping it under one thousand dollars?",
          "clarifications": {
            "budget": "$1000",
            "instrument_type": "acoustic instrument"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "find_instrument",
        "description": "Search for a musical instrument within specified budget and of specific type.",
        "parameters": {
          "type": "dict",
          "properties": {
            "budget": {
              "type": "integer",
              "description": "Your budget for the instrument."
            },
            "type": {
              "type": "string",
              "description": "Type of the instrument"
            },
            "make": {
              "type": "string",
              "description": "Maker of the instrument. Default to not use if not specified."
            }
          },
          "required": [
            "budget",
            "type"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_281",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the details about the musical instrument 'Violin' from 'Stradivarius' maker, made in the year 1721.",
          "transcript": "Can you, um, gimme details on one-seven-two-one Stradivarius violin, okay?",
          "audio_path": "BFCL_v3_simple/simple_281_elevenlabs.mp3",
          "asr_output_openai": "Can you give me details on 1721 Stradivarius violin, okay?",
          "asr_output_elevenlabs": "Can you, um, give me details on 1721 Stradivarius violin, okay?",
          "asr_output_deepgram": "Can you, give me details on one seven two one Stradivarius violin? Okay?",
          "clarifications": {
            "instrument_name": "Violin",
            "maker_name": "Stradivarius",
            "manufacturing_year": "1721"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_instrument_info",
        "description": "Retrieve the details about a specific musical instrument based on its name, maker, and manufacturing year.",
        "parameters": {
          "type": "dict",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the instrument."
            },
            "maker": {
              "type": "string",
              "description": "The name of the maker who created the instrument."
            },
            "year": {
              "type": "integer",
              "description": "The year the instrument was made."
            }
          },
          "required": [
            "name",
            "maker",
            "year"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_282",
    "question": [
      [
        {
          "role": "user",
          "content": "Find a Yamaha flute with the specifications of open hole, C foot, and silver headjoint available for sale.",
          "transcript": "Um, can you get Y-A-M-A-H-A flute with an open hole, C foot, and uh, silver headjoint thats for sale?",
          "audio_path": "BFCL_v3_simple/simple_282_elevenlabs.mp3",
          "asr_output_openai": "Can you get YAMAHA flute with an open hole, C foot, and a silver head joint that's for sale?",
          "asr_output_elevenlabs": "Um, can you get Y-A-M-A-H-A flute with an open hole, C foot and a silver headjoint that's for sale?",
          "asr_output_deepgram": "Can you get y a m a h a flute with an open hole, c foot, and a silver head joint that's for sale?",
          "clarifications": {
            "brand": "Yamaha",
            "specifications": "open hole, C foot, silver headjoint"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "find_flute",
        "description": "Locate a flute for sale based on specific requirements.",
        "parameters": {
          "type": "dict",
          "properties": {
            "brand": {
              "type": "string",
              "description": "The brand of the flute. Example, 'Yamaha'"
            },
            "specs": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "open hole",
                  "C foot",
                  "silver headjoint"
                ]
              },
              "description": "The specifications of the flute desired."
            }
          },
          "required": [
            "brand",
            "specs"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_283",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the price of a used Gibson Les Paul guitar in excellent condition in the Chicago area.",
          "transcript": "Hey, can you, um, check price of a used Gibson Les Paul guitar in excellent condition round Chicago?",
          "audio_path": "BFCL_v3_simple/simple_283_elevenlabs.mp3",
          "asr_output_openai": "Hey, can you, um, check price of a used Gibson Les Paul guitar in excellent condition round Chicago?",
          "asr_output_elevenlabs": "Hey, can you um check price of a used Gibson Les Paul guitar in excellent condition around Chicago?",
          "asr_output_deepgram": "Hey. Can you, check price of a used Gibson Les Paul guitar in excellent condition around Chicago?",
          "clarifications": {
            "guitar_model": "Gibson Les Paul",
            "guitar_condition": "excellent",
            "location": "Chicago"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "guitar_price.find",
        "description": "Retrieve the price of a specific used guitar model based on its condition and location.",
        "parameters": {
          "type": "dict",
          "properties": {
            "model": {
              "type": "string",
              "description": "The model of the guitar."
            },
            "condition": {
              "type": "string",
              "enum": [
                "Poor",
                "Good",
                "Excellent"
              ],
              "description": "The condition of the guitar."
            },
            "location": {
              "type": "string",
              "description": "The location where the guitar is being sold."
            }
          },
          "required": [
            "model",
            "condition",
            "location"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_284",
    "question": [
      [
        {
          "role": "user",
          "content": "Get information about the pop concerts in New York for next month.",
          "transcript": "Can you, uh, get details bout pop concerts happenin in New York next month, okay?",
          "audio_path": "BFCL_v3_simple/simple_284_elevenlabs.mp3",
          "asr_output_openai": "Can you get details about pop concerts happening in New York next month, OK?",
          "asr_output_elevenlabs": "Can you, uh, get details 'bout pop concerts happenin' in New York next month, okay?",
          "asr_output_deepgram": "Can you, get details about pop concerts happening in New York next month? Okay?",
          "clarifications": {
            "location": "New York",
            "date": "next month"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "concert_info.get",
        "description": "Retrieve information about concerts based on specific genre, location and date.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city where the concert will take place."
            },
            "date": {
              "type": "string",
              "description": "Time frame to get the concert for."
            },
            "genre": {
              "type": "string",
              "description": "Genre of the concert.",
              "enum": [
                "Pop",
                "Rock",
                "Country",
                "Classical",
                "Electronic",
                "Hip-Hop"
              ]
            }
          },
          "required": [
            "location",
            "date",
            "genre"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_285",
    "question": [
      [
        {
          "role": "user",
          "content": "Find me a Rock concert in Chicago with ticket availability under $100.",
          "transcript": "Uh, any Rock concerts in Chicago with tickets under, like, hundred bucks, right?",
          "audio_path": "BFCL_v3_simple/simple_285_elevenlabs.mp3",
          "asr_output_openai": "Any rock concerts in Chicago with tickets under like hundred bucks, right?",
          "asr_output_elevenlabs": "Uh, any rock concerts in Chicago with tickets under like hundred bucks right?",
          "asr_output_deepgram": "Any rock concerts in Chicago with tickets under, like, hundred bucks. Right?",
          "clarifications": {
            "location": "Chicago",
            "price": "100",
            "genre": "Rock"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "find_concert",
        "description": "Locate a concert in a specified location within a certain budget.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city where you are looking for a concert. In the format City, State."
            },
            "price": {
              "type": "integer",
              "description": "Maximum ticket price."
            },
            "genre": {
              "type": "string",
              "description": "Music genre of the concert. Default to 'Jazz'. ",
              "enum": [
                "Rock",
                "Pop",
                "Country",
                "Jazz",
                "Classical"
              ]
            }
          },
          "required": [
            "location",
            "price"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_286",
    "question": [
      [
        {
          "role": "user",
          "content": "Get concert details for the artist Beyonce performing in San Diego next month (April 2022).",
          "transcript": "Um, hey, can you get, uh, concert details for Beyonce in San Diego next month, April twenty twenty-two? Thanks.",
          "audio_path": "BFCL_v3_simple/simple_286_elevenlabs.mp3",
          "asr_output_openai": "Hey, can you get concert details for Beyonc\u00e9 in San Diego next month, April 2022? Thanks.",
          "asr_output_elevenlabs": "Um, hey, can you get, uh, concert details for Beyonc\u00e9 in San Diego next month, April 2022? Thanks.",
          "asr_output_deepgram": "Hey. Can you get, concert details for Beyonce in San Diego next month, April twenty twenty two? Thanks.",
          "clarifications": {
            "artist_name": "Beyonce",
            "concert_location": "San Diego",
            "concert_date": "April 2022"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "concert.get_details",
        "description": "Fetch the details for a particular concert based on the artist and location.",
        "parameters": {
          "type": "dict",
          "properties": {
            "artist": {
              "type": "string",
              "description": "Name of the artist/band who's performing."
            },
            "location": {
              "type": "string",
              "description": "City where the concert is taking place."
            },
            "date": {
              "type": "string",
              "description": "Date of the concert in 'mm-yyyy' format. Default is the current month if not specified."
            }
          },
          "required": [
            "artist",
            "location"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_287",
    "question": [
      [
        {
          "role": "user",
          "content": "Find me a classical concert this weekend in Los Angeles with cheap tickets.",
          "transcript": "Hey, um, can you find classical concert in Los Angeles this weekend with, uh, affordable tickets, please?",
          "audio_path": "BFCL_v3_simple/simple_287_elevenlabs.mp3",
          "asr_output_openai": "Hey, um, can you find classical concert in Los Angeles this weekend with, uh, affordable tickets please?",
          "asr_output_elevenlabs": "Hey, um, can you find classical concert in Los Angeles this weekend with, uh, affordable tickets please?",
          "asr_output_deepgram": "Hey, can you find classical concert in Los Angeles this weekend with, affordable tickets, please?",
          "clarifications": {
            "genre": "classical",
            "location": "Los Angeles",
            "date": "this weekend"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "concert.search",
        "description": "Locate a concert based on specific criteria like genre, location, and date.",
        "parameters": {
          "type": "dict",
          "properties": {
            "genre": {
              "type": "string",
              "description": "Genre of the concert."
            },
            "location": {
              "type": "string",
              "description": "City of the concert."
            },
            "date": {
              "type": "string",
              "description": "Date of the concert, e.g. this weekend, today, tomorrow.",
              "enum": [
                "this weekend",
                "next weekend",
                "this month",
                "next month",
                "today",
                "tomorrow",
                "the day after"
              ]
            },
            "price_range": {
              "type": "string",
              "enum": [
                "free",
                "cheap",
                "moderate",
                "expensive"
              ],
              "description": "Expected price range of the concert tickets. Default is 'free'."
            }
          },
          "required": [
            "genre",
            "location",
            "date"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_288",
    "question": [
      [
        {
          "role": "user",
          "content": "Get me two tickets for next Eminem concert in New York City.",
          "transcript": "Can you snag me two tickets for next Eminem concert in New York City?",
          "audio_path": "BFCL_v3_simple/simple_288_elevenlabs.mp3",
          "asr_output_openai": "Can you snag me two tickets for next Eminem concert in New York City?",
          "asr_output_elevenlabs": "Can you snag me two tickets for next Eminem concert in New York City?",
          "asr_output_deepgram": "Can you snag me two tickets for next Eminem concert in New York City?",
          "clarifications": {
            "artist_name": "Eminem",
            "city": "New York City",
            "number_of_tickets": "two"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "concert_booking.book_ticket",
        "description": "Book concert tickets for a specific artist in a specified city.",
        "parameters": {
          "type": "dict",
          "properties": {
            "artist": {
              "type": "string",
              "description": "The artist you want to book tickets for."
            },
            "city": {
              "type": "string",
              "description": "The city where the concert is."
            },
            "num_tickets": {
              "type": "integer",
              "description": "Number of tickets required. Default is 1."
            }
          },
          "required": [
            "artist",
            "city"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_289",
    "question": [
      [
        {
          "role": "user",
          "content": "Find concerts near me in Seattle that plays jazz music.",
          "transcript": "Can you, um, get near me jazz concerts in Seattle?",
          "audio_path": "BFCL_v3_simple/simple_289_elevenlabs.mp3",
          "asr_output_openai": "Can you get near me jazz concerts in Seattle?",
          "asr_output_elevenlabs": "Can you, uhm, get near me jazz concerts in Seattle?",
          "asr_output_deepgram": "Can you, get near me jazz concerts in Seattle?",
          "clarifications": {
            "location": "Seattle",
            "music_genre": "jazz"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "concert.find_nearby",
        "description": "Locate nearby concerts based on specific criteria like genre.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city and state, e.g. Seattle, WA"
            },
            "genre": {
              "type": "string",
              "description": "Genre of music to be played at the concert."
            }
          },
          "required": [
            "location",
            "genre"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_290",
    "question": [
      [
        {
          "role": "user",
          "content": "What's the timing and location for The Weeknd's concert happening in December?",
          "transcript": "Um, dyou know when and where, uh, Weeknds concert is in December?",
          "audio_path": "BFCL_v3_simple/simple_290_elevenlabs.mp3",
          "asr_output_openai": "Do you know when and where our weekend's concert is in December?",
          "asr_output_elevenlabs": "Do you know when and where Weekend's concert is in December?",
          "asr_output_deepgram": "Do you know when and where, weekend's concert is in December?",
          "clarifications": {
            "artist_name": "The Weeknd",
            "concert_month": "December"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "concert.find_details",
        "description": "Finds details of a concert event.",
        "parameters": {
          "type": "dict",
          "properties": {
            "artist": {
              "type": "string",
              "description": "Name of the artist performing."
            },
            "month": {
              "type": "string",
              "description": "Month in which the concert is happening."
            },
            "year": {
              "type": "integer",
              "description": "Year of the concert.",
              "default": 2022
            }
          },
          "required": [
            "artist",
            "month"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_291",
    "question": [
      [
        {
          "role": "user",
          "content": "Generate a melody in C major scale, starting with the note C4, 16 measures long, at 120 beats per minute.",
          "transcript": "Uh, make a melody in C major, starting on C four, thats sixteen measures long at one twenty BPM.",
          "audio_path": "BFCL_v3_simple/simple_291_elevenlabs.mp3",
          "asr_output_openai": "Make a melody in C major, starting on C4, that's 16 measures long at 120 BPM.",
          "asr_output_elevenlabs": "Make a melody in C major, starting on C4 that's 16 measures long at 120 bpm.",
          "asr_output_deepgram": "Make a melody in C major starting on c four. That's sixteen measures long at one twenty BPM.",
          "clarifications": {
            "key": "C major",
            "start_note": "C4",
            "length": "16",
            "tempo": "120"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "music_generator.generate_melody",
        "description": "Generate a melody based on certain musical parameters.",
        "parameters": {
          "type": "dict",
          "properties": {
            "key": {
              "type": "string",
              "description": "The key of the melody. E.g., 'C' for C major."
            },
            "start_note": {
              "type": "string",
              "description": "The first note of the melody, specified in scientific pitch notation. E.g., 'C4'."
            },
            "length": {
              "type": "integer",
              "description": "The number of measures in the melody."
            },
            "tempo": {
              "type": "integer",
              "description": "The tempo of the melody, in beats per minute. Optional parameter. If not specified, defaults to 120."
            }
          },
          "required": [
            "key",
            "start_note",
            "length"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_292",
    "question": [
      [
        {
          "role": "user",
          "content": "Compose a simple piano melody with a progression of C, F and G for 4 measures.",
          "transcript": "Hey, um, can you make a simple piano melody using the chord progression C, F, and G over four measures?",
          "audio_path": "BFCL_v3_simple/simple_292_elevenlabs.mp3",
          "asr_output_openai": "Hey, can you make a simple piano melody using the chord progression C, F, and G over four measures?",
          "asr_output_elevenlabs": "Hey, um, can you make a simple piano melody using the chord progression C, F and G over four measures?",
          "asr_output_deepgram": "Hey. Can you make a simple piano melody using the chord progression C, F, and G over four measures?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "compose_melody",
        "description": "Compose a melody using the specified chord progression for a certain number of measures on specified instrument.",
        "parameters": {
          "type": "dict",
          "properties": {
            "progression": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The progression of chords."
            },
            "measures": {
              "type": "integer",
              "description": "The number of measures of the melody."
            },
            "instrument": {
              "type": "string",
              "description": "The instrument for the composition. Default is 'Piano'."
            }
          },
          "required": [
            "progression",
            "measures"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_293",
    "question": [
      [
        {
          "role": "user",
          "content": "Create a mix track using notes of C major scale and duration of each note being quarter of a second with a duration of 3 minutes.",
          "transcript": "Uh, can you make a mix track with notes from the C major scale, each lasting a quarter second, for a total of one hundred eighty seconds?",
          "audio_path": "BFCL_v3_simple/simple_293_elevenlabs.mp3",
          "asr_output_openai": "Can you make a mixtrack with notes from the C major scale, each lasting a quarter second, for a total of 180 seconds?",
          "asr_output_elevenlabs": "Uh, can you make a mix track with notes from the C major scale, each lasting a quarter second for a total of 180 seconds?",
          "asr_output_deepgram": "Can you make a mix track with notes from the C major scale, each lasting a quarter second for a total of one hundred eighty seconds?",
          "clarifications": {
            "musical_scale": "C major",
            "note_duration": "quarter of a second",
            "track_length": "3 minutes"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "music_composer.create_mix",
        "description": "Create a mix of a song based on a particular music scale and duration",
        "parameters": {
          "type": "dict",
          "properties": {
            "scale": {
              "type": "string",
              "description": "The musical scale to be used. E.g: C Major, A Minor, etc."
            },
            "note_duration": {
              "type": "string",
              "description": "Duration of each note. Options: 'whole', 'half', 'quarter', 'eighth', 'sixteenth'.",
              "enum": [
                "whole",
                "half",
                "quarter",
                "eighth",
                "sixteenth"
              ]
            },
            "track_length": {
              "type": "integer",
              "description": "Length of the mix track in seconds."
            }
          },
          "required": [
            "scale",
            "note_duration",
            "track_length"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_294",
    "question": [
      [
        {
          "role": "user",
          "content": "Generate a major chord progression in C key with four chords.",
          "transcript": "Uh, make a major chord progression in C, using, uh, four chords. Right.",
          "audio_path": "BFCL_v3_simple/simple_294_elevenlabs.mp3",
          "asr_output_openai": "Make a major chord progression in C using four chords.",
          "asr_output_elevenlabs": "Make a major chord progression in C using four chords. Right.",
          "asr_output_deepgram": "Make a major chord progression in C using, four chords. Right.",
          "clarifications": {
            "key": "C",
            "number_of_chords": "four"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "music_generation.create_chord_progression",
        "description": "Create a chord progression in a specific key and number of chords.",
        "parameters": {
          "type": "dict",
          "properties": {
            "key": {
              "type": "string",
              "description": "The key for the chord progression."
            },
            "chords": {
              "type": "integer",
              "description": "Number of chords in the progression."
            },
            "progression_type": {
              "type": "string",
              "description": "The type of the chord progression. Optional parameter. Default is 'major'."
            }
          },
          "required": [
            "key",
            "chords"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_295",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the lyrics to the song 'Bohemian Rhapsody' by Queen.",
          "transcript": "Lemme see... oh, can you get me the lyrics to Bohemian Rhapsody by Queen?",
          "audio_path": "BFCL_v3_simple/simple_295_elevenlabs.mp3",
          "asr_output_openai": "Let me see... Oh, can you get me the lyrics to Bohemian Rhapsody by Queen?",
          "asr_output_elevenlabs": "Let me see. Oh, can you get me the lyrics to Bohemian Rhapsody by Queen?",
          "asr_output_deepgram": "Let me see. Oh, can you get me the lyrics to Bohemian Rhapsody by Queen?",
          "clarifications": {
            "song_title": "Bohemian Rhapsody",
            "artist_name": "Queen"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_song_lyrics",
        "description": "Retrieve the lyrics of a song based on the artist's name and song title.",
        "parameters": {
          "type": "dict",
          "properties": {
            "song_title": {
              "type": "string",
              "description": "The title of the song."
            },
            "artist_name": {
              "type": "string",
              "description": "The name of the artist who performed the song."
            },
            "lang": {
              "type": "string",
              "description": "The language of the lyrics. Default is English.",
              "enum": [
                "English",
                "French",
                "Spanish",
                "German",
                "Italian"
              ]
            }
          },
          "required": [
            "song_title",
            "artist_name"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_296",
    "question": [
      [
        {
          "role": "user",
          "content": "Generate a major C scale progression with tempo 80 BPM and duration 4 beats.",
          "transcript": "Um, can you create a C major scale progression at eighty beats per minute for, uh, four beats? Thanks.",
          "audio_path": "BFCL_v3_simple/simple_296_elevenlabs.mp3",
          "asr_output_openai": "Um, can you create a C major scale progression at 80 beats per minute for four beats? Thanks!",
          "asr_output_elevenlabs": "Um, can you create a C major scale progression at 80 beats per minute for, uh, four beats? Thanks.",
          "asr_output_deepgram": "Can you create a C major scale progression at eighty beats per minute for, four beats? Thanks.",
          "clarifications": {
            "key": "C",
            "tempo": "80 BPM",
            "duration": "4 beats"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "music_generator.generate_scale_progression",
        "description": "Generate a music scale progression in a specific key with a given tempo and duration.",
        "parameters": {
          "type": "dict",
          "properties": {
            "key": {
              "type": "string",
              "description": "The key in which to generate the scale progression."
            },
            "tempo": {
              "type": "integer",
              "description": "The tempo of the scale progression in BPM."
            },
            "duration": {
              "type": "integer",
              "description": "The duration of each note in beats."
            },
            "scale_type": {
              "type": "string",
              "default": "major",
              "description": "The type of scale to generate. Defaults to 'major'."
            }
          },
          "required": [
            "key",
            "tempo",
            "duration"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_297",
    "question": [
      [
        {
          "role": "user",
          "content": "music.theory.chordProgression(progression=['I', 'V', 'vi', 'IV'])",
          "transcript": "Hey, uh, generate a chord progression using the sequence I, V, vi, IV.",
          "audio_path": "BFCL_v3_simple/simple_297_elevenlabs.mp3",
          "asr_output_openai": "Hey, generate a chord progression using the sequence I, V, vi, IV.",
          "asr_output_elevenlabs": "Hey, uh, generate a chord progression using the sequence I, V, VI, IV.",
          "asr_output_deepgram": "Hey. Generate a chord progression using the sequence I V VI IV.",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "music.theory.chordProgression",
        "description": "Identifies a potential key signature for the given chord progression.",
        "parameters": {
          "type": "dict",
          "properties": {
            "progression": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The chord progression in Roman numerals. Eg: ['I', 'V', 'vi', 'IV']."
            },
            "returnAllPossibleKeys": {
              "type": "boolean",
              "description": "Flag indicating if the function should return all possible key signatures that fit the chord progression. If false, the function will return the first valid key it finds. Default is false."
            },
            "assumeMajor": {
              "type": "boolean",
              "description": "Assumption if the key signature is Major. If true, the function will assume the key signature to be major and otherwise minor. Default is true."
            }
          },
          "required": [
            "progression"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_298",
    "question": [
      [
        {
          "role": "user",
          "content": "What key signature does C# major have?",
          "transcript": "Hey, um, you know, what key is C-sharp major?",
          "audio_path": "BFCL_v3_simple/simple_298_elevenlabs.mp3",
          "asr_output_openai": "Hey um, you know what key is C# major?",
          "asr_output_elevenlabs": "Hey, um, you know what key is C sharp major?",
          "asr_output_deepgram": "Hey, you know, what key is C sharp major?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "music_theory.key_signature",
        "description": "Return the key signature of a major or minor scale.",
        "parameters": {
          "type": "dict",
          "properties": {
            "key": {
              "type": "string",
              "description": "The root of the scale, e.g., 'C', 'F#', 'Ab'."
            },
            "scale_type": {
              "type": "string",
              "enum": [
                "major",
                "minor"
              ],
              "description": "Type of the scale, either 'major' or 'minor'. Default is 'major'."
            }
          },
          "required": [
            "key"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_299",
    "question": [
      [
        {
          "role": "user",
          "content": "What is the musical scale associated with C sharp major?",
          "transcript": "Hey, um, whats musical scale for C-sharp major, right?",
          "audio_path": "BFCL_v3_simple/simple_299_elevenlabs.mp3",
          "asr_output_openai": "Hey, um, what's musical scale for C# major, right?",
          "asr_output_elevenlabs": "Hey, um, what's musical scale for C sharp major, right?",
          "asr_output_deepgram": "Hey. What's musical scale for C sharp major. Right?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "musical_scale",
        "description": "Get the musical scale of a specific key in music theory.",
        "parameters": {
          "type": "dict",
          "properties": {
            "key": {
              "type": "string",
              "description": "The musical key for which the scale will be found."
            },
            "scale_type": {
              "type": "string",
              "default": "major",
              "description": "The type of musical scale."
            }
          },
          "required": [
            "key"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_300",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the duration between two notes of 440Hz and 880Hz frequency based on harmonic rhythm.",
          "transcript": "Uh, find the time between notes at four forty Hz and eight eighty Hz using, um, harmonic rhythm, okay.",
          "audio_path": "BFCL_v3_simple/simple_300_elevenlabs.mp3",
          "asr_output_openai": "Find the time between notes at 440Hz and 880Hz using harmonic rhythm, okay?",
          "asr_output_elevenlabs": "Uh, find the time between notes at 440 hertz and 880 hertz using, um, harmonic rhythm. Okay.",
          "asr_output_deepgram": "Find the time between notes at four forty Hertz and eight eighty Hertz using, harmonic rhythm. Okay.",
          "clarifications": {
            "first_note_frequency": "440Hz",
            "second_note_frequency": "880Hz"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "music.calculate_note_duration",
        "description": "Calculate the duration between two notes based on their frequencies and harmonic rhythm.",
        "parameters": {
          "type": "dict",
          "properties": {
            "first_note_frequency": {
              "type": "integer",
              "description": "The frequency of the first note in Hz."
            },
            "second_note_frequency": {
              "type": "integer",
              "description": "The frequency of the second note in Hz."
            },
            "tempo": {
              "type": "integer",
              "description": "The tempo of the music in beats per minute. Defaults to 120 beats per minute."
            }
          },
          "required": [
            "first_note_frequency",
            "second_note_frequency"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_301",
    "question": [
      [
        {
          "role": "user",
          "content": "What is the third major chord in C major scale?",
          "transcript": "Um, can tell me the third major chord in the C major scale?",
          "audio_path": "BFCL_v3_simple/simple_301_elevenlabs.mp3",
          "asr_output_openai": "Um, can tell me the third major chord in the C major scale?",
          "asr_output_elevenlabs": "Um, can you tell me the third major chord in the C major scale?",
          "asr_output_deepgram": "Can tell me the third major chord in the C major scale?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "get_third_chord",
        "description": "Calculate the third major chord in a given key.",
        "parameters": {
          "type": "dict",
          "properties": {
            "key": {
              "type": "string",
              "description": "The key of the scale."
            },
            "type": {
              "type": "string",
              "description": "Type of the scale, either major or minor. Default is 'major'."
            }
          },
          "required": [
            "key"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_302",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the batting average for a baseball player who has 180 hits and 600 at-bats. Round to 3 decimals.",
          "transcript": "Uh, hey, can you look up the batting average for a player with one hundred eighty hits out of six hundred at-bats and, um, round it to three decimal places?",
          "audio_path": "BFCL_v3_simple/simple_302_elevenlabs.mp3",
          "asr_output_openai": "Hey, can you look up the batting average for a player with 180 hits out of 600 at-bats and round it to three decimal places?",
          "asr_output_elevenlabs": "Uh, hey, can you look up the batting average for a player with 180 hits out of 600 at-bats and, um, round it to three decimal places?",
          "asr_output_deepgram": "Hey. Can you look up the batting average for a player with one hundred eighty hits out of six hundred at bats and, round it to three decimal places?",
          "clarifications": {
            "number_of_hits": "180",
            "number_of_at_bats": "600",
            "decimal_places": "3"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_batting_average",
        "description": "Calculate the batting average for a baseball player based on their number of hits and at-bats.",
        "parameters": {
          "type": "dict",
          "properties": {
            "hits": {
              "type": "integer",
              "description": "The number of hits."
            },
            "at_bats": {
              "type": "integer",
              "description": "The number of at-bats."
            },
            "decimal_places": {
              "type": "integer",
              "description": "The number of decimal places to return in the batting average. Default is 3."
            }
          },
          "required": [
            "hits",
            "at_bats"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_303",
    "question": [
      [
        {
          "role": "user",
          "content": "Get the player stats of Cristiano Ronaldo in the 2019-2020 season",
          "transcript": "Uh, can you get Cristiano Ronaldos player stats for the twenty-nineteen to twenty-twenty season?",
          "audio_path": "BFCL_v3_simple/simple_303_elevenlabs.mp3",
          "asr_output_openai": "Can you get Cristiano Ronaldo's player stats for the 2019-2020 season?",
          "asr_output_elevenlabs": "Uh, can you get Cristiano Ronaldo's player stats for the 2019 to 2020 season?",
          "asr_output_deepgram": "Can you get Cristiano Ronaldo's player stats for the twenty nineteen to twenty twenty season?",
          "clarifications": {
            "player_name": "Cristiano Ronaldo",
            "season": "2019-2020"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "soccer_stat.get_player_stats",
        "description": "Retrieve soccer player statistics for a given season.",
        "parameters": {
          "type": "dict",
          "properties": {
            "player_name": {
              "type": "string",
              "description": "Name of the player."
            },
            "season": {
              "type": "string",
              "description": "Soccer season, usually specified by two years."
            },
            "league": {
              "type": "string",
              "description": "Optional - the soccer league, defaults to all leagues if not specified."
            }
          },
          "required": [
            "player_name",
            "season"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_304",
    "question": [
      [
        {
          "role": "user",
          "content": "Get point and rebound stats for player 'LeBron James' from last basketball game",
          "transcript": "Uh, get the points and rebounds of LeBron James, thats L-E-B-R-O-N, from the latest basketball game.",
          "audio_path": "BFCL_v3_simple/simple_304_elevenlabs.mp3",
          "asr_output_openai": "Get the points and rebounds of LeBron James, that's L-E-B-R-O-N, from the latest basketball game.",
          "asr_output_elevenlabs": "Uh, get the points and rebounds of LeBron James, that's L-E-B-R-O-N, from the latest basketball game.",
          "asr_output_deepgram": "Get the points and rebounds of Lebron James, that's l e b r o n, from the latest basketball game.",
          "clarifications": {
            "player_name": "LeBron James"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "player_stats.getLastGame",
        "description": "Get last game statistics for a specific player in basketball",
        "parameters": {
          "type": "dict",
          "properties": {
            "player_name": {
              "type": "string",
              "description": "The name of the basketball player."
            },
            "team": {
              "type": "string",
              "description": "The team that player currently plays for."
            },
            "metrics": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Points",
                  "Rebounds",
                  "Assists",
                  "Blocks"
                ]
              },
              "description": "Specific metrics to retrieve. If no value is specified, all available metrics will be returned by default."
            }
          },
          "required": [
            "player_name",
            "team"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_305",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the overall goal and assist of soccer player Messi in La Liga 2020-2021 season",
          "transcript": "Hey, could you figure out Messis total goals and assists in La Liga for the twenty-twenty to twenty-twenty-one season, please?",
          "audio_path": "BFCL_v3_simple/simple_305_elevenlabs.mp3",
          "asr_output_openai": "Hey, could you figure out Messi's total goals and assists in La Liga for the 2020-2021 season please?",
          "asr_output_elevenlabs": "Hey, could you figure out Messi's total goals and assists in LaLiga for the 2020 to 2021 season, please?",
          "asr_output_deepgram": "Hey. Could you figure out Messi's total goals and assists in La Liga for the twenty twenty to twenty twenty one season, please?",
          "clarifications": {
            "player_name": "Messi",
            "tournament": "La Liga",
            "season": "2020-2021"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "sports_stats.get_performance",
        "description": "Compute the performance score of a soccer player given his game stats for a specific tournament in a season.",
        "parameters": {
          "type": "dict",
          "properties": {
            "player_name": {
              "type": "string",
              "description": "Name of the player."
            },
            "tournament": {
              "type": "string",
              "description": "Name of the soccer tournament."
            },
            "season": {
              "type": "string",
              "description": "Specific season in format 'YYYY-YYYY'."
            },
            "performance_indicator": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Goals Scored",
                  "Assists Made",
                  "Saves Made",
                  "Cards Received"
                ]
              },
              "description": "Array of performance indicators. Use as much as possible. Default to use all if not specified."
            }
          },
          "required": [
            "player_name",
            "tournament",
            "season"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_306",
    "question": [
      [
        {
          "role": "user",
          "content": "Find average batting score of a cricketer, Virat Kohli for past 10 matches",
          "transcript": "Um, whats the average batting score for, uh, Virat Kohli, thats V-I-R-A-T K-O-H-L-I, Virat Kohli over the last ten matches?",
          "audio_path": "BFCL_v3_simple/simple_306_elevenlabs.mp3",
          "asr_output_openai": "Um, what's the average batting score for, uh, Virat Kohli, that's V-I-R-A-T K-O-H-L-I, Virat Kohli over the last ten matches?",
          "asr_output_elevenlabs": "Um, what's the average batting score for, uh, Virat Kohli, that's V-I-R-A-T K-O-H-L-I, Virat Kohli over the last 10 matches?",
          "asr_output_deepgram": "What's the average batting score for, Virat Kohli? That's v I r a t k o h l I, Virat Kohli over the last ten matches.",
          "clarifications": {
            "player_name": "Virat Kohli",
            "matches": "10"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "average_batting_score",
        "description": "Get the average batting score of a cricketer for specified past matches.",
        "parameters": {
          "type": "dict",
          "properties": {
            "player_name": {
              "type": "string",
              "description": "Name of the cricket player."
            },
            "matches": {
              "type": "integer",
              "description": "Number of past matches to consider for average calculation."
            },
            "match_format": {
              "type": "string",
              "description": "Format of the cricket matches considered (e.g., 'T20', 'ODI', 'Test'). Default is 'T20'."
            }
          },
          "required": [
            "player_name",
            "matches"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_307",
    "question": [
      [
        {
          "role": "user",
          "content": "Who won the basketball game between Lakers and Clippers on Jan 28, 2021?",
          "transcript": "Hey, um, can you say who won the basketball game between the Lakers and the Clippers on January twenty-eighth, twenty-twenty-one?",
          "audio_path": "BFCL_v3_simple/simple_307_elevenlabs.mp3",
          "asr_output_openai": "Hey, can you say who won the basketball game between the Lakers and the Clippers on January 28th, 2021?",
          "asr_output_elevenlabs": "Hey, um, can you say who won the basketball game between the Lakers and the Clippers on January 28th, 2021?",
          "asr_output_deepgram": "Hey. Can you say who won the basketball game between the Lakers and the Clippers on January twenty eighth twenty twenty one?",
          "clarifications": {
            "team1": "Lakers",
            "team2": "Clippers",
            "game_date": "Jan 28, 2021"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "game_result.get_winner",
        "description": "Get the winner of a specific basketball game.",
        "parameters": {
          "type": "dict",
          "properties": {
            "teams": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of two teams who played the game."
            },
            "date": {
              "type": "string",
              "description": "The date of the game, formatted as YYYY-MM-DD."
            },
            "venue": {
              "type": "string",
              "optional": true,
              "description": "Optional: The venue of the game. Default is 'home'."
            }
          },
          "required": [
            "teams",
            "date"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_308",
    "question": [
      [
        {
          "role": "user",
          "content": "What are the next five matches for Manchester United and who are they playing against in the English Premier League?",
          "transcript": "Um, could you tell me who M-A-N-C-H-E-S-T-E-R, Manchester U-N-I-T-E-D, Uniteds playing in the next five Premier League matches?",
          "audio_path": "BFCL_v3_simple/simple_308_elevenlabs.mp3",
          "asr_output_openai": "Could you tell me who Manchester United's playing in the next five Premier League matches?",
          "asr_output_elevenlabs": "Um, could you tell me who M-A-N-C-H-E-S-T-E-R, Manchester U-N-I-T-E-D, United's playing in the next five Premier League matches?",
          "asr_output_deepgram": "Could you tell me who m a n c h e s t e r? Manchester, u n I t e d, United's playing in the next five Premier League matches.",
          "clarifications": {
            "team_name": "Manchester United",
            "league": "English Premier League"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "sports.match_schedule",
        "description": "Retrieve the match schedule for a specific sports team.",
        "parameters": {
          "type": "dict",
          "properties": {
            "team_name": {
              "type": "string",
              "description": "The name of the sports team."
            },
            "num_matches": {
              "type": "integer",
              "description": "The number of upcoming matches you want to get."
            },
            "league": {
              "type": "string",
              "description": "The sports league of the team. This is an optional parameter. Default is 'English Premier League'."
            }
          },
          "required": [
            "team_name",
            "num_matches"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_309",
    "question": [
      [
        {
          "role": "user",
          "content": "Find me the record of Tom Brady in the 2020 NFL season.",
          "transcript": "Uh, can you, oh, show me Tom Bradys stats from 2020 NFL season?",
          "audio_path": "BFCL_v3_simple/simple_309_elevenlabs.mp3",
          "asr_output_openai": "Can you show me Tom Brady's stats from 2020 NFL season?",
          "asr_output_elevenlabs": "Uh, can you, oh, show me Tom Brady's stats from 2020 NFL season?",
          "asr_output_deepgram": "Can you, oh, show me Tom Brady's stats from twenty twenty NFL season?",
          "clarifications": {
            "player_name": "Tom Brady",
            "season_year": "2020"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "nfl_data.player_record",
        "description": "Retrieve the record of an NFL player in a specified season.",
        "parameters": {
          "type": "dict",
          "properties": {
            "player_name": {
              "type": "string",
              "description": "The name of the NFL player."
            },
            "season_year": {
              "type": "integer",
              "description": "The year of the NFL season."
            },
            "team": {
              "type": "string",
              "description": "The NFL team that the player played for in that season. Default is all teams if not specified."
            }
          },
          "required": [
            "player_name",
            "season_year"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_310",
    "question": [
      [
        {
          "role": "user",
          "content": "What are the career stats of basketball player LeBron James?",
          "transcript": "Um, hey, can you get me LeBron, thats L-E-B-R-O-N, LeBron James career stats, please?",
          "audio_path": "BFCL_v3_simple/simple_310_elevenlabs.mp3",
          "asr_output_openai": "Hey, can you get me LeBron, that's L-E-B-R-O-N, LeBron James career stats, please?",
          "asr_output_elevenlabs": "Um, hey, can you get me LeBron? That's L-E-B-R-O-N. LeBron James' career stats, please.",
          "asr_output_deepgram": "Hey. Can you get me Lebron? That's l e b r o n. Lebron James career stats, please.",
          "clarifications": {
            "player_name": "LeBron James"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_career_stats",
        "description": "Retrieve the career statistics of a basketball player based on the player's name.",
        "parameters": {
          "type": "dict",
          "properties": {
            "player_name": {
              "type": "string",
              "description": "The name of the basketball player."
            },
            "team": {
              "type": "string",
              "description": "The team that the player currently plays for or has played for (Optional). Default to use all teams if not specified."
            }
          },
          "required": [
            "player_name"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_311",
    "question": [
      [
        {
          "role": "user",
          "content": "Find me the detailed profile of basketball player Lebron James",
          "transcript": "Uh, can you fetch me the detailed profile for Lebron James, thats L-E-B-R-O-N J-A-M-E-S, Lebron James?",
          "audio_path": "BFCL_v3_simple/simple_311_elevenlabs.mp3",
          "asr_output_openai": "Can you fetch me the detailed profile for LeBron James? That's L-E-B-R-O-N J-A-M-E-S, LeBron James.",
          "asr_output_elevenlabs": "Uh, can you fetch me the detailed profile for LeBron James? That's L-E-B-R-O-N J-A-M-E-S. LeBron James.",
          "asr_output_deepgram": "Can you fetch me the detailed profile for Lebron James? That's l e b r o n j a m e s. Lebron James.",
          "clarifications": {
            "athlete_name": "Lebron James"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "sports_db.find_athlete",
        "description": "Find the profile information of a sports athlete based on their full name.",
        "parameters": {
          "type": "dict",
          "properties": {
            "name": {
              "type": "string",
              "description": "The full name of the athlete."
            },
            "team": {
              "type": "string",
              "description": "The team the athlete belongs to. Default to all teams if not specified."
            },
            "sport": {
              "type": "string",
              "description": "The sport that athlete plays.",
              "enum": [
                "Basketball",
                "Baseball",
                "Football",
                "Soccer"
              ]
            }
          },
          "required": [
            "name",
            "sport"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_312",
    "question": [
      [
        {
          "role": "user",
          "content": "What are the statistics of Ronaldo's matches in 2021?",
          "transcript": "Hey, uh, can you hook me up with Ronaldos match stats for twenty twenty-one?",
          "audio_path": "BFCL_v3_simple/simple_312_elevenlabs.mp3",
          "asr_output_openai": "Hey, can you hook me up with Ronaldo's match stats for 2021?",
          "asr_output_elevenlabs": "Hey, uh, can you hook me up with Ronaldo's match stats for 2021?",
          "asr_output_deepgram": "Hey. Can you hook me up with Ronaldo's match stats for twenty twenty one?",
          "clarifications": {
            "player_name": "Ronaldo",
            "year": "2021"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "player_statistic",
        "description": "Retrieves detailed player's statistics for a specific year.",
        "parameters": {
          "type": "dict",
          "properties": {
            "player_name": {
              "type": "string",
              "description": "The player's name."
            },
            "year": {
              "type": "integer",
              "description": "Year for which the statistics will be displayed."
            },
            "team_name": {
              "type": "string",
              "description": "The name of the team(optional). Default to not use it if not specified."
            }
          },
          "required": [
            "player_name",
            "year"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_313",
    "question": [
      [
        {
          "role": "user",
          "content": "What's the total worth in euro of Messi according to latest data?",
          "transcript": "Hey, let me see... oh, whats Messis current value in euros based on the latest info?",
          "audio_path": "BFCL_v3_simple/simple_313_elevenlabs.mp3",
          "asr_output_openai": "Hey, let me see. Oh, what's Messi's current value in euros based on the latest info?",
          "asr_output_elevenlabs": "Hey, let me see. Oh, what's Messi's current value in Euros based on the latest info?",
          "asr_output_deepgram": "Hey. Let me see. Oh, what's Messi's current value in euros based on the latest info?",
          "clarifications": {
            "celebrity_name": "Messi",
            "currency": "euro"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "celebrity_net_worth.get",
        "description": "Get the total net worth of a sports celebrity based on most recent data.",
        "parameters": {
          "type": "dict",
          "properties": {
            "name": {
              "type": "string",
              "description": "The full name of the sports celebrity."
            },
            "currency": {
              "type": "string",
              "description": "The currency in which the net worth will be returned. Default is 'USD'."
            }
          },
          "required": [
            "name",
            "currency"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_314",
    "question": [
      [
        {
          "role": "user",
          "content": "Find all the major achievements of the footballer Lionel Messi.",
          "transcript": "Um, what are Lionel Messis, thats L-I-O-N-E-L M-E-S-S-I, Lionel Messis, uh, major achievements in football?",
          "audio_path": "BFCL_v3_simple/simple_314_elevenlabs.mp3",
          "asr_output_openai": "What are Lionel Messi's (that's L-I-O-N-E-L M-E-S-S-I) major achievements in football?",
          "asr_output_elevenlabs": "Umm, what are Lionel Messi's\u2014that\u2019s L-I-O-N-E-L M-E-S-S-I, Lionel Messi\u2019s\u2014major achievements in football?",
          "asr_output_deepgram": "What are Lionel Messi's? That's l I o n e l m e s s I. Lionel Messi's, major achievements in football.",
          "clarifications": {
            "celebrity_name": "Lionel Messi"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "sports_celebrity.get_major_achievements",
        "description": "Returns a list of major achievements of a particular sports celebrity.",
        "parameters": {
          "type": "dict",
          "properties": {
            "celebrity_name": {
              "type": "string",
              "description": "Name of the sports celebrity."
            },
            "sports": {
              "type": "string",
              "description": "Type of sports the celebrity involved in. Default is Football."
            },
            "team": {
              "type": "string",
              "description": "Optional. Team where celebrity currently plays. Default is 'all'"
            }
          },
          "required": [
            "celebrity_name"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_315",
    "question": [
      [
        {
          "role": "user",
          "content": "Get the NBA team's ranking with the best defence in the 2021 season.",
          "transcript": "Right, whats NBA teams, uh, ranking for best defense in the twenty twenty-one season?",
          "audio_path": "BFCL_v3_simple/simple_315_elevenlabs.mp3",
          "asr_output_openai": "Right, what's NBA teams' ranking for best defense in the 2021 season?",
          "asr_output_elevenlabs": "Right. What's NBA teams, uh, ranking for best defense in the 2021 season?",
          "asr_output_deepgram": "Right. What's NBA teams, ranking for best defense in the twenty twenty one season?",
          "clarifications": {
            "season": "2021"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_defense_ranking",
        "description": "Retrieve the defence ranking of NBA teams in a specified season.",
        "parameters": {
          "type": "dict",
          "properties": {
            "season": {
              "type": "integer",
              "description": "The NBA season to get defence ranking from."
            },
            "top": {
              "type": "integer",
              "default": 1,
              "description": "Number of top teams in defence ranking to fetch."
            }
          },
          "required": [
            "season"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_316",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the current world rank of a Tennis player, Serena Williams.",
          "transcript": "Um, can you check Serena Williams, thats S-E-R-E-N-A W-I-L-L-I-A-M-S, Serena Williams current world tennis ranking, please?",
          "audio_path": "BFCL_v3_simple/simple_316_elevenlabs.mp3",
          "asr_output_openai": "Can you check Serena Williams's current world tennis ranking please?",
          "asr_output_elevenlabs": "Um, can you check Serena Williams, that's S-E-R-E-N-A W-I-L-L-I-A-M-S, Serena Williams' current world tennis ranking, please?",
          "asr_output_deepgram": "Can you check Serena Williams? That's s e r e n a w I l l I a m s. Serena Williams current world tennis ranking, please.",
          "clarifications": {
            "player_name": "Serena Williams"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_sport_ranking",
        "description": "Retrieve the current world ranking of a sportsperson based on the sport and player's name.",
        "parameters": {
          "type": "dict",
          "properties": {
            "sport": {
              "type": "string",
              "description": "Name of the sport."
            },
            "player_name": {
              "type": "string",
              "description": "Name of the player."
            },
            "gender": {
              "type": "string",
              "description": "Gender of the player. This is optional. The possible values are male or female.",
              "default": "all"
            }
          },
          "required": [
            "sport",
            "player_name"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_317",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the ranking of LA Lakers in the NBA 2021 regular season.",
          "transcript": "Hey, um, can you say where the LA Lakers ranked in the NBA twenty twenty-one regular season?",
          "audio_path": "BFCL_v3_simple/simple_317_elevenlabs.mp3",
          "asr_output_openai": "Hey, can you say where the LA Lakers ranked in the NBA 2021 regular season?",
          "asr_output_elevenlabs": "Hey, um, can you say where the LA Lakers ranked in the NBA 2021 regular season?",
          "asr_output_deepgram": "Hey. Can you say where the LA Lakers ranked in the NBA twenty twenty one regular season?",
          "clarifications": {
            "team_name": "LA Lakers",
            "league": "NBA",
            "season": "2021",
            "season_type": "regular"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_team_rank",
        "description": "Get the team ranking in a sports league based on season and type.",
        "parameters": {
          "type": "dict",
          "properties": {
            "team_name": {
              "type": "string",
              "description": "The name of the sports team."
            },
            "league": {
              "type": "string",
              "description": "The name of the league in which the team competes."
            },
            "season": {
              "type": "string",
              "description": "The season for which the team's ranking is sought."
            },
            "type": {
              "type": "string",
              "description": "Type of the season: regular or playoff.",
              "enum": [
                "regular",
                "playoff"
              ]
            }
          },
          "required": [
            "team_name",
            "league",
            "season",
            "type"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_318",
    "question": [
      [
        {
          "role": "user",
          "content": "What is the FIFA ranking of Germany's men soccer team for the year 2021?",
          "transcript": "Hey, uh, do you know the twenty twenty-one FIFA ranking for Germanys mens soccer team?",
          "audio_path": "BFCL_v3_simple/simple_318_elevenlabs.mp3",
          "asr_output_openai": "Hey, uh, do you know the 2021 FIFA ranking for Germany's men's soccer team?",
          "asr_output_elevenlabs": "Hey, uh, do you know the 2021 FIFA ranking for Germany's men's soccer team?",
          "asr_output_deepgram": "Hey. Do you know the twenty twenty one FIFA ranking for Germany's men's soccer team?",
          "clarifications": {
            "team_name": "Germany",
            "year": "2021"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_team_ranking",
        "description": "Retrieve the FIFA ranking of a specific soccer team for a certain year.",
        "parameters": {
          "type": "dict",
          "properties": {
            "team_name": {
              "type": "string",
              "description": "The name of the soccer team."
            },
            "year": {
              "type": "integer",
              "description": "The year for which the ranking is to be retrieved."
            },
            "gender": {
              "type": "string",
              "description": "The gender of the team. It can be either 'men' or 'women'. Default is 'men'."
            }
          },
          "required": [
            "team_name",
            "year"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_319",
    "question": [
      [
        {
          "role": "user",
          "content": "What is the ranking of Manchester United in Premier League?",
          "transcript": "Hey, um, can you tell me where Manchester Uniteds standin in Premier League rankings, yeah?",
          "audio_path": "BFCL_v3_simple/simple_319_elevenlabs.mp3",
          "asr_output_openai": "Hey, can you tell me where Manchester United's standing in Premier League rankings, yeah?",
          "asr_output_elevenlabs": "Hey, uhm, can you tell me where Manchester United stand in Premier League rankings, yeah?",
          "asr_output_deepgram": "Hey. Can you tell me where Manchester United standing in Premier League rankings? Yeah?",
          "clarifications": {
            "team_name": "Manchester United",
            "league_name": "Premier League"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "sports_ranking",
        "description": "Fetch the ranking of a specific sports team in a specific league",
        "parameters": {
          "type": "dict",
          "properties": {
            "team": {
              "type": "string",
              "description": "The name of the team."
            },
            "league": {
              "type": "string",
              "description": "The name of the league."
            },
            "season": {
              "type": "integer",
              "description": "Optional parameter to specify the season, default is the current season '2023' if not specified."
            }
          },
          "required": [
            "team",
            "league"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_320",
    "question": [
      [
        {
          "role": "user",
          "content": "Fetch the basketball league standings, where Golden State Warriors stand in current 2022-2023 season with details",
          "transcript": "Can ya get me current twenty-twenty two to twenty-twenty three basketball league standings, focusing on the Golden State Warriors and all their details, please?",
          "audio_path": "BFCL_v3_simple/simple_320_elevenlabs.mp3",
          "asr_output_openai": "Can you get me current 2022-2023 basketball league standings, focusing on the Golden State Warriors and all their details please?",
          "asr_output_elevenlabs": "Can you get me current 2022 to 2023 Basketball League standings focusing on the Golden State Warriors and all their details, please?",
          "asr_output_deepgram": "Can you get me current twenty twenty two to twenty twenty three basketball league standings focusing on the Golden State Warriors and all their details, please?",
          "clarifications": {
            "team_name": "Golden State Warriors",
            "season": "2022-2023"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "sports_ranking.get_team_position",
        "description": "Retrieve a team's position and stats in the basketball league for a given season.",
        "parameters": {
          "type": "dict",
          "properties": {
            "team": {
              "type": "string",
              "description": "The name of the team."
            },
            "season": {
              "type": "string",
              "description": "The season for which data should be fetched."
            },
            "detailed": {
              "type": "boolean",
              "description": "Flag to retrieve detailed stats or just the position.",
              "default": false
            }
          },
          "required": [
            "team",
            "season"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_321",
    "question": [
      [
        {
          "role": "user",
          "content": "What's the ranking of Barcelona in the 2021 La Liga season?",
          "transcript": "Hey, um, can you tell me where Barcelona ranked in the, oh, twenty-twenty-one La Liga season?",
          "audio_path": "BFCL_v3_simple/simple_321_elevenlabs.mp3",
          "asr_output_openai": "Hey, um, can you tell me where Barcelona ranked in the 2021 La Liga season?",
          "asr_output_elevenlabs": "Hey, uhm, can you tell me where Barcelona ranked in the, oh, 2021 La Liga season?",
          "asr_output_deepgram": "Hey. Can you tell me where Barcelona ranked in the o twenty twenty one La Liga season?",
          "clarifications": {
            "team_name": "Barcelona",
            "league_name": "La Liga",
            "season_year": "2021"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "sports_ranking",
        "description": "Get the ranking of a team in a given sports league and season.",
        "parameters": {
          "type": "dict",
          "properties": {
            "team": {
              "type": "string",
              "description": "The name of the team."
            },
            "league": {
              "type": "string",
              "description": "The name of the sports league."
            },
            "season": {
              "type": "string",
              "description": "The season for which ranking needs to be obtained."
            }
          },
          "required": [
            "team",
            "league",
            "season"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_322",
    "question": [
      [
        {
          "role": "user",
          "content": "Get the current ranking for Liverpool Football Club in the Premier League.",
          "transcript": "Hey, uh, whats Liverpools current position in the Premier League, okay?",
          "audio_path": "BFCL_v3_simple/simple_322_elevenlabs.mp3",
          "asr_output_openai": "Hey, what's Liverpool's current position in the Premier League, okay?",
          "asr_output_elevenlabs": "Hey, uh, what's Liverpool's current position in the Premier League, okay?",
          "asr_output_deepgram": "Hey. What's Liverpool's current position in the Premier League? Okay?",
          "clarifications": {
            "team_name": "Liverpool Football Club",
            "league_name": "Premier League"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "sports_ranking.get_current",
        "description": "Retrieve the current ranking of a specific team in a particular league.",
        "parameters": {
          "type": "dict",
          "properties": {
            "team": {
              "type": "string",
              "description": "The name of the team whose ranking is sought."
            },
            "league": {
              "type": "string",
              "description": "The league in which the team participates."
            },
            "season": {
              "type": "string",
              "description": "The season for which the ranking is sought. Defaults to the current season '2023-2024' if not provided."
            }
          },
          "required": [
            "team",
            "league"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_323",
    "question": [
      [
        {
          "role": "user",
          "content": "Who is ranked as the top player in woman tennis?",
          "transcript": "Um, okay, who is currently the top-ranked player in womens tennis?",
          "audio_path": "BFCL_v3_simple/simple_323_elevenlabs.mp3",
          "asr_output_openai": "OK, who is currently the top-ranked player in women's tennis?",
          "asr_output_elevenlabs": "Umm, okay. Who is currently the top-ranked player in women's tennis?",
          "asr_output_deepgram": "Okay. Who is currently the top ranked player in women's tennis?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "sports_ranking.get_top_player",
        "description": "Get the top player in a specific sport.",
        "parameters": {
          "type": "dict",
          "properties": {
            "sport": {
              "type": "string",
              "description": "The type of sport."
            },
            "gender": {
              "type": "string",
              "description": "The gender of the sport category. Optional.",
              "default": "men"
            }
          },
          "required": [
            "sport"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_324",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the score of last game for Los Angeles Lakers including its opponent name.",
          "transcript": "Hey, um, can you tell me the score of the latest game for Los Angeles, thats L-O-S A-N-G-E-L-E-S, Lakers and who they played against, please?",
          "audio_path": "BFCL_v3_simple/simple_324_elevenlabs.mp3",
          "asr_output_openai": "Hey, um, can you tell me the score of the latest game for Los Angeles, that's L-O-S A-N-G-E-L-E-S Lakers and who they played against, please?",
          "asr_output_elevenlabs": "Hey, um, can you tell me the score of the latest game for Los Angeles? That's L-O-S-A-N-G-E-L-E-S Lakers, and who they played against, please?",
          "asr_output_deepgram": "Hey. Can you tell me the score of the latest game for Los Angeles? That's l o s a n g e l e s, Lakers and who they played against, please.",
          "clarifications": {
            "team_name": "Los Angeles Lakers"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "team_score.get_latest",
        "description": "Retrieve the score of the most recent game for a specified sports team.",
        "parameters": {
          "type": "dict",
          "properties": {
            "team": {
              "type": "string",
              "description": "Name of the sports team."
            },
            "include_opponent": {
              "type": "boolean",
              "description": "Include the name of the opponent team in the return.",
              "default": false
            }
          },
          "required": [
            "team"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_325",
    "question": [
      [
        {
          "role": "user",
          "content": "Who won the last match between Chicago Bulls and Los Angeles Lakers?",
          "transcript": "Hey, uh, who won most recent game between Chicago, thats C-H-I-C-A-G-O, Chicago Bulls and Los, thats L-O-S, Los Angeles, A-N-G-E-L-E-S, Los Angeles Lakers, okay?",
          "audio_path": "BFCL_v3_simple/simple_325_elevenlabs.mp3",
          "asr_output_openai": "Hey, who won most recent game between Chicago Bulls and Los Angeles Lakers?",
          "asr_output_elevenlabs": "Hey, uh, who won most recent game between Chicago, that's C-H-I-C-A-G-O, Chicago Bulls and Los, that's L-O-S, Los Angeles, A-N-G-E-L-E-S, Los Angeles Lakers? Okay.",
          "asr_output_deepgram": "Hey. Who won most recent game between Chicago? That's c h I c a g o, Chicago Bulls and Los. That's Los Angeles, a n g e l e s, Los Angeles Lakers. Okay?",
          "clarifications": {
            "first_team_name": "Chicago Bulls",
            "second_team_name": "Los Angeles Lakers"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "sports.match_results",
        "description": "Returns the results of a given match between two teams.",
        "parameters": {
          "type": "dict",
          "properties": {
            "team1": {
              "type": "string",
              "description": "The name of the first team."
            },
            "team2": {
              "type": "string",
              "description": "The name of the second team."
            },
            "season": {
              "type": "string",
              "description": "The season when the match happened. Default is the current season."
            }
          },
          "required": [
            "team1",
            "team2"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_326",
    "question": [
      [
        {
          "role": "user",
          "content": "Get the latest game score and statistics for Los Angeles Lakers in NBA.",
          "transcript": "Hey, uh, can you get the latest game score and stats for the Los Angeles Lakers, thats L-O-S A-N-G-E-L-E-S L-A-K-E-R-S, in the N-B-A, right?",
          "audio_path": "BFCL_v3_simple/simple_326_elevenlabs.mp3",
          "asr_output_openai": "Hey, can you get the latest game score and stats for the Los Angeles Lakers\u2014that's L-O-S A-N-G-E-L-E-S L-A-K-E-R-S\u2014in the NBA, right?",
          "asr_output_elevenlabs": "Hey, uh, can you get the latest game score and stats for the Los Angeles Lakers? That's L-O-S-A-N-G-E-L-E-S L-A-K-E-R-S in the NBA, right?",
          "asr_output_deepgram": "Hey. Can you get the latest game score and stats for the Los Angeles Lakers? That's l o s a n g e l e s l a k e r s in the NBA. Right?",
          "clarifications": {
            "team_name": "Los Angeles Lakers",
            "league": "NBA"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_team_score",
        "description": "Retrieves the latest game score, individual player stats, and team stats for a specified sports team.",
        "parameters": {
          "type": "dict",
          "properties": {
            "team_name": {
              "type": "string",
              "description": "The name of the sports team."
            },
            "league": {
              "type": "string",
              "description": "The league that the team is part of."
            },
            "include_player_stats": {
              "type": "boolean",
              "default": false,
              "description": "Indicates if individual player statistics should be included in the result. Default is false."
            }
          },
          "required": [
            "team_name",
            "league"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_327",
    "question": [
      [
        {
          "role": "user",
          "content": "Give me the schedule of Manchester United for the next 6 games in Premier League.",
          "transcript": "Hey, whats Manchester Uniteds Premier League schedule for their next six games?",
          "audio_path": "BFCL_v3_simple/simple_327_elevenlabs.mp3",
          "asr_output_openai": "Hey, what's Manchester United's Premier League schedule for their next six games?",
          "asr_output_elevenlabs": "Hey, what's Manchester United's Premier League schedule for their next six games?",
          "asr_output_deepgram": "Hey. What's Manchester United's Premier League schedule for their next six games?",
          "clarifications": {
            "team_name": "Manchester United",
            "num_of_games": "6",
            "league": "Premier League"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "sports_team.get_schedule",
        "description": "Fetches the schedule of the specified sports team for the specified number of games in the given league.",
        "parameters": {
          "type": "dict",
          "properties": {
            "team_name": {
              "type": "string",
              "description": "The name of the sports team."
            },
            "num_of_games": {
              "type": "integer",
              "description": "Number of games for which to fetch the schedule."
            },
            "league": {
              "type": "string",
              "description": "The name of the sports league. If not provided, the function will fetch the schedule for all games, regardless of the league."
            },
            "location": {
              "type": "string",
              "description": "Optional. The city or venue where games are to be held. If not provided, default that all venues will be considered."
            }
          },
          "required": [
            "team_name",
            "num_of_games",
            "league"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_328",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the rating and player count of the board game 'Ticket to Ride'.",
          "transcript": "Hey, whats the rating and number of players for the board game Ticket to Ride?",
          "audio_path": "BFCL_v3_simple/simple_328_elevenlabs.mp3",
          "asr_output_openai": "Hey, what's the rating and number of players for the board game Ticket to Ride?",
          "asr_output_elevenlabs": "Hey, what's the rating and number of players for the board game Ticket to Ride?",
          "asr_output_deepgram": "Hey. What's the rating and number of players for the board game ticket to ride?",
          "clarifications": {
            "board_game_name": "Ticket to Ride"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "boardgame.get_info",
        "description": "Retrieve detailed information of a board game.",
        "parameters": {
          "type": "dict",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the board game."
            },
            "parameters": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "player count",
                  "playing time",
                  "age",
                  "mechanics",
                  "rating"
                ]
              },
              "description": "Game characteristics interested."
            },
            "language": {
              "type": "string",
              "description": "The preferred language for the game information, default is English"
            }
          },
          "required": [
            "name",
            "parameters"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_329",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the odds of rolling a 7 with two dice in the board game Monopoly.",
          "transcript": "Um, can you, uh, find out the odds of rolling a seven with two dice in Monopoly?",
          "audio_path": "BFCL_v3_simple/simple_329_elevenlabs.mp3",
          "asr_output_openai": "Um, can you, uh, find out the odds of rolling a seven with two dice in Monopoly?",
          "asr_output_elevenlabs": "Um, can you, uh, find out the odds of rolling a seven with two dice in Monopoly?",
          "asr_output_deepgram": "Can you, find out the odds of rolling a seven with two dice in monopoly?",
          "clarifications": {
            "target_number": "7",
            "dice_count": "two"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "monopoly_odds_calculator",
        "description": "Calculates the probability of rolling a certain sum with two dice, commonly used in board game like Monopoly.",
        "parameters": {
          "type": "dict",
          "properties": {
            "number": {
              "type": "integer",
              "description": "The number for which the odds are calculated."
            },
            "dice_number": {
              "type": "integer",
              "description": "The number of dice involved in the roll."
            },
            "dice_faces": {
              "type": "integer",
              "description": "The number of faces on a single die. Default is 6 for standard six-faced die."
            }
          },
          "required": [
            "number",
            "dice_number"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_330",
    "question": [
      [
        {
          "role": "user",
          "content": "What's the average review rating and the age range for the board game 'Catan'?",
          "transcript": "Hey, uh, whats average review rating for the board game Catan? Oh, and whats the age range?",
          "audio_path": "BFCL_v3_simple/simple_330_elevenlabs.mp3",
          "asr_output_openai": "Hey, what's average review rating for the board game Catan? Oh, and what's the age range?",
          "asr_output_elevenlabs": "Hey, uh, what's average review rating for the board game Catan? Oh, and what's the age range?",
          "asr_output_deepgram": "Hey, what's average review rating for the board game Catan? Oh, and what's the age range?",
          "clarifications": {
            "game_name": "Catan"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "board_game_info",
        "description": "Get the information about a board game from a database. ",
        "parameters": {
          "type": "dict",
          "properties": {
            "game_name": {
              "type": "string",
              "description": "Name of the board game."
            },
            "info_required": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "average_review_rating",
                  "age_range",
                  "number_of_players",
                  "playing_time",
                  "genre"
                ]
              },
              "description": "Array of information requested for the game."
            }
          },
          "required": [
            "game_name",
            "info_required"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_331",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the top chess players in New York with a rating above 2300.",
          "transcript": "Um, who in New York are the top chess players with, uh, ratings over twenty-three hundred?",
          "audio_path": "BFCL_v3_simple/simple_331_elevenlabs.mp3",
          "asr_output_openai": "Um, who in New York are the top chess players with, er, ratings over 2300?",
          "asr_output_elevenlabs": "Um, who in New York are the top chess players with, uh, ratings over 2,300?",
          "asr_output_deepgram": "Who in New York are the top chess players with, ratings over twenty three hundred?",
          "clarifications": {
            "location": "New York",
            "minimum_rating": "2300"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "board_game.chess.get_top_players",
        "description": "Find top chess players in a location based on rating.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city you want to find the players from."
            },
            "minimum_rating": {
              "type": "integer",
              "description": "Minimum rating to filter the players."
            },
            "number_of_players": {
              "type": "integer",
              "default": 10,
              "description": "Number of players you want to retrieve, default value is 10"
            }
          },
          "required": [
            "location",
            "minimum_rating"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_332",
    "question": [
      [
        {
          "role": "user",
          "content": "What's the chess classical rating of Magnus Carlsen?",
          "transcript": "Hey, uh, whats Magnus Carlsens chess classical rating?",
          "audio_path": "BFCL_v3_simple/simple_332_elevenlabs.mp3",
          "asr_output_openai": "Hey, what's Magnus Carlsen's chess classical rating?",
          "asr_output_elevenlabs": "Hey, uh, what's Magnus Carlsen's chess classical rating?",
          "asr_output_deepgram": "Hey. What's Magnus Carlsen's chess classical rating?",
          "clarifications": {
            "player_name": "Magnus Carlsen"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "chess.rating",
        "description": "Fetches the current chess rating of a given player",
        "parameters": {
          "type": "dict",
          "properties": {
            "player_name": {
              "type": "string",
              "description": "The full name of the chess player."
            },
            "variant": {
              "type": "string",
              "description": "The variant of chess for which rating is requested (e.g., 'classical', 'blitz', 'bullet'). Default is 'classical'."
            }
          },
          "required": [
            "player_name"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_333",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the high and low temperatures, humidity, and precipitation for London, United Kingdom for the next 3 days.",
          "transcript": "Um, what\u2019s the weather like in London for, uh, the next three days? I mean, specifically, I need the high and low temps, humidity, and rainfall details, thanks.",
          "audio_path": "BFCL_v3_simple/simple_333_elevenlabs.mp3",
          "asr_output_openai": "Um, what's the weather like in London for, uh, the next three days? I mean, specifically, I need the high and low temps, humidity, and rainfall details, thanks.",
          "asr_output_elevenlabs": "Um, what's the weather like in London for, uh, the next three days? I mean, specifically, I need the high and low temps, humidity and rainfall details. Thanks.",
          "asr_output_deepgram": "What's the weather like in London for, the next three days? I mean, specifically, I need the high and low temps, humidity, and rainfall details. Thanks.",
          "clarifications": {
            "location": "London, United Kingdom",
            "forecast_days": "3"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "detailed_weather_forecast",
        "description": "Retrieve a detailed weather forecast for a specific location and time frame, including high/low temperatures, humidity, and precipitation.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city that you want to get the weather for."
            },
            "days": {
              "type": "integer",
              "description": "Number of days for the forecast."
            },
            "details": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "high_low_temperature",
                  "humidity",
                  "precipitation"
                ]
              },
              "description": "Specific weather details required in the forecast."
            }
          },
          "required": [
            "location",
            "days",
            "details"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_334",
    "question": [
      [
        {
          "role": "user",
          "content": "Check who is the winner in a game of blackjack given player having A and 10, dealer having 10 and 9. The Ace is considered 1.",
          "transcript": "Hey, um, can you find out who won blackjack game if the players got an Ace and a ten, and the dealers holding a ten and a nine? Oh, remember, the Ace counts as one.",
          "audio_path": "BFCL_v3_simple/simple_334_elevenlabs.mp3",
          "asr_output_openai": "Hey, um, can you find out who won blackjack game if the player's got an ace and a ten, and the dealer's holding a ten and a nine? Oh, remember, the ace counts as one.",
          "asr_output_elevenlabs": "Hey, um, can you find out who won blackjack game if the players got an ace and a 10, and the dealer's holding a 10 and a nine? Oh, remember, the ace counts as one.",
          "asr_output_deepgram": "Hey. Can you find out who won blackjack game if the players got an ace and a ten and the dealer's holding a ten and a nine? Oh, remember, the ace counts as one.",
          "clarifications": {
            "player_cards": "A and 10",
            "dealer_cards": "10 and 9",
            "ace_value": "1"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "blackjack.check_winner",
        "description": "Checks and determines the winner in a game of blackjack.",
        "parameters": {
          "type": "dict",
          "properties": {
            "player_cards": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Cards held by the player."
            },
            "dealer_cards": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Cards held by the dealer."
            },
            "ace_value": {
              "type": "integer",
              "description": "The value considered for the ace card, can be either 1 or 11.",
              "default": 11
            }
          },
          "required": [
            "player_cards",
            "dealer_cards"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_335",
    "question": [
      [
        {
          "role": "user",
          "content": "Find a Card of rank 'Queen' and suit 'Hearts' in the deck.",
          "transcript": "Hey, lemme see... oh, could you find Queen of Hearts in deck?",
          "audio_path": "BFCL_v3_simple/simple_335_elevenlabs.mp3",
          "asr_output_openai": "Hey, let me see. Oh, could you find Queen of Hearts in deck?",
          "asr_output_elevenlabs": "Hey, let me see. Oh, could you find queen of hearts in deck?",
          "asr_output_deepgram": "Hey. Let me see. Oh, could you find queen of hearts in deck?",
          "clarifications": {
            "card_rank": "Queen",
            "card_suit": "Hearts"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "find_card_in_deck",
        "description": "Locate a particular card in a deck based on rank and suit.",
        "parameters": {
          "type": "dict",
          "properties": {
            "rank": {
              "type": "string",
              "description": "Rank of the card (e.g. Ace, Two, King)."
            },
            "suit": {
              "type": "string",
              "description": "Suit of the card (e.g. Hearts, Spades, Diamonds, Clubs)."
            },
            "deck": {
              "type": "array",
              "items": {
                "type": "dict",
                "properties": {
                  "rank": {
                    "type": "string"
                  },
                  "suit": {
                    "type": "string"
                  }
                }
              },
              "description": "Deck of cards. If not provided, the deck will be a standard 52 card deck"
            }
          },
          "required": [
            "rank",
            "suit"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_336",
    "question": [
      [
        {
          "role": "user",
          "content": "Shuffle a deck of cards, and draw 3 cards from the top.",
          "transcript": "Shuffle, uh, deck of cards and then take the top three, okay.",
          "audio_path": "BFCL_v3_simple/simple_336_elevenlabs.mp3",
          "asr_output_openai": "Shuffle a deck of cards and then take the top three.",
          "asr_output_elevenlabs": "Shuffle a deck of cards and then take the top three. Okay.",
          "asr_output_deepgram": "Shuffle a deck of cards and then take the top three. Okay.",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "cards.shuffle_and_draw",
        "description": "Shuffle a standard deck of 52 cards and draw a specified number of cards from the top.",
        "parameters": {
          "type": "dict",
          "properties": {
            "num_cards": {
              "type": "integer",
              "description": "Number of cards to be drawn. The default is 1 if no value is provided."
            }
          },
          "required": [
            "num_cards"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_337",
    "question": [
      [
        {
          "role": "user",
          "content": "In a texas holdem game, Who won in the poker game with players Alex, Sam, Robert and Steve given the cards Alex':['A of spades', 'K of spades'], 'Sam': ['2 of diamonds', '3 of clubs'], 'Robert': ['Q of hearts', '10 of hearts'], 'Steve': ['4 of spades', '5 of spades']?",
          "transcript": "Um, lemme think... who won the Texas Holdem with Alex, Sam, Robert, and Steve? Right, Alex had a hand called ace and king of spades, Sam had, uh, a hand titled two of diamonds and three of clubs, Robert had a hand named queen and ten of hearts, and Steve had a hand called four and five of spades.",
          "audio_path": "BFCL_v3_simple/simple_337_elevenlabs.mp3",
          "asr_output_openai": "Let me think, who won the Texas Hold'em with Alex, Sam, Robert, and Steve? Right, Alex had a hand called Ace and King of Spades, Sam had, uh, a hand titled Two of Diamonds and Three of Clubs, Robert had a hand named Queen and Ten of Hearts, and Steve had a hand called Four and Five of Spades.",
          "asr_output_elevenlabs": "Um, let me think. Who won the Texas hold 'em with Alex, Sam, Robert, and Steve? Right. Alex had a hand called ace and king of spades. Sam had, uh, a hand titled two of diamonds and three of clubs. Robert had a hand named queen and ten of hearts, and Steve had a hand called four and five of spades.",
          "asr_output_deepgram": "Let me think. Who won the Texas Hold'em with Alex, Sam, Robert, and Steve? Right. Alex had a hand called ace and king of spades. Sam had, a hand titled two of diamonds and three of clubs. Robert had a hand named queen and ten of hearts, and Steve had a hand called four and five of spades.",
          "clarifications": {
            "player1_name": "Alex",
            "player2_name": "Sam",
            "player3_name": "Robert",
            "player4_name": "Steve"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "poker_game_winner",
        "description": "Identify the winner in a poker game based on the cards.",
        "parameters": {
          "type": "dict",
          "properties": {
            "players": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Names of the players in a list."
            },
            "cards": {
              "type": "dict",
              "description": "An object containing the player name as key and the cards as values in a list."
            },
            "type": {
              "type": "string",
              "description": "Type of poker game. Defaults to 'Texas Holdem'"
            }
          },
          "required": [
            "players",
            "cards"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_338",
    "question": [
      [
        {
          "role": "user",
          "content": "What is the probability of drawing a heart card from a deck of 52 cards?",
          "transcript": "Hey, um, whats the chance of pickin a heart from a deck of fifty-two cards?",
          "audio_path": "BFCL_v3_simple/simple_338_elevenlabs.mp3",
          "asr_output_openai": "Hey, um, what's the chance of picking a heart from a deck of 52 cards?",
          "asr_output_elevenlabs": "Hey, um, what's the chance of picking a heart from a deck of 52 cards?",
          "asr_output_deepgram": "Hey. What's the chance of picking a heart from a deck of fifty two cards?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "card_game_probability.calculate",
        "description": "Calculate the probability of drawing a certain card or suit from a deck of cards.",
        "parameters": {
          "type": "dict",
          "properties": {
            "total_cards": {
              "type": "integer",
              "description": "Total number of cards in the deck."
            },
            "desired_cards": {
              "type": "integer",
              "description": "Number of cards in the deck that satisfy the conditions."
            },
            "cards_drawn": {
              "type": "integer",
              "default": 1,
              "description": "Number of cards drawn from the deck."
            }
          },
          "required": [
            "total_cards",
            "desired_cards"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_339",
    "question": [
      [
        {
          "role": "user",
          "content": "What is the probability of getting a full house in poker?",
          "transcript": "Hey, um, whats chance of hittin a full house in poker, right?",
          "audio_path": "BFCL_v3_simple/simple_339_elevenlabs.mp3",
          "asr_output_openai": "Hey, um, what's chance of hitting a full house in poker, right?",
          "asr_output_elevenlabs": "Hey, um, what's chance of hitting a full house in poker, right?",
          "asr_output_deepgram": "Hey. What's chance of hitting a full house in poker. Right?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "poker_probability.full_house",
        "description": "Calculate the probability of getting a full house in a poker game.",
        "parameters": {
          "type": "dict",
          "properties": {
            "deck_size": {
              "type": "integer",
              "description": "The size of the deck. Default is 52."
            },
            "hand_size": {
              "type": "integer",
              "description": "The size of the hand. Default is 5."
            }
          },
          "required": [
            "deck_size",
            "hand_size"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_340",
    "question": [
      [
        {
          "role": "user",
          "content": "Determine the winner in a Poker game with John having a Hand of 8\u2665, 10\u2665, J\u2665, Q\u2665, K\u2665 and Mike having 9\u2660, J\u2660, 10\u2660, Q\u2660, K\u2660.",
          "transcript": "Um, in this Poker game, whos the winner: John has the eight, ten, Jack, Queen, King of Hearts, and Mike has the nine, Jack, ten, Queen, King of Spades?",
          "audio_path": "BFCL_v3_simple/simple_340_elevenlabs.mp3",
          "asr_output_openai": "In this poker game, who's the winner? John has the eight, ten, jack, queen, king of hearts, and Mike has the nine, jack, ten, queen, king of spades.",
          "asr_output_elevenlabs": "Um, in this poker game, who\u2019s the winner? John has the 8, 10, jack, queen, king of hearts, and Mike has the 9, jack, 10, queen, king of spades.",
          "asr_output_deepgram": "In this poker game, who's the winner? John has the eight, ten, jack, queen, king of hearts, and Mike has the nine, jack, ten, queen, king of spades.",
          "clarifications": {
            "player1_name": "John",
            "hand1": "8\u2665, 10\u2665, J\u2665, Q\u2665, K\u2665",
            "player2_name": "Mike",
            "hand2": "9\u2660, J\u2660, 10\u2660, Q\u2660, K\u2660"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "card_games.poker_determine_winner",
        "description": "Determines the winner in a game of Poker based on the cards in each players' hands.",
        "parameters": {
          "type": "dict",
          "properties": {
            "player1": {
              "type": "string",
              "description": "The first player's name."
            },
            "hand1": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The list of cards (as strings) in first player's hand. E.g ['10\u2660', 'J\u2660']"
            },
            "player2": {
              "type": "string",
              "description": "The second player's name."
            },
            "hand2": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The list of cards (as strings) in second player's hand. E.g ['9\u2665', '10\u2665']"
            }
          },
          "required": [
            "player1",
            "hand1",
            "player2",
            "hand2"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_341",
    "question": [
      [
        {
          "role": "user",
          "content": "What are the odds of drawing a heart card from a deck without joker?",
          "transcript": "So, uh, whats the chance of getting a heart from a deck without jokers?",
          "audio_path": "BFCL_v3_simple/simple_341_elevenlabs.mp3",
          "asr_output_openai": "So, er, what's the chance of getting a heart from a deck without jokers?",
          "asr_output_elevenlabs": "So, uh, what's the chance of getting a heart from a deck without jokers?",
          "asr_output_deepgram": "So, what's the chance of getting a heart from a deck without jokers?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "deck_of_cards.odds",
        "description": "Compute the probability of drawing a specific suit from a given deck of cards.",
        "parameters": {
          "type": "dict",
          "properties": {
            "suit": {
              "type": "string",
              "description": "The card suit. Valid values include: 'spades', 'clubs', 'hearts', 'diamonds'."
            },
            "deck_type": {
              "type": "string",
              "description": "Type of deck, normal deck includes joker, and without_joker deck excludes joker.",
              "default": "normal"
            }
          },
          "required": [
            "suit",
            "deck_type"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_342",
    "question": [
      [
        {
          "role": "user",
          "content": "Find all multi-player games released in 2019 with an ESRB rating of 'Everyone'",
          "transcript": "Uh, can you find all multiplayer games from twenty-nineteen thatre rated Everyone by ESRB, okay?",
          "audio_path": "BFCL_v3_simple/simple_342_elevenlabs.mp3",
          "asr_output_openai": "Can you find all multiplayer games from 2019 that are rated Everyone by ESRB, okay?",
          "asr_output_elevenlabs": "Uh, can you find all multiplayer games from 2019 that are rated Everyone by ESRB, okay?",
          "asr_output_deepgram": "Can you find all multiplayer games from twenty nineteen? They derated everyone by ESRB. Okay?",
          "clarifications": {
            "release_year": "2019",
            "ESRB_rating": "Everyone"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "game_list.get_games",
        "description": "Get a list of video games based on release year, multiplayer functionality and ESRB rating",
        "parameters": {
          "type": "dict",
          "properties": {
            "release_year": {
              "type": "integer",
              "description": "The year the game was released."
            },
            "multiplayer": {
              "type": "boolean",
              "description": "Whether the game has multiplayer functionality."
            },
            "ESRB_rating": {
              "type": "string",
              "description": "The ESRB rating of the game."
            }
          },
          "required": [
            "release_year",
            "multiplayer",
            "ESRB_rating"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_343",
    "question": [
      [
        {
          "role": "user",
          "content": "Fetch player statistics of 'Zelda' on Switch for user 'Sam'.",
          "transcript": "Uh, get Sams Zelda player stats on Switch, okay.",
          "audio_path": "BFCL_v3_simple/simple_343_elevenlabs.mp3",
          "asr_output_openai": "Get Sam's Zelda player stats on Switch, okay.",
          "asr_output_elevenlabs": "Uh, get Sam's Zelda player stats on Switch. Okay.",
          "asr_output_deepgram": "Get Sam's Zelda player stats on Switch. Okay.",
          "clarifications": {
            "game_name": "Zelda",
            "platform": "Switch",
            "username": "Sam"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "game_stats.fetch_player_statistics",
        "description": "Fetch player statistics for a specific video game for a given user.",
        "parameters": {
          "type": "dict",
          "properties": {
            "game": {
              "type": "string",
              "description": "The name of the video game."
            },
            "username": {
              "type": "string",
              "description": "The username of the player."
            },
            "platform": {
              "type": "string",
              "description": "The platform user is playing on.",
              "default": "PC"
            }
          },
          "required": [
            "game",
            "username"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_344",
    "question": [
      [
        {
          "role": "user",
          "content": "What's the power rating for the Weapon 'Guardian Sword+' in the game 'Legend of Zelda: Breath of the Wild'?",
          "transcript": "Hey, uh, in Legend of Zelda: Breath of the Wild, whats the power rating for the Guardian Sword Plus?",
          "audio_path": "BFCL_v3_simple/simple_344_elevenlabs.mp3",
          "asr_output_openai": "Hey, uh, in Legend of Zelda: Breath of the Wild, what's the power rating for the Guardian Sword+?",
          "asr_output_elevenlabs": "Hey, uh, in Legend of Zelda: Breath of the Wild, what's the power rating for the Guardian Sword+?",
          "asr_output_deepgram": "Hey, in Legend of Zelda, Breath of the Wild, what's the power rating for the Guardian sword plus?",
          "clarifications": {
            "game_name": "Legend of Zelda: Breath of the Wild",
            "item_name": "Guardian Sword+"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_game_item_stats",
        "description": "Retrieve the statistics of a specific item in a specific video game.",
        "parameters": {
          "type": "dict",
          "properties": {
            "game": {
              "type": "string",
              "description": "The game to retrieve information from."
            },
            "item": {
              "type": "string",
              "description": "The name of the item in the game."
            },
            "stat": {
              "type": "string",
              "description": "Specific statistic required."
            }
          },
          "required": [
            "game",
            "item",
            "stat"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_345",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the value of a vintage Super Mario Bros. game from 1985 like new.",
          "transcript": "Hey, um, can you check how much a vintage nineteen eighty-five Super Mario Bros. game thats like new is worth, okay?",
          "audio_path": "BFCL_v3_simple/simple_345_elevenlabs.mp3",
          "asr_output_openai": "Hey, um, can you check how much a vintage 1985 Super Mario Bros. game that's like new is worth, okay?",
          "asr_output_elevenlabs": "Hey, um, can you check how much a vintage 1985 Super Mario Brothers game that's like new is worth, okay?",
          "asr_output_deepgram": "Hey. Can you check how much a vintage nineteen eighty five Super Mario Brothers game that's like new is worth? Okay?",
          "clarifications": {
            "game_name": "Super Mario Bros.",
            "release_year": "1985",
            "condition": "like new"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "game_valuation",
        "description": "Get the current market value of a vintage video game.",
        "parameters": {
          "type": "dict",
          "properties": {
            "game_name": {
              "type": "string",
              "description": "The name of the game."
            },
            "release_year": {
              "type": "integer",
              "description": "The year the game was released."
            },
            "condition": {
              "type": "string",
              "enum": [
                "New",
                "Like New",
                "Used",
                "Fair",
                "Poor"
              ],
              "description": "The condition of the game. Default is 'Used'."
            }
          },
          "required": [
            "game_name",
            "release_year"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_346",
    "question": [
      [
        {
          "role": "user",
          "content": "Get all collectable items from the game 'Animal Crossing: New Horizons' during the Spring season.",
          "transcript": "Uh, can you get all collectable items in Animal Crossing: New Horizons for Spring?",
          "audio_path": "BFCL_v3_simple/simple_346_elevenlabs.mp3",
          "asr_output_openai": "Can you get all collectible items in Animal Crossing: New Horizons for spring?",
          "asr_output_elevenlabs": "Can you get all collectible items in Animal Crossing: New Horizons for spring?",
          "asr_output_deepgram": "Can you get all collectible items in Animal Crossing, New Horizons for spring?",
          "clarifications": {
            "game_name": "Animal Crossing: New Horizons",
            "season": "Spring"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_collectables_in_season",
        "description": "Retrieve a list of collectable items in a specific game during a specified season.",
        "parameters": {
          "type": "dict",
          "properties": {
            "game_name": {
              "type": "string",
              "description": "Name of the game."
            },
            "season": {
              "type": "string",
              "description": "The season for which to retrieve the collectable items."
            },
            "item_type": {
              "type": "string",
              "description": "The type of item to search for. Default is 'all'. Possible values: 'all', 'bug', 'fish', 'sea creatures', etc."
            }
          },
          "required": [
            "game_name",
            "season"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_347",
    "question": [
      [
        {
          "role": "user",
          "content": "Get me the details of the last game played by Liverpool F.C. Include its statistics.",
          "transcript": "Hey, can you get the details and stats from Liverpool F.C.s last game, please?",
          "audio_path": "BFCL_v3_simple/simple_347_elevenlabs.mp3",
          "asr_output_openai": "Hey, can you get the details and stats from Liverpool FC's last game please?",
          "asr_output_elevenlabs": "Hey, can you get the details and stats from Liverpool FC's last game please?",
          "asr_output_deepgram": "Hey. Can you get the details and stats from Liverpool FC's last game, please?",
          "clarifications": {
            "team_name": "Liverpool F.C."
          }
        }
      ]
    ],
    "function": [
      {
        "name": "soccer.get_last_match",
        "description": "Retrieve the details of the last match played by a specified soccer club.",
        "parameters": {
          "type": "dict",
          "properties": {
            "team_name": {
              "type": "string",
              "description": "The name of the soccer club."
            },
            "include_stats": {
              "type": "boolean",
              "description": "If true, include match statistics like possession, shots on target etc. Default is false."
            }
          },
          "required": [
            "team_name"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_348",
    "question": [
      [
        {
          "role": "user",
          "content": "Create a new player profile for the game with name 'StarPlayer' and character class 'Mage', set the starting level to 5.",
          "transcript": "Okay, create a new game profile named StarPlayer with, uh, a Mage character class and start em at level five.",
          "audio_path": "BFCL_v3_simple/simple_348_elevenlabs.mp3",
          "asr_output_openai": "Okay, create a new game profile named StarPlayer with a mage character class and start them at level 5.",
          "asr_output_elevenlabs": "Okay, create a new game profile named Star Player with, uh, a mage character class and start them at level five.",
          "asr_output_deepgram": "Okay. Create a new game profile named star player with, a mage character class and start them at level five.",
          "clarifications": {
            "player_name": "StarPlayer",
            "character_class": "Mage",
            "starting_level": "5"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "create_player_profile",
        "description": "Create a new player profile with character name, class and starting level.",
        "parameters": {
          "type": "dict",
          "properties": {
            "player_name": {
              "type": "string",
              "description": "The desired name of the player."
            },
            "_class": {
              "type": "string",
              "description": "The character class for the player"
            },
            "starting_level": {
              "type": "integer",
              "description": "The starting level for the player",
              "default": 1
            }
          },
          "required": [
            "player_name",
            "_class"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_349",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the highest score achieved by any player in the online game 'Overwatch' on PC globally.",
          "transcript": "Um, whats the highest score any player has hit in Overwatch on PC worldwide?",
          "audio_path": "BFCL_v3_simple/simple_349_elevenlabs.mp3",
          "asr_output_openai": "What's the highest score any player has hit in Overwatch on PC worldwide?",
          "asr_output_elevenlabs": "What's the highest score any player has hit in Overwatch on PC worldwide?",
          "asr_output_deepgram": "What's the highest score any player has hit in Overwatch on PC worldwide?",
          "clarifications": {
            "game_name": "Overwatch",
            "platform": "PC"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "game_score.highest",
        "description": "Retrieve the highest score achieved by any player in a specific game.",
        "parameters": {
          "type": "dict",
          "properties": {
            "game": {
              "type": "string",
              "description": "The name of the online game."
            },
            "platform": {
              "type": "string",
              "description": "The platform where the game is played, e.g. PC, Xbox, Playstation"
            },
            "region": {
              "type": "string",
              "description": "The geographic region of the player. Defaults to 'Global'"
            }
          },
          "required": [
            "game",
            "platform"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_350",
    "question": [
      [
        {
          "role": "user",
          "content": "Get the highest scoring player of game 'Valorant' in 2022 season.",
          "transcript": "Whos the top scorer in V-A-L-O-R-A-N-T, Valorant, for the twenty twenty-two season?",
          "audio_path": "BFCL_v3_simple/simple_350_elevenlabs.mp3",
          "asr_output_openai": "Who\u2019s the top scorer in VALORANT for the 2022 season?",
          "asr_output_elevenlabs": "Who's the top scorer in V-A-L-O-R-A-N-T, Valorant, for the 2022 season?",
          "asr_output_deepgram": "Who's the top scorer in v a l o r a n t, Valorant, for the twenty twenty two season?",
          "clarifications": {
            "game_name": "Valorant",
            "season_year": "2022"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_highest_scoring_player",
        "description": "Retrieve the highest scoring player in a specific game and season.",
        "parameters": {
          "type": "dict",
          "properties": {
            "game": {
              "type": "string",
              "description": "The game in which you want to find the highest scoring player."
            },
            "season": {
              "type": "string",
              "description": "The season during which the high score was achieved."
            }
          },
          "required": [
            "game",
            "season"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_351",
    "question": [
      [
        {
          "role": "user",
          "content": "Find me a multiplayer game with rating above 4.5 and compatible with Windows 10.",
          "transcript": "Um, could you look for a multiplayer game that, uh, works on Windows ten and has a rating over four point five?",
          "audio_path": "BFCL_v3_simple/simple_351_elevenlabs.mp3",
          "asr_output_openai": "Could you look for a multiplayer game that works on Windows 10 and has a rating over 4.5?",
          "asr_output_elevenlabs": "Um, could you look for a multiplayer game that works on Windows 10 and has a rating over 4.5?",
          "asr_output_deepgram": "Could you look for a multiplayer game that, works on Windows ten and has a rating over four point five?",
          "clarifications": {
            "platform": "Windows 10",
            "minimum_rating": "4.5"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "multiplayer_game_finder",
        "description": "Locate multiplayer games that match specific criteria such as rating, platform compatibility, genre, etc.",
        "parameters": {
          "type": "dict",
          "properties": {
            "platform": {
              "type": "string",
              "description": "The platform you want the game to be compatible with, e.g. Windows 10, PS5."
            },
            "rating": {
              "type": "float",
              "description": "Desired minimum game rating on a 5.0 scale."
            },
            "genre": {
              "type": "string",
              "description": "Desired game genre, e.g. Action, Adventure, Racing. Default is 'Action'.",
              "enum": [
                "Action",
                "Adventure",
                "Racing",
                "Strategy",
                "Simulation"
              ]
            }
          },
          "required": [
            "platform",
            "rating"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_352",
    "question": [
      [
        {
          "role": "user",
          "content": "Get the average user score for the game 'The Legend of Zelda: Breath of the Wild' from GameSpot.",
          "transcript": "Um, okay, whats the average user score for The Legend of Zelda: Breath of the Wild on G-A-M-E-S-P-O-T, GameSpot?",
          "audio_path": "BFCL_v3_simple/simple_352_elevenlabs.mp3",
          "asr_output_openai": "Um, okay, what's the average user score for The Legend of Zelda: Breath of the Wild on G-A-M-E-S-P-O-T (GameSpot)?",
          "asr_output_elevenlabs": "Um, okay. What's the average user score for The Legend of Zelda: Breath of the Wild on G-A-M-E-S-P-O-T, GameSpot?",
          "asr_output_deepgram": "Okay. What's the average user score for the Legend of Zelda? Breath of the Wild on g a m e s p o t, GameSpot?",
          "clarifications": {
            "game_name": "The Legend of Zelda: Breath of the Wild"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "gamespot.getAverageUserScore",
        "description": "Retrieve the average user score of a game from GameSpot.",
        "parameters": {
          "type": "dict",
          "properties": {
            "game_name": {
              "type": "string",
              "description": "The name of the game."
            },
            "platform": {
              "type": "string",
              "description": "The platform the game was released on (e.g., Nintendo Switch, PS5, etc.)",
              "default": "all platforms"
            }
          },
          "required": [
            "game_name",
            "platform"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_353",
    "question": [
      [
        {
          "role": "user",
          "content": "What are some gluten-free recipes for dinner?",
          "transcript": "Um, can you gimme, uh, some gluten-free dinner recipes?",
          "audio_path": "BFCL_v3_simple/simple_353_elevenlabs.mp3",
          "asr_output_openai": "Can you give me some gluten-free dinner recipes?",
          "asr_output_elevenlabs": "Um, can you give me, uh, some gluten-free dinner recipes?",
          "asr_output_deepgram": "Can you give me, some gluten free dinner recipes?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "find_recipes",
        "description": "Find recipes based on dietary restrictions, meal type, and preferred ingredients.",
        "parameters": {
          "type": "dict",
          "properties": {
            "diet": {
              "type": "string",
              "description": "The dietary restrictions, e.g., 'vegan', 'gluten-free'."
            },
            "meal_type": {
              "type": "string",
              "description": "The type of meal, e.g., 'dinner', 'breakfast'."
            },
            "ingredients": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The preferred ingredients. If left blank, it will default to return general recipes."
            }
          },
          "required": [
            "diet",
            "meal_type"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_354",
    "question": [
      [
        {
          "role": "user",
          "content": "Find a vegan soup recipe that takes under 30 minutes to make.",
          "transcript": "Hey, can you hook me up with a vegan soup recipe thats quick to make? Under thirty minutes, please.",
          "audio_path": "BFCL_v3_simple/simple_354_elevenlabs.mp3",
          "asr_output_openai": "Hey, can you hook me up with a vegan soup recipe that's quick to make? Under 30 minutes please.",
          "asr_output_elevenlabs": "Hey, can you hook me up with a vegan soup recipe that's quick to make? Under 30 minutes, please?",
          "asr_output_deepgram": "Hey. Can you hook me up with a vegan soup recipe that's quick to make? Under thirty minutes, please.",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "get_vegan_recipe",
        "description": "Retrieve a vegan soup recipe based on the provided cooking time.",
        "parameters": {
          "type": "dict",
          "properties": {
            "dish_type": {
              "type": "string",
              "description": "The type of dish, e.g. soup, dessert, etc.",
              "enum": [
                "soup",
                "main dish",
                "dessert",
                "salad"
              ]
            },
            "cooking_time": {
              "type": "integer",
              "description": "The maximum cooking time for the recipe in minutes."
            },
            "ingredient_preference": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Preferred ingredients to be included in the recipe, if any. Default to not use it if not provided."
            }
          },
          "required": [
            "dish_type",
            "cooking_time"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_355",
    "question": [
      [
        {
          "role": "user",
          "content": "How many calories in the Beef Lasagna Recipe from Foodnetwork.com?",
          "transcript": "Hey, um, can you tell me the calorie count for the Beef Lasagna Recipe on Foodnetwork.com?",
          "audio_path": "BFCL_v3_simple/simple_355_elevenlabs.mp3",
          "asr_output_openai": "Hey, um, can you tell me the calorie count for the beef lasagna recipe on FoodNetwork.com?",
          "asr_output_elevenlabs": "Hey, um, can you tell me the calorie count for the beef lasagna recipe on foodnetwork.com?",
          "asr_output_deepgram": "Hey. Can you tell me the calorie count for the beef lasagna recipe on food network dot com?",
          "clarifications": {
            "website": "Foodnetwork.com",
            "recipe_name": "Beef Lasagna Recipe"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "recipe_info.get_calories",
        "description": "Retrieve the amount of calories from a specific recipe in a food website.",
        "parameters": {
          "type": "dict",
          "properties": {
            "website": {
              "type": "string",
              "description": "The food website that has the recipe."
            },
            "recipe": {
              "type": "string",
              "description": "Name of the recipe."
            },
            "optional_meal_time": {
              "type": "string",
              "description": "Specific meal time of the day for the recipe (optional, could be 'Breakfast', 'Lunch', 'Dinner'). Default is all if not specified."
            }
          },
          "required": [
            "website",
            "recipe"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_356",
    "question": [
      [
        {
          "role": "user",
          "content": "Find me a recipe that serves 2 people, is vegan, and takes under 30 minutes to prepare.",
          "transcript": "Um, can you look up a vegan recipe for two thats, uh, gonna take less than thirty minutes?",
          "audio_path": "BFCL_v3_simple/simple_356_elevenlabs.mp3",
          "asr_output_openai": "Can you look up a vegan recipe for two that's gonna take less than 30 minutes?",
          "asr_output_elevenlabs": "Um, can you look up a vegan recipe for two that's gonna take less than 30 minutes?",
          "asr_output_deepgram": "Can you look up a vegan recipe for two that's gonna take less than thirty minutes?",
          "clarifications": {
            "number_of_servings": "2",
            "dietary_preference": "vegan",
            "preparation_time": "30 minutes"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "recipe_finder.find",
        "description": "Find a recipe based on dietary preferences, number of servings, and preparation time.",
        "parameters": {
          "type": "dict",
          "properties": {
            "servings": {
              "type": "integer",
              "description": "The number of people that the recipe should serve."
            },
            "diet": {
              "type": "string",
              "description": "Any dietary restrictions like 'vegan', 'vegetarian', 'gluten-free' etc."
            },
            "prep_time": {
              "type": "integer",
              "description": "The maximum amount of time (in minutes) the preparation should take. Default is 60 minutes."
            }
          },
          "required": [
            "servings",
            "diet"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_357",
    "question": [
      [
        {
          "role": "user",
          "content": "Get the recipe for vegan chocolate cake including the steps for preparation.",
          "transcript": "Uh, can you get vegan chocolate cake recipe and the prep steps for me?",
          "audio_path": "BFCL_v3_simple/simple_357_elevenlabs.mp3",
          "asr_output_openai": "Can you get vegan chocolate cake recipe and the prep steps for me?",
          "asr_output_elevenlabs": "Uh, can you get vegan chocolate cake recipe and the prep steps for me?",
          "asr_output_deepgram": "Can you get vegan chocolate cake recipe and the prep steps for me?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "get_recipe",
        "description": "Fetch the recipe for a specific dish along with preparation steps.",
        "parameters": {
          "type": "dict",
          "properties": {
            "dish_name": {
              "type": "string",
              "description": "Name of the dish whose recipe needs to be fetched."
            },
            "diet_preference": {
              "type": "string",
              "description": "Preferred dietary consideration like vegan, vegetarian, gluten-free etc. Default is none.",
              "default": "none"
            }
          },
          "required": [
            "dish_name"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_358",
    "question": [
      [
        {
          "role": "user",
          "content": "Find a gluten-free cookie recipe that takes less than 30 minutes to prepare.",
          "transcript": "Could you find, uh, a gluten-free cookie recipe that, um, takes under thirty minutes to make? Thanks.",
          "audio_path": "BFCL_v3_simple/simple_358_elevenlabs.mp3",
          "asr_output_openai": "Could you find a gluten-free cookie recipe that takes under 30 minutes to make? Thanks.",
          "asr_output_elevenlabs": "Could you find a, a gluten-free cookie recipe that, um, takes under 30 minutes to make? Thanks.",
          "asr_output_deepgram": "Could you find, a gluten free cookie recipe that, takes under thirty minutes to make? Thanks.",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "recipe_search",
        "description": "Search for a cooking recipe based on specific dietary needs and time constraint.",
        "parameters": {
          "type": "dict",
          "properties": {
            "diet": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Gluten Free",
                  "Dairy Free",
                  "Vegan",
                  "Vegetarian"
                ]
              },
              "description": "Specific dietary need."
            },
            "time_limit": {
              "type": "integer",
              "description": "The maximum time to prepare the recipe in minutes. Default is 60 minutes."
            },
            "dish": {
              "type": "string",
              "description": "The name of the dish to search for. Default is not use if not specified."
            }
          },
          "required": [
            "dish",
            "diet"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_359",
    "question": [
      [
        {
          "role": "user",
          "content": "Give me a recipe for a vegetarian pasta with cheese for 2 servings.",
          "transcript": "Um, can I have the recipe for, uh, vegetarian pasta with cheese for two servings, thanks?",
          "audio_path": "BFCL_v3_simple/simple_359_elevenlabs.mp3",
          "asr_output_openai": "Um, can I have the recipe for a vegetarian pasta with cheese for two servings, thanks?",
          "asr_output_elevenlabs": "Um, can I have the recipe for a vegetarian pasta with cheese for two servings? Thanks.",
          "asr_output_deepgram": "Can I have the recipe for a vegetarian pasta with cheese for two servings? Thanks.",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "recipe_search",
        "description": "Search for a recipe given dietary restriction, ingredients, and number of servings.",
        "parameters": {
          "type": "dict",
          "properties": {
            "dietary_restriction": {
              "type": "string",
              "description": "The dietary restriction, e.g., 'Vegetarian'."
            },
            "ingredients": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The list of ingredients."
            },
            "servings": {
              "type": "integer",
              "description": "The number of servings the recipe should make"
            }
          },
          "required": [
            "dietary_restriction",
            "ingredients",
            "servings"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_360",
    "question": [
      [
        {
          "role": "user",
          "content": "Find a recipe for pasta carbonara which contains only less than 500 calories.",
          "transcript": "Uh, can you get the pasta carbonara recipe thats, um, under 500 calories, right?",
          "audio_path": "BFCL_v3_simple/simple_360_elevenlabs.mp3",
          "asr_output_openai": "Can you get the pasta carbonara recipe that's under 500 calories, right?",
          "asr_output_elevenlabs": "Uh, can you get the pasta carbonara recipe that's um, under five hundred calories right?",
          "asr_output_deepgram": "Can you get the pasta carbonara recipe that's, under five hundred calories. Right?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "find_recipe",
        "description": "Locate a recipe based on name and its calorie content",
        "parameters": {
          "type": "dict",
          "properties": {
            "recipeName": {
              "type": "string",
              "description": "The recipe's name."
            },
            "maxCalories": {
              "type": "integer",
              "description": "The maximum calorie content of the recipe.",
              "default": 1000
            }
          },
          "required": [
            "recipeName"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_361",
    "question": [
      [
        {
          "role": "user",
          "content": "Find Italian restaurants near New York city that serves gluten-free options.",
          "transcript": "Um, can you, uh, find Italian restaurants around New York City, thats N-E-W space Y-O-R-K space C-I-T-Y, New York City, with gluten-free menus, thanks?",
          "audio_path": "BFCL_v3_simple/simple_361_elevenlabs.mp3",
          "asr_output_openai": "Um, can you find Italian restaurants around New York City, that's N-E-W space Y-O-R-K space C-I-T-Y, New York City, with gluten-free menus, thanks?",
          "asr_output_elevenlabs": "Uhm, can you, uh, find Italian restaurants around New York City, that's N-E-W space Y-O-R-K space C-I-T-Y, New York City, with gluten-free menus? Thanks.",
          "asr_output_deepgram": "Can you, find Italian restaurants around New York City? That's n e w space y o r k space c I t y, New York City, with gluten free menus. Thanks.",
          "clarifications": {
            "city": "New York"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "restaurant_finder",
        "description": "Locate restaurants based on certain criteria such as cuisine, city, and dietary preferences.",
        "parameters": {
          "type": "dict",
          "properties": {
            "city": {
              "type": "string",
              "description": "City where you are looking for the restaurant."
            },
            "cuisine": {
              "type": "string",
              "description": "Type of cuisine you are interested in."
            },
            "diet": {
              "type": "string",
              "description": "Dietary preferences. e.g. 'Vegetarian', 'Gluten-free', etc. Default 'Vegetarian'."
            }
          },
          "required": [
            "city",
            "cuisine"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_362",
    "question": [
      [
        {
          "role": "user",
          "content": "What are the top five sushi restaurants with high reviews i.e. above 4/5 in Tokyo?",
          "transcript": "Hey, can you, uh, find top five sushi spots in Tokyo with reviews over four outta five?",
          "audio_path": "BFCL_v3_simple/simple_362_elevenlabs.mp3",
          "asr_output_openai": "Hey, can you find top five sushi spots in Tokyo with reviews over four out of five?",
          "asr_output_elevenlabs": "Hey, can you find top five sushi spots in Tokyo with reviews over four out of five?",
          "asr_output_deepgram": "Hey. Can you, find top five sushi spots in Tokyo with reviews over four out of five?",
          "clarifications": {
            "city": "Tokyo",
            "top_number": "five",
            "review_rate": "4/5"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_best_sushi_places",
        "description": "Returns the best sushi places given the city, review_rate and top number.",
        "parameters": {
          "type": "dict",
          "properties": {
            "city": {
              "type": "string",
              "description": "The city in which to look for the sushi places."
            },
            "top": {
              "type": "integer",
              "description": "The number of top sushi places to be returned."
            },
            "review_rate": {
              "type": "float",
              "description": "The review rating to filter the sushi places. Places with review ratings above this value will be returned. Default 0.00."
            }
          },
          "required": [
            "city",
            "top"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_363",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the closest sushi restaurant with a patio in Boston.",
          "transcript": "Hey, um, can you find me nearest sushi place with a patio in Boston? Thanks!",
          "audio_path": "BFCL_v3_simple/simple_363_elevenlabs.mp3",
          "asr_output_openai": "Hey, um, can you find me nearest sushi place with a patio in Boston? Thanks.",
          "asr_output_elevenlabs": "Hey, um, can you find me nearest sushi place with a patio in Boston? Thanks.",
          "asr_output_deepgram": "Hey, can you find me nearest sushi place with a patio in Boston? Thanks.",
          "clarifications": {
            "location": "Boston",
            "cuisine": "sushi"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "restaurant_search.find_closest",
        "description": "Locate the closest sushi restaurant based on certain criteria, such as the presence of a patio.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city, for instance Boston, MA"
            },
            "cuisine": {
              "type": "string",
              "description": "Type of food like Sushi."
            },
            "amenities": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Patio",
                  "Wi-Fi",
                  "Happy Hour",
                  "Wheelchair Accessible"
                ]
              },
              "description": "Preferred amenities in the restaurant. Default 'Wi-Fi'."
            }
          },
          "required": [
            "location",
            "cuisine"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_364",
    "question": [
      [
        {
          "role": "user",
          "content": "Can I find an Italian restaurant with Gluten-free options near Brooklyn?",
          "transcript": "Hey, um, is there a spot serving Italian dishes with, uh, those gluten-free options anywhere in Brooklyn?",
          "audio_path": "BFCL_v3_simple/simple_364_elevenlabs.mp3",
          "asr_output_openai": "Hey, is there a spot serving Italian dishes with those gluten-free options anywhere in Brooklyn?",
          "asr_output_elevenlabs": "Hey, uhm, is there a spot serving Italian dishes with those gluten-free options anywhere in Brooklyn?",
          "asr_output_deepgram": "Hey. Is there a spot serving Italian dishes with, those gluten free options anywhere in Brooklyn?",
          "clarifications": {
            "location": "Brooklyn",
            "type": "Italian",
            "diet_option": "Gluten-free"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "find_restaurant",
        "description": "Locate nearby restaurants based on user defined criteria",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The location where user wants to search for a restaurant."
            },
            "type": {
              "type": "string",
              "description": "The type of the cuisine/restaurant."
            },
            "diet_option": {
              "type": "string",
              "description": "Special dietary preferences."
            }
          },
          "required": [
            "location",
            "type",
            "diet_option"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_365",
    "question": [
      [
        {
          "role": "user",
          "content": "How many ounces in 2 pounds of butter?",
          "transcript": "Hey, how many ounces are there in two pounds of butter?",
          "audio_path": "BFCL_v3_simple/simple_365_elevenlabs.mp3",
          "asr_output_openai": "Hey, how many ounces are there in two pounds of butter?",
          "asr_output_elevenlabs": "Hey, how many ounces are there in two pounds of butter?",
          "asr_output_deepgram": "Hey. How many ounces are there in two pounds of butter?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "cooking_conversion.convert",
        "description": "Convert cooking measurements from one unit to another.",
        "parameters": {
          "type": "dict",
          "properties": {
            "quantity": {
              "type": "integer",
              "description": "The quantity to be converted."
            },
            "from_unit": {
              "type": "string",
              "description": "The unit to convert from."
            },
            "to_unit": {
              "type": "string",
              "description": "The unit to convert to."
            },
            "item": {
              "type": "string",
              "description": "The item to be converted."
            }
          },
          "required": [
            "quantity",
            "from_unit",
            "to_unit",
            "item"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_366",
    "question": [
      [
        {
          "role": "user",
          "content": "How many teaspoons are in 2 tablespoons for measurement in my recipe?",
          "transcript": "Hey, um, right, how many teaspoons equal two tablespoons for my recipe?",
          "audio_path": "BFCL_v3_simple/simple_366_elevenlabs.mp3",
          "asr_output_openai": "Hey, um, right, how many teaspoons equal two tablespoons for my recipe?",
          "asr_output_elevenlabs": "Hey, um, right. How many teaspoons equal two tablespoons for my recipe?",
          "asr_output_deepgram": "Hey. Right. How many teaspoons equal two tablespoons for my recipe?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "recipe.unit_conversion",
        "description": "Convert a value from one kitchen unit to another for cooking purposes.",
        "parameters": {
          "type": "dict",
          "properties": {
            "value": {
              "type": "integer",
              "description": "The value to be converted."
            },
            "from_unit": {
              "type": "string",
              "description": "The unit to convert from. Supports 'teaspoon', 'tablespoon', 'cup', etc."
            },
            "to_unit": {
              "type": "string",
              "description": "The unit to convert to. Supports 'teaspoon', 'tablespoon', 'cup', etc."
            },
            "precision": {
              "type": "integer",
              "description": "The precision to round the output to, in case of a non-integer result. Optional, default is 1."
            }
          },
          "required": [
            "value",
            "from_unit",
            "to_unit"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_367",
    "question": [
      [
        {
          "role": "user",
          "content": "Find me a vegan recipe for brownies which prep time is under 30 minutes.",
          "transcript": "Could you hook me up with vegan brownie recipe, uh, with a prep time under thirty minutes?",
          "audio_path": "BFCL_v3_simple/simple_367_elevenlabs.mp3",
          "asr_output_openai": "Could you hook me up with vegan brownie recipe, with a prep time under 30 minutes?",
          "asr_output_elevenlabs": "Could you hook me up with vegan brownie recipe, uh, with a prep time under 30 minutes?",
          "asr_output_deepgram": "Could you hook me up with vegan brownie recipe? With a prep time under thirty minutes.",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "find_recipe",
        "description": "Find a recipe based on the dietary restrictions, recipe type, and time constraints.",
        "parameters": {
          "type": "dict",
          "properties": {
            "dietary_restrictions": {
              "type": "string",
              "description": "Dietary restrictions e.g. vegan, vegetarian, gluten free, dairy free."
            },
            "recipe_type": {
              "type": "string",
              "description": "Type of the recipe. E.g. dessert, main course, breakfast."
            },
            "time": {
              "type": "integer",
              "description": "Time limit in minutes to prep the meal."
            }
          },
          "required": [
            "dietary_restrictions",
            "recipe_type",
            "time"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_368",
    "question": [
      [
        {
          "role": "user",
          "content": "How much time will it take to cook a roast chicken of 1.5 kg?",
          "transcript": "Uh, hey, how long does it take ya to cook one and a half kilo roast chicken, right?",
          "audio_path": "BFCL_v3_simple/simple_368_elevenlabs.mp3",
          "asr_output_openai": "Hey, how long does it take you to cook one and a half kilo roast chicken, right?",
          "asr_output_elevenlabs": "Uh, hey. How long does it take you to cook one and a half kilo roast chicken, right?",
          "asr_output_deepgram": "Hey. How long does it take you to cook one and a half kilo roast chicken? Right?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "calculate_cooking_time",
        "description": "Calculate the cooking time for a roast chicken.",
        "parameters": {
          "type": "dict",
          "properties": {
            "weight_kg": {
              "type": "float",
              "description": "The weight of the chicken in kilograms."
            },
            "cooking_method": {
              "type": "string",
              "description": "The method of cooking, defaults to 'roast'."
            },
            "temp_celsius": {
              "type": "integer",
              "description": "The cooking temperature in degrees celsius, defaults to 180."
            }
          },
          "required": [
            "weight_kg"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_369",
    "question": [
      [
        {
          "role": "user",
          "content": "Find a grocery store near me with organic fruits and vegetables in Houston.",
          "transcript": "Hey, uh, can you find a grocery store in Houston that sells organic fruits and veggies nearby?",
          "audio_path": "BFCL_v3_simple/simple_369_elevenlabs.mp3",
          "asr_output_openai": "Hey, can you find a grocery store in Houston that sells organic fruits and veggies nearby?",
          "asr_output_elevenlabs": "Hey, uh, can you find a grocery store in Houston that sells organic fruits and veggies nearby?",
          "asr_output_deepgram": "Hey, can you find a grocery store in Houston that sells organic fruits and veggies nearby?",
          "clarifications": {
            "location": "Houston"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "grocery_store.find_nearby",
        "description": "Locate nearby grocery stores based on specific criteria like organic fruits and vegetables.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city and state, e.g. Houston, TX"
            },
            "categories": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Organic",
                  "Vegetables",
                  "Fruits",
                  "Dairy",
                  "Seafood",
                  "Bakery"
                ]
              },
              "description": "Categories of items to be found in the grocery store. Default is all if not specified."
            }
          },
          "required": [
            "location"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_370",
    "question": [
      [
        {
          "role": "user",
          "content": "Order three bottles of olive oil and a five pound bag of rice from Safeway in Palo Alto.",
          "transcript": "Get three bottles of olive oil and a five-pound bag of rice from Safeway in Palo Alto.",
          "audio_path": "BFCL_v3_simple/simple_370_elevenlabs.mp3",
          "asr_output_openai": "Get three bottles of olive oil and a five-pound bag of rice from Safeway in Palo Alto.",
          "asr_output_elevenlabs": "Get three bottles of olive oil and a five-pound bag of rice from Safeway in Palo Alto.",
          "asr_output_deepgram": "Get three bottles of olive oil and a five pound bag of rice from Safeway in Palo Alto.",
          "clarifications": {
            "store_location": "Palo Alto",
            "store_name": "Safeway"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "safeway.order",
        "description": "Order specified items from a Safeway location.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The location of the Safeway store, e.g. Palo Alto, CA."
            },
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of items to order."
            },
            "quantity": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "Quantity of each item in the order list."
            }
          },
          "required": [
            "location",
            "items",
            "quantity"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_371",
    "question": [
      [
        {
          "role": "user",
          "content": "Check the price of tomatoes and lettuce at the Whole Foods in Los Angeles.",
          "transcript": "Hey, could you figure out, uh, how much tomatoes and lettuce cost at Whole Foods in Los Angeles, please?",
          "audio_path": "BFCL_v3_simple/simple_371_elevenlabs.mp3",
          "asr_output_openai": "Hey, could you figure out how much tomatoes and lettuce cost at Whole Foods in Los Angeles, please?",
          "asr_output_elevenlabs": "Hey, could you figure out how much tomatoes and lettuce cost at Whole Foods in Los Angeles please?",
          "asr_output_deepgram": "Hey. Could you figure out, how much tomatoes and lettuce cost at Whole Foods in Los Angeles, please?",
          "clarifications": {
            "store_location": "Whole Foods in Los Angeles",
            "item1": "tomatoes",
            "item2": "lettuce"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "whole_foods.check_price",
        "description": "Check the price of items at a specific Whole Foods location.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "Location of the Whole Foods store."
            },
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of items for which the price needs to be checked."
            }
          },
          "required": [
            "location",
            "items"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_372",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the top five organic bananas brands on the basis of rating from Whole Foods store.",
          "transcript": "Um, hey, can you look up the top five brands of organic bananas, based on their ratings from Whole Foods?",
          "audio_path": "BFCL_v3_simple/simple_372_elevenlabs.mp3",
          "asr_output_openai": "Um, hey, can you look up the top five brands of organic bananas based on their ratings from Whole Foods?",
          "asr_output_elevenlabs": "Um, hey, can you look up the top five brands of organic bananas based on their ratings from Whole Foods?",
          "asr_output_deepgram": "Hey. Can you look up the top five brands of organic bananas based on their ratings from Whole Foods?",
          "clarifications": {
            "product": "organic bananas",
            "store_name": "Whole Foods"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "whole_foods.find_top_brands",
        "description": "Get top brands based on a specific product from Whole Foods",
        "parameters": {
          "type": "dict",
          "properties": {
            "product": {
              "type": "string",
              "description": "The product for which the top brands should be fetched."
            },
            "number": {
              "type": "integer",
              "description": "Number of top brands to be fetched. Default is 5"
            },
            "organic": {
              "type": "boolean",
              "description": "If the product should be organic. Default is false"
            }
          },
          "required": [
            "product"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_373",
    "question": [
      [
        {
          "role": "user",
          "content": "I want to buy apples, rice, and 12 pack of bottled water from a Walmart near San Jose. Show me the product information and stock availability.",
          "transcript": "Um, can you check if theres a Walmart near San Jose thats got apples, uh, rice, and a twelve pack of bottled water in stock? Oh, and show me the product details too.",
          "audio_path": "BFCL_v3_simple/simple_373_elevenlabs.mp3",
          "asr_output_openai": "Um, can you check if there's a Walmart near San Jose that's got apples, uh, rice, and a 12-pack of bottled water in stock? Oh, and show me the product details too.",
          "asr_output_elevenlabs": "Um, can you check if there's a Walmart near San Jose that's got apples, uh, rice and a 12-pack of bottled water in stock? Oh, and show me the product details too.",
          "asr_output_deepgram": "Can you check if there's a Walmart near San Jose that's got apples, rice, and a twelve pack of bottled water in stock? Oh, and show me the product details too.",
          "clarifications": {
            "location": "San Jose",
            "pack_size": "12"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "walmart.purchase",
        "description": "Retrieve information of items from Walmart including stock availability.",
        "parameters": {
          "type": "dict",
          "properties": {
            "loc": {
              "type": "string",
              "description": "Location of the nearest Walmart."
            },
            "product_list": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Items to be purchased listed in an array."
            },
            "pack_size": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "Size of the product pack if applicable. The size of the array should be equal to product_list. Default is not use it if not specified."
            }
          },
          "required": [
            "loc",
            "product_list"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_374",
    "question": [
      [
        {
          "role": "user",
          "content": "Check the amount of protein, calories and carbs in an avocado from Walmart.",
          "transcript": "Uh, could you tell me protein, calorie, and carb content of an avocado from Walmart, thats W-A-L-M-A-R-T, Walmart?",
          "audio_path": "BFCL_v3_simple/simple_374_elevenlabs.mp3",
          "asr_output_openai": "Could you tell me protein, calorie, and carb content of an avocado from Walmart?",
          "asr_output_elevenlabs": "Uh, could you tell me protein, calorie, and carb content of an avocado from Walmart? That's W-A-L-M-A-R-T, Walmart.",
          "asr_output_deepgram": "Could you tell me protein, calorie, and carb content of an avocado from Walmart? That's w a l m a r t Walmart.",
          "clarifications": {
            "store_name": "Walmart",
            "food_item": "avocado"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "grocery_info.nutritional_info",
        "description": "Retrieve nutritional information for a given food item from a particular store",
        "parameters": {
          "type": "dict",
          "properties": {
            "store": {
              "type": "string",
              "description": "The store where the item is available"
            },
            "food": {
              "type": "string",
              "description": "Food item for which information is needed."
            },
            "information": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Protein",
                  "Calories",
                  "Carbohydrates",
                  "Fat",
                  "Fiber"
                ]
              },
              "description": "Nutritional details required."
            }
          },
          "required": [
            "store",
            "food",
            "information"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_375",
    "question": [
      [
        {
          "role": "user",
          "content": "Check the total price for three pumpkins and two dozen eggs at Walmart.",
          "transcript": "Hey, uh, can you find out the total cost for, like, three pumpkins and two dozen eggs at Walmart? Thanks.",
          "audio_path": "BFCL_v3_simple/simple_375_elevenlabs.mp3",
          "asr_output_openai": "Hey, can you find out the total cost for like three pumpkins and two dozen eggs at Walmart? Thanks.",
          "asr_output_elevenlabs": "Hey, uh, can you find out the total cost for like three pumpkins and two dozen eggs at Walmart? Thanks.",
          "asr_output_deepgram": "Hey. Can you find out the total cost for, like, three pumpkins and two dozen eggs at Walmart? Thanks.",
          "clarifications": {
            "store_name": "Walmart"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "walmart.check_price",
        "description": "Calculate total price for given items and their quantities at Walmart.",
        "parameters": {
          "type": "dict",
          "properties": {
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of items to be priced."
            },
            "quantities": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "Quantity of each item corresponding to the items list."
            },
            "store_location": {
              "type": "string",
              "description": "The store location for specific pricing (optional). Default to all if not specified."
            }
          },
          "required": [
            "items",
            "quantities"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_376",
    "question": [
      [
        {
          "role": "user",
          "content": "What time is it currently in London, UK in 24 hour format?",
          "transcript": "Okay, whats the current time in London, UK, in twenty-four hour format?",
          "audio_path": "BFCL_v3_simple/simple_376_elevenlabs.mp3",
          "asr_output_openai": "Okay, what's the current time in London, UK, in 24-hour format?",
          "asr_output_elevenlabs": "Okay, what's the current time in London, UK in 24-hour format?",
          "asr_output_deepgram": "Okay. What's the current time in London, UK, in twenty four hour format?",
          "clarifications": {
            "city": "London",
            "country": "UK",
            "display_format": "24 hour"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "time_zone_converter",
        "description": "Retrieve the current time of a specific city.",
        "parameters": {
          "type": "dict",
          "properties": {
            "city": {
              "type": "string",
              "description": "The city you want to know the current time for."
            },
            "country": {
              "type": "string",
              "description": "The country where the city is located."
            },
            "display_format": {
              "type": "string",
              "description": "The time display format: '12h' or '24h'. Default is '24h'."
            }
          },
          "required": [
            "city",
            "country"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_377",
    "question": [
      [
        {
          "role": "user",
          "content": "What is the current time in Sydney, Australia?",
          "transcript": "Hey, uh, what time is it right now in Sydney, Australia, thanks?",
          "audio_path": "BFCL_v3_simple/simple_377_elevenlabs.mp3",
          "asr_output_openai": "Hey, what time is it right now in Sydney, Australia, thanks?",
          "asr_output_elevenlabs": "Hey, uh, what time is it right now in Sydney, Australia? Thanks.",
          "asr_output_deepgram": "Hey. What time is it right now in Sydney, Australia? Thanks.",
          "clarifications": {
            "city": "Sydney",
            "country": "Australia"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_current_time",
        "description": "Retrieve the current time for a specified city and country.",
        "parameters": {
          "type": "dict",
          "properties": {
            "city": {
              "type": "string",
              "description": "The city for which the current time is to be retrieved."
            },
            "country": {
              "type": "string",
              "description": "The country where the city is located."
            },
            "format": {
              "type": "string",
              "description": "The format in which the time is to be displayed, optional (defaults to 'HH:MM:SS')."
            }
          },
          "required": [
            "city",
            "country"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_378",
    "question": [
      [
        {
          "role": "user",
          "content": "Convert time 3pm from New York time zone to London time zone.",
          "transcript": "Um, in London, whats three PM New York time, uh?",
          "audio_path": "BFCL_v3_simple/simple_378_elevenlabs.mp3",
          "asr_output_openai": "Um, in London, what's 3pm New York time?",
          "asr_output_elevenlabs": "Um, in London. What's 3 p.m. New York time? Uh.",
          "asr_output_deepgram": "In London, what's three PM New York time?",
          "clarifications": {
            "time": "3pm",
            "from_timezone": "New York",
            "to_timezone": "London"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "timezone.convert",
        "description": "Convert time from one time zone to another.",
        "parameters": {
          "type": "dict",
          "properties": {
            "time": {
              "type": "string",
              "description": "The local time you want to convert, e.g. 3pm"
            },
            "from_timezone": {
              "type": "string",
              "description": "The time zone you want to convert from."
            },
            "to_timezone": {
              "type": "string",
              "description": "The time zone you want to convert to."
            }
          },
          "required": [
            "time",
            "from_timezone",
            "to_timezone"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_379",
    "question": [
      [
        {
          "role": "user",
          "content": "What's the current time in Sydney, Australia?",
          "transcript": "Hey, uh, whats the time now in Sydney, Australia?",
          "audio_path": "BFCL_v3_simple/simple_379_elevenlabs.mp3",
          "asr_output_openai": "Hey, what's the time now in Sydney, Australia?",
          "asr_output_elevenlabs": "Hey, uh, what's the time now in Sydney, Australia?",
          "asr_output_deepgram": "Hey. What's the time now in Sydney, Australia?",
          "clarifications": {
            "location": "Sydney",
            "country": "Australia"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_current_time",
        "description": "Retrieve the current time in a specific time zone.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The name of the city."
            },
            "country": {
              "type": "string",
              "description": "The name of the country."
            },
            "timezone": {
              "type": "string",
              "description": "The optional timezone to get current time. Default "
            }
          },
          "required": [
            "location",
            "country"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_380",
    "question": [
      [
        {
          "role": "user",
          "content": "Book a single room at a pet friendly hotel near Manhattan, New York for 3 nights starting from March 10th, 2023.",
          "transcript": "Hey, can you book a single room at a pet-friendly hotel near Manhattan for three nights starting March tenth, two thousand twenty-three, thanks?",
          "audio_path": "BFCL_v3_simple/simple_380_elevenlabs.mp3",
          "asr_output_openai": "Hey, can you book a single room at a pet-friendly hotel near Manhattan for three nights starting March 10, 2023? Thanks!",
          "asr_output_elevenlabs": "Hey, can you book a single room at a pet-friendly hotel near Manhattan for three nights starting March 10th, 2023? Thanks.",
          "asr_output_deepgram": "Hey. Can you book a single room at a pet friendly hotel near Manhattan for three nights starting March tenth two thousand twenty three? Thanks.",
          "clarifications": {
            "location": "Manhattan, New York",
            "room_type": "single",
            "duration": "3 nights",
            "start_date": "March 10th, 2023",
            "preferences": "pet friendly"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "hotel_booking",
        "description": "Books a hotel room given the location, room type, stay duration and any additional preferences.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city where you want to book the hotel."
            },
            "room_type": {
              "type": "string",
              "description": "Type of the room required. Options: 'single', 'double', 'deluxe', etc."
            },
            "duration": {
              "type": "integer",
              "description": "The number of nights you want to book the hotel for."
            },
            "start_date": {
              "type": "string",
              "description": "The date when your stay begins."
            },
            "preferences": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pet_friendly",
                  "gym",
                  "swimming_pool",
                  "free_breakfast",
                  "parking"
                ]
              },
              "description": "Optional preferences of stay at the hotel. Default to use all if not specified."
            }
          },
          "required": [
            "location",
            "room_type",
            "duration",
            "start_date"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_381",
    "question": [
      [
        {
          "role": "user",
          "content": "Check if any Hilton Hotel is available for two adults in Paris from 2023 April 4th to April 8th?",
          "transcript": "Um, can you check if theres a Hilton Hotel available in Paris for two adults from April fourth to the eighth, twenty twenty-three?",
          "audio_path": "BFCL_v3_simple/simple_381_elevenlabs.mp3",
          "asr_output_openai": "Um, can you check if there's a Hilton hotel available in Paris for two adults from April 4th to the 8th, 2023?",
          "asr_output_elevenlabs": "Um, can you check if there's a Hilton hotel available in Paris for two adults from April 4th to the 8th, 2023?",
          "asr_output_deepgram": "Can you check if there's a Hilton hotel available in Paris for two adults from April fourth to the eighth twenty twenty three?",
          "clarifications": {
            "location": "Paris",
            "check_in_date": "2023 April 4th",
            "check_out_date": "April 8th",
            "no_of_adults": "two",
            "hotel_chain": "Hilton Hotel"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "hilton_hotel.check_availability",
        "description": "Check hotel availability for a specific location and time frame.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city where you want to check hotel availability."
            },
            "check_in_date": {
              "type": "string",
              "description": "The check-in date in the format YYYY-MM-DD."
            },
            "check_out_date": {
              "type": "string",
              "description": "The check-out date in the format YYYY-MM-DD."
            },
            "no_of_adults": {
              "type": "integer",
              "description": "The number of adults for the hotel booking."
            },
            "hotel_chain": {
              "type": "string",
              "description": "The hotel chain where you want to book the hotel.",
              "default": "Hilton"
            }
          },
          "required": [
            "location",
            "check_in_date",
            "check_out_date",
            "no_of_adults"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_382",
    "question": [
      [
        {
          "role": "user",
          "content": "Book a single room for two nights at the Hilton Hotel in Chicago, starting from 10th December 2022.",
          "transcript": "Lemme see... book single room for a couple of nights at Hilton in Chicago, starting December tenth, twenty-twenty-two.",
          "audio_path": "BFCL_v3_simple/simple_382_elevenlabs.mp3",
          "asr_output_openai": "Let me see: book single room for a couple of nights at Hilton in Chicago, starting December 10th, 2022",
          "asr_output_elevenlabs": "Let me see. Book single room for a couple of nights at Hilton in Chicago, starting December 10th, 2022.",
          "asr_output_deepgram": "Let me see. Book single room for a couple of nights at Hilton in Chicago starting December tenth twenty twenty two.",
          "clarifications": {
            "hotel_name": "Hilton Hotel",
            "location": "Chicago",
            "start_date": "10th December 2022"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "book_hotel",
        "description": "Book a room of specified type for a particular number of nights at a specific hotel, starting from a specified date.",
        "parameters": {
          "type": "dict",
          "properties": {
            "hotel_name": {
              "type": "string",
              "description": "The name of the hotel."
            },
            "location": {
              "type": "string",
              "description": "The city in which the hotel is located."
            },
            "room_type": {
              "type": "string",
              "description": "The type of room to be booked."
            },
            "start_date": {
              "type": "string",
              "description": "The start date for the booking."
            },
            "nights": {
              "type": "integer",
              "description": "The number of nights for which the booking is to be made."
            }
          },
          "required": [
            "hotel_name",
            "location",
            "room_type",
            "start_date",
            "nights"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_383",
    "question": [
      [
        {
          "role": "user",
          "content": "I would like to book a single room for two nights at The Plaza hotel.",
          "transcript": "Get a single room at The Plaza for two nights.",
          "audio_path": "BFCL_v3_simple/simple_383_elevenlabs.mp3",
          "asr_output_openai": "Get a single room at the Plaza for two nights.",
          "asr_output_elevenlabs": "Get a single room at The Plaza for two nights.",
          "asr_output_deepgram": "Get a single room at the plaza for two nights.",
          "clarifications": {
            "hotel_name": "The Plaza",
            "room_type": "single",
            "num_nights": "two"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "book_room",
        "description": "Book a room in a specified hotel.",
        "parameters": {
          "type": "dict",
          "properties": {
            "hotel_name": {
              "type": "string",
              "description": "The name of the hotel."
            },
            "room_type": {
              "type": "string",
              "description": "The type of room to be booked."
            },
            "num_nights": {
              "type": "integer",
              "description": "The number of nights to book the room for."
            }
          },
          "required": [
            "hotel_name",
            "room_type",
            "num_nights"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_384",
    "question": [
      [
        {
          "role": "user",
          "content": "Book a hotel room for two adults and one child in Paris, France from July 10, 2022 to July 20, 2022.",
          "transcript": "Book a hotel room in Paris for two adults and one child from July tenth to July twentieth, twenty-twenty-two.",
          "audio_path": "BFCL_v3_simple/simple_384_elevenlabs.mp3",
          "asr_output_openai": "Book a hotel room in Paris for two adults and one child from July 10th to July 20th, 2022.",
          "asr_output_elevenlabs": "Book a hotel room in Paris for two adults and one child from July 10th to July 20th, 2022.",
          "asr_output_deepgram": "Book a hotel room in Paris for two adults and one child from July tenth to July twentieth twenty twenty two.",
          "clarifications": {
            "city": "Paris, France",
            "from_date": "July 10, 2022",
            "to_date": "July 20, 2022"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "hotel_booking.book",
        "description": "Book a hotel room given the city, date, and the number of adults and children.",
        "parameters": {
          "type": "dict",
          "properties": {
            "city": {
              "type": "string",
              "description": "The city where the hotel is located."
            },
            "from_date": {
              "type": "string",
              "description": "The start date of the booking. The format is MM-DD-YYYY."
            },
            "to_date": {
              "type": "string",
              "description": "The end date of the booking. The format is MM-DD-YYYY."
            },
            "adults": {
              "type": "integer",
              "description": "The number of adults for the booking."
            },
            "children": {
              "type": "integer",
              "description": "The number of children for the booking."
            },
            "room_type": {
              "type": "string",
              "description": "The type of the room, default is 'Standard'. Options are 'Standard', 'Deluxe', 'Suite'.",
              "default": "Standard"
            }
          },
          "required": [
            "city",
            "from_date",
            "to_date",
            "adults",
            "children"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_385",
    "question": [
      [
        {
          "role": "user",
          "content": "Book a hotel room with king size bed in Los Angeles for 2 nights starting from 15th October,2023.",
          "transcript": "Book hotel room with a king-size bed in Los Angeles for two nights starting October fifteenth, twenty-twenty-three.",
          "audio_path": "BFCL_v3_simple/simple_385_elevenlabs.mp3",
          "asr_output_openai": "Book hotel room with a king-size bed in Los Angeles for two nights starting October 15, 2023.",
          "asr_output_elevenlabs": "Book hotel room with a king size bed in Los Angeles for two nights starting October 15th, 2023.",
          "asr_output_deepgram": "Book hotel room with a king-size bed in Los Angeles for two nights starting October fifteenth twenty twenty three.",
          "clarifications": {
            "location": "Los Angeles",
            "room_type": "king size",
            "check_in_date": "15th October, 2023",
            "no_of_nights": "2"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "hotel_bookings.book_room",
        "description": "Book a hotel room based on specific criteria like location, room type, and check-in and check-out dates.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city and state where you want to book the hotel, e.g. Los Angeles, CA"
            },
            "room_type": {
              "type": "string",
              "description": "Preferred type of room in the hotel, e.g. king size, queen size, deluxe, suite etc."
            },
            "check_in_date": {
              "type": "string",
              "description": "Check-in date for the hotel. Format - DD-MM-YYYY."
            },
            "no_of_nights": {
              "type": "integer",
              "description": "Number of nights for the stay."
            },
            "no_of_rooms": {
              "type": "integer",
              "description": "Number of rooms to book. Default is 1.",
              "default": 1
            }
          },
          "required": [
            "location",
            "room_type",
            "check_in_date",
            "no_of_nights"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_386",
    "question": [
      [
        {
          "role": "user",
          "content": "Book a luxury room in Hotel Paradise, Las Vegas, with a city view for 3 days starting from May 12, 2022.",
          "transcript": "Can you book a swanky room at Hotel Paradise in Las Vegas with a city view for three days, starting May twelfth, twenty-twenty-two?",
          "audio_path": "BFCL_v3_simple/simple_386_elevenlabs.mp3",
          "asr_output_openai": "Can you book a swanky room at Hotel Paradise in Las Vegas with a city view for three days, starting May 12th, 2022?",
          "asr_output_elevenlabs": "Can you book a swanky room at Hotel Paradise in Las Vegas with a city view for three days starting May 12th, 2022?",
          "asr_output_deepgram": "Can you book a swanky room at Hotel Paradise in Las Vegas with a city view for three days starting May twelfth twenty twenty two?",
          "clarifications": {
            "hotel_name": "Hotel Paradise",
            "location": "Las Vegas",
            "room_type": "luxury room",
            "start_date": "May 12, 2022",
            "stay_duration": "3",
            "view": "city view"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "book_hotel",
        "description": "Book a room in a specific hotel with particular preferences",
        "parameters": {
          "type": "dict",
          "properties": {
            "hotel_name": {
              "type": "string",
              "description": "The name of the hotel."
            },
            "location": {
              "type": "string",
              "description": "The location of the hotel."
            },
            "room_type": {
              "type": "string",
              "description": "The type of room preferred."
            },
            "start_date": {
              "type": "string",
              "description": "The starting date of the stay in format MM-DD-YYYY."
            },
            "stay_duration": {
              "type": "integer",
              "description": "The duration of the stay in days."
            },
            "view": {
              "type": "string",
              "description": "The preferred view from the room, can be ignored if no preference. If none provided, assumes no preference.",
              "default": "No preference"
            }
          },
          "required": [
            "hotel_name",
            "location",
            "room_type",
            "start_date",
            "stay_duration"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_387",
    "question": [
      [
        {
          "role": "user",
          "content": "Book a hotel room at the Plaza Hotel in New York for 3 nights starting from 1st June 2022",
          "transcript": "Okay, reserve room at Plaza Hotel in New York for three nights startin June first, twenty-twenty-two.",
          "audio_path": "BFCL_v3_simple/simple_387_elevenlabs.mp3",
          "asr_output_openai": "OK, reserve room at Plaza Hotel in New York for three nights starting June 1, 2022.",
          "asr_output_elevenlabs": "Okay, reserve room at Plaza Hotel in New York for three nights starting June 1st, 2022.",
          "asr_output_deepgram": "Okay. Reserve room at Plaza Hotel in New York for three nights starting June first twenty twenty two.",
          "clarifications": {
            "hotel_name": "Plaza Hotel",
            "location": "New York",
            "start_date": "1st June 2022",
            "nights": "3"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "hotel_booking",
        "description": "Books a hotel room for a specific date range.",
        "parameters": {
          "type": "dict",
          "properties": {
            "hotel_name": {
              "type": "string",
              "description": "The name of the hotel."
            },
            "location": {
              "type": "string",
              "description": "The city and state, e.g. New York, NY."
            },
            "start_date": {
              "type": "string",
              "description": "The start date of the reservation. Use format 'YYYY-MM-DD'."
            },
            "end_date": {
              "type": "string",
              "description": "The end date of the reservation. Use format 'YYYY-MM-DD'."
            },
            "rooms": {
              "type": "integer",
              "default": 1,
              "description": "The number of rooms to reserve."
            }
          },
          "required": [
            "hotel_name",
            "location",
            "start_date",
            "end_date"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_388",
    "question": [
      [
        {
          "role": "user",
          "content": "How many Canadian dollars can I get for 500 US dollars?",
          "transcript": "Um, if I swap five hundred US dollars, how many Canadian dollarsll I get?",
          "audio_path": "BFCL_v3_simple/simple_388_elevenlabs.mp3",
          "asr_output_openai": "If I swap 500 US dollars, how many Canadian dollars will I get?",
          "asr_output_elevenlabs": "If I swap 500 US dollars, how many Canadian dollars will I get?",
          "asr_output_deepgram": "If I swap five hundred US dollars, how many Canadian dollars will I get?",
          "clarifications": {}
        }
      ]
    ],
    "function": [
      {
        "name": "currency_exchange.convert",
        "description": "Convert an amount from a base currency to a target currency based on the current exchange rate.",
        "parameters": {
          "type": "dict",
          "properties": {
            "base_currency": {
              "type": "string",
              "description": "The currency to convert from."
            },
            "target_currency": {
              "type": "string",
              "description": "The currency to convert to."
            },
            "amount": {
              "type": "integer",
              "description": "The amount in base currency to convert"
            }
          },
          "required": [
            "base_currency",
            "target_currency",
            "amount"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_389",
    "question": [
      [
        {
          "role": "user",
          "content": "Calculate the current cost in British Pounds if I need to convert 200 US dollars.",
          "transcript": "Uh, can you change, um, two hundred US dollars to British Pounds for me?",
          "audio_path": "BFCL_v3_simple/simple_389_elevenlabs.mp3",
          "asr_output_openai": "Can you change 200 US dollars to British pounds for me?",
          "asr_output_elevenlabs": "Uh, can you change, um, 200 US dollars to British pounds for me?",
          "asr_output_deepgram": "Can you change, two hundred US dollars to British pounds for me?",
          "clarifications": {
            "base_currency": "US dollars",
            "target_currency": "British Pounds",
            "amount": "200"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "currency_converter",
        "description": "Calculates the current cost in target currency given the amount in base currency and exchange rate",
        "parameters": {
          "type": "dict",
          "properties": {
            "base_currency": {
              "type": "string",
              "description": "The currency to convert from."
            },
            "target_currency": {
              "type": "string",
              "description": "The currency to convert to."
            },
            "amount": {
              "type": "float",
              "description": "The amount in base currency"
            }
          },
          "required": [
            "base_currency",
            "target_currency",
            "amount"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_390",
    "question": [
      [
        {
          "role": "user",
          "content": "Convert 150 Euros to Canadian dollars.",
          "transcript": "Whats, uh, one-fifty Euros in Canadian dollars?",
          "audio_path": "BFCL_v3_simple/simple_390_elevenlabs.mp3",
          "asr_output_openai": "What's 150 euros in Canadian dollars?",
          "asr_output_elevenlabs": "What's a one-fifty Euros in Canadian dollars?",
          "asr_output_deepgram": "What's, one fifty euros in Canadian dollars?",
          "clarifications": {
            "amount": "150",
            "from_currency": "Euros",
            "to_currency": "Canadian dollars"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "currency_conversion.convert",
        "description": "Convert a value from one currency to another.",
        "parameters": {
          "type": "dict",
          "properties": {
            "amount": {
              "type": "integer",
              "description": "The amount to be converted."
            },
            "from_currency": {
              "type": "string",
              "description": "The currency to convert from."
            },
            "to_currency": {
              "type": "string",
              "description": "The currency to convert to."
            }
          },
          "required": [
            "amount",
            "from_currency",
            "to_currency"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_391",
    "question": [
      [
        {
          "role": "user",
          "content": "Get the exchange rate from British pounds to Japanese yen with the fee 0.02 included.",
          "transcript": "Whats the exchange rate from, uh, British pounds to Japanese yen, includin a zero point zero two fee?",
          "audio_path": "BFCL_v3_simple/simple_391_elevenlabs.mp3",
          "asr_output_openai": "What's the exchange rate from British Pounds to Japanese Yen including a 0.02 fee?",
          "asr_output_elevenlabs": "What's the exchange rate from British pounds to Japanese yen, including a 0.02 fee?",
          "asr_output_deepgram": "What's the exchange rate from British pounds to Japanese yen including a zero point zero two fee?",
          "clarifications": {
            "base_currency": "British pounds",
            "target_currency": "Japanese yen",
            "transaction_fee": "0.02"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_exchange_rate_with_fee",
        "description": "Retrieve the exchange rate between two currencies including transaction fee.",
        "parameters": {
          "type": "dict",
          "properties": {
            "base_currency": {
              "type": "string",
              "description": "The base currency."
            },
            "target_currency": {
              "type": "string",
              "description": "The target currency."
            },
            "fee": {
              "type": "float",
              "description": "The transaction fee in percentage. Default is 0%."
            }
          },
          "required": [
            "base_currency",
            "target_currency",
            "fee"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_392",
    "question": [
      [
        {
          "role": "user",
          "content": "Get me the latest exchange rate from British Pounds to Japanese Yen.",
          "transcript": "Okay, whats the current exchange rate from British Pounds to Japanese Yen?",
          "audio_path": "BFCL_v3_simple/simple_392_elevenlabs.mp3",
          "asr_output_openai": "Okay, what's the current exchange rate from British Pounds to Japanese Yen?",
          "asr_output_elevenlabs": "Okay, what's the current exchange rate from British pounds to Japanese yen?",
          "asr_output_deepgram": "Okay. What's the current exchange rate from British pounds to Japanese yen?",
          "clarifications": {
            "source_currency": "British Pounds",
            "target_currency": "Japanese Yen"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "latest_exchange_rate",
        "description": "Retrieve the latest exchange rate between two specified currencies.",
        "parameters": {
          "type": "dict",
          "properties": {
            "source_currency": {
              "type": "string",
              "description": "The currency you are converting from."
            },
            "target_currency": {
              "type": "string",
              "description": "The currency you are converting to."
            },
            "amount": {
              "type": "float",
              "description": "The amount to be converted. If omitted, default to exchange rate of 1 unit source currency"
            }
          },
          "required": [
            "source_currency",
            "target_currency"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_393",
    "question": [
      [
        {
          "role": "user",
          "content": "How much will 20000 Japanese Yen be in United States Dollar?",
          "transcript": "Hey, um, can you tell me how much twenty thousand Japanese Yen is in US Dollars, thanks?",
          "audio_path": "BFCL_v3_simple/simple_393_elevenlabs.mp3",
          "asr_output_openai": "Hey, um, can you tell me how much 20,000 Japanese yen is in US dollars, thanks?",
          "asr_output_elevenlabs": "Hey, um, can you tell me how much 20,000 Japanese yen is in US dollars? Thanks.",
          "asr_output_deepgram": "Hey. Can you tell me how much twenty thousand Japanese yen is in US dollars? Thanks.",
          "clarifications": {
            "amount": "20000",
            "base_currency": "Japanese Yen",
            "target_currency": "United States Dollar"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "convert_currency",
        "description": "Converts an amount from a particular currency to another currency.",
        "parameters": {
          "type": "dict",
          "properties": {
            "base_currency": {
              "type": "string",
              "description": "The base currency in which the original amount is present."
            },
            "target_currency": {
              "type": "string",
              "description": "The currency to which you want to convert."
            },
            "amount": {
              "type": "integer",
              "description": "The amount you want to convert."
            }
          },
          "required": [
            "base_currency",
            "target_currency",
            "amount"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_394",
    "question": [
      [
        {
          "role": "user",
          "content": "Get me the travel distance and duration from the Eiffel Tower to the Louvre Museum",
          "transcript": "Hmm, lets see... oh, how far is it from Eiffel Tower to Louvre Museum, and how long will it take?",
          "audio_path": "BFCL_v3_simple/simple_394_elevenlabs.mp3",
          "asr_output_openai": "Hmm, let's see. Oh, how far is it from Eiffel Tower to Louvre Museum, and how long will it take?",
          "asr_output_elevenlabs": "Hmm, let's see. Oh, how far is it from Eiffel Tower to Louvre Museum, and how long will it take?",
          "asr_output_deepgram": "Let's see. Oh, how far is it from Eiffel Tower to Louvre Museum, and how long will it take?",
          "clarifications": {
            "start_location": "Eiffel Tower",
            "end_location": "Louvre Museum"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "maps.get_distance_duration",
        "description": "Retrieve the travel distance and estimated travel time from one location to another via car",
        "parameters": {
          "type": "dict",
          "properties": {
            "start_location": {
              "type": "string",
              "description": "Starting point of the journey"
            },
            "end_location": {
              "type": "string",
              "description": "Ending point of the journey"
            },
            "traffic": {
              "type": "boolean",
              "description": "If true, considers current traffic. Default is false."
            }
          },
          "required": [
            "start_location",
            "end_location"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_395",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the nearest parking lot within 2 miles of Central Park in New York.",
          "transcript": "Um, can you find closest parking lot, uh, within two miles of Central Park in New York, please?",
          "audio_path": "BFCL_v3_simple/simple_395_elevenlabs.mp3",
          "asr_output_openai": "Can you find closest parking lot within two miles of Central Park in New York, please?",
          "asr_output_elevenlabs": "Um, can you find closest parking lot, uh, within two miles of Central Park in New York please?",
          "asr_output_deepgram": "Can you find closest parking lot, within two miles of Central Park in New York, please?",
          "clarifications": {
            "reference_location": "Central Park",
            "city": "New York",
            "radius": "2 miles"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "parking_lot.find_nearest",
        "description": "Locate the nearest parking lot based on a specific location and radius.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The reference location e.g. Central Park, NY"
            },
            "radius": {
              "type": "integer",
              "description": "The maximum distance from the location in miles. Default is 5 miles"
            },
            "type": {
              "type": "string",
              "description": "The type of parking lot. Default is 'public'."
            }
          },
          "required": [
            "location",
            "radius"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_396",
    "question": [
      [
        {
          "role": "user",
          "content": "Find a hospital within 5 km radius around Denver, Colorado with pediatrics department.",
          "transcript": "Um, can you locate hospital within, uh, five ks of Denver, Colorado thats got a pediatrics department?",
          "audio_path": "BFCL_v3_simple/simple_396_elevenlabs.mp3",
          "asr_output_openai": "Can you locate hospital within a five kays of Denver, Colorado, that's got a pediatrics department?",
          "asr_output_elevenlabs": "Uhm, can you locate hospital within a five Ks of Denver, Colorado that's got a pediatrics department?",
          "asr_output_deepgram": "Can you locate hospital within, five k's of Denver, Colorado that's got a pediatrics department?",
          "clarifications": {
            "location": "Denver, Colorado",
            "radius": "5 km",
            "department": "pediatrics"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "hospital.locate",
        "description": "Locate nearby hospitals based on location and radius. Options to include specific departments are available.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city and state, e.g. Denver, CO"
            },
            "radius": {
              "type": "integer",
              "description": "The radius within which you want to find the hospital in kms."
            },
            "department": {
              "type": "string",
              "description": "Specific department within the hospital. Default is 'General Medicine'.",
              "enum": [
                "General Medicine",
                "Emergency",
                "Pediatrics",
                "Cardiology",
                "Orthopedics"
              ]
            }
          },
          "required": [
            "location",
            "radius"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_397",
    "question": [
      [
        {
          "role": "user",
          "content": "Find the distance between New York and Boston, accounting for terrain.",
          "transcript": "Uh, how far is it from New York to Boston, uh, with the terrain in mind, okay?",
          "audio_path": "BFCL_v3_simple/simple_397_elevenlabs.mp3",
          "asr_output_openai": "How far is it from New York to Boston? With the terrain in mind, okay?",
          "asr_output_elevenlabs": "Uh, how far is it from New York to Boston? Uh, with the terrain in mind. Okay.",
          "asr_output_deepgram": "How far is it from New York to Boston, with the terrain in mind? Okay?",
          "clarifications": {
            "origin": "New York",
            "destination": "Boston"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "distance_calculator.calculate",
        "description": "Calculate the distance between two locations, considering terrain.",
        "parameters": {
          "type": "dict",
          "properties": {
            "origin": {
              "type": "string",
              "description": "Starting location of the distance measurement."
            },
            "destination": {
              "type": "string",
              "description": "Destination location of the distance measurement."
            },
            "consider_terrain": {
              "type": "boolean",
              "description": "Whether to account for terrain in distance calculation, defaults to false."
            }
          },
          "required": [
            "origin",
            "destination"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_398",
    "question": [
      [
        {
          "role": "user",
          "content": "What are the opening hours of the Metropolitan Museum of Art on Saturday?",
          "transcript": "Hey, uh, when does Metropolitan Museum of Art open on Saturday, okay?",
          "audio_path": "BFCL_v3_simple/simple_398_elevenlabs.mp3",
          "asr_output_openai": "Hey, when does Metropolitan Museum of Art open on Saturday, OK?",
          "asr_output_elevenlabs": "Hey, when does Metropolitan Museum of Art open on Saturday okay?",
          "asr_output_deepgram": "Hey. When does Metropolitan Museum of Art open on Saturday? Okay?",
          "clarifications": {
            "museum_name": "Metropolitan Museum of Art",
            "day": "Saturday"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "get_museum_hours",
        "description": "Retrieve opening hours of a specified museum for the specified day.",
        "parameters": {
          "type": "dict",
          "properties": {
            "museum_name": {
              "type": "string",
              "description": "The name of the museum."
            },
            "day": {
              "type": "string",
              "description": "Day of the week.",
              "enum": [
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday",
                "Sunday"
              ]
            }
          },
          "required": [
            "museum_name",
            "day"
          ]
        }
      }
    ]
  },
  {
    "id": "simple_399",
    "question": [
      [
        {
          "role": "user",
          "content": "Find me the best Italian restaurants in New York City with average customer ratings of more than 4 and accepts credit cards.",
          "transcript": "Um, can you look up top Italian restaurants in New York City thatve got customer ratings over four and take credit cards? Thanks.",
          "audio_path": "BFCL_v3_simple/simple_399_openai.mp3",
          "asr_output_openai": "Um, can you look up top Italian restaurants in New York City that have got customer ratings over four and take credit cards? Thanks",
          "asr_output_elevenlabs": "Um, can you look up top Italian restaurants in New York City that have got customer ratings over four and take credit cards? Thanks.",
          "asr_output_deepgram": "Can you look up top Italian restaurants in New York City that have got customer ratings over four and take credit cards? Thanks.",
          "clarifications": {
            "location": "New York City",
            "cuisine": "Italian",
            "minimum_rating": "4"
          }
        }
      ]
    ],
    "function": [
      {
        "name": "restaurant_search",
        "description": "Locates top rated restaurants based on specific criteria such as type of cuisine, ratings, and facilities.",
        "parameters": {
          "type": "dict",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city and state, e.g. New York City, NY"
            },
            "cuisine": {
              "type": "string",
              "description": "Preferred type of cuisine e.g., Italian, Indian, American, etc."
            },
            "rating": {
              "type": "integer",
              "description": "Minimum average customer rating out of 5"
            },
            "accepts_credit_cards": {
              "type": "boolean",
              "description": "If the restaurant should accept credit cards."
            }
          },
          "required": [
            "location",
            "cuisine",
            "rating",
            "accepts_credit_cards"
          ]
        }
      }
    ]
  }
]
{"accuracy": 0.9, "correct_count": 27, "total_count": 30}
{"id": "simple_96", "model_name": "grok-3-beta", "test_category": "simple", "valid": false, "error": ["Unexpected dict key parameter: 'operator'.", "Missing dict key parameter: 'operation'."], "error_type": "value_error:dict_key", "prompt": {"id": "simple_96", "question": [[{"role": "user", "content": "Find records in database in user table where age is greater than 25 and job is 'engineer'."}]], "function": [{"name": "database.query", "description": "Query the database based on certain conditions.", "parameters": {"type": "dict", "properties": {"table": {"type": "string", "description": "Name of the table to query."}, "conditions": {"type": "array", "items": {"type": "dict", "properties": {"field": {"type": "string", "description": "The field to apply the condition."}, "operation": {"type": "string", "description": "The operation to be performed.", "enum": ["<", ">", "=", ">=", "<="]}, "value": {"type": "string", "description": "The value to be compared."}}, "required": ["field", "operation", "value"]}, "description": "Conditions for the query."}}, "required": ["table", "conditions"]}}]}, "model_result_raw": "<TOOLCALL>\n<functions>\n<function name=\"database.query\">\n<param name=\"table\" type=\"string\">user</param>\n<param name=\"conditions\" type=\"array\">[{\"field\": \"age\", \"operator\": \">\", \"value\": 25}, {\"field\": \"job\", \"operator\": \"=\", \"value\": \"engineer\"}]</param>\n</function>\n</functions>\n</TOOLCALL>", "model_result_decoded": [{"database.query": {"table": "user", "conditions": [{"field": "age", "operator": ">", "value": 25}, {"field": "job", "operator": "=", "value": "engineer"}]}}], "possible_answer": [{"database.query": {"table": ["user"], "conditions": [[{"field": ["age"], "operation": [">"], "value": ["25"]}, {"field": ["job"], "operation": ["="], "value": ["engineer"]}]]}}]}
{"id": "simple_328", "model_name": "grok-3-beta", "test_category": "simple", "valid": false, "error": ["Invalid syntax. Failed to decode AST. invalid syntax (<unknown>, line 1)"], "error_type": "ast_decoder:decoder_failed", "prompt": {"id": "simple_328", "question": [[{"role": "user", "content": "Find the rating and player count of the board game 'Ticket to Ride'."}]], "function": [{"name": "boardgame.get_info", "description": "Retrieve detailed information of a board game.", "parameters": {"type": "dict", "properties": {"name": {"type": "string", "description": "Name of the board game."}, "parameters": {"type": "array", "items": {"type": "string", "enum": ["player count", "playing time", "age", "mechanics", "rating"]}, "description": "Game characteristics interested."}, "language": {"type": "string", "description": "The preferred language for the game information, default is English"}}, "required": ["name", "parameters"]}}]}, "model_result_raw": "<TOOLCALL>\n<functions>\n<function name=\"boardgame.get_info\">\n<param name=\"name\" type=\"string\">Ticket to Ride</param>\n<param name=\"parameters\" type=\"array\">rating,player count</param>\n</function>\n</functions>\n</TOOLCALL>", "possible_answer": [{"boardgame.get_info": {"name": ["Ticket to Ride"], "parameters": [["rating", "player count"], ["player count", "rating"]], "language": ["", "English"]}}]}
{"id": "simple_380", "model_name": "grok-3-beta", "test_category": "simple", "valid": false, "error": ["Invalid syntax. Failed to decode AST. invalid syntax (<unknown>, line 1)"], "error_type": "ast_decoder:decoder_failed", "prompt": {"id": "simple_380", "question": [[{"role": "user", "content": "Book a single room at a pet friendly hotel near Manhattan, New York for 3 nights starting from March 10th, 2023."}]], "function": [{"name": "hotel_booking", "description": "Books a hotel room given the location, room type, stay duration and any additional preferences.", "parameters": {"type": "dict", "properties": {"location": {"type": "string", "description": "The city where you want to book the hotel."}, "room_type": {"type": "string", "description": "Type of the room required. Options: 'single', 'double', 'deluxe', etc."}, "duration": {"type": "integer", "description": "The number of nights you want to book the hotel for."}, "start_date": {"type": "string", "description": "The date when your stay begins."}, "preferences": {"type": "array", "items": {"type": "string", "enum": ["pet_friendly", "gym", "swimming_pool", "free_breakfast", "parking"]}, "description": "Optional preferences of stay at the hotel. Default to use all if not specified."}}, "required": ["location", "room_type", "duration", "start_date"]}}]}, "model_result_raw": "<TOOLCALL>\n<functions>\n<function name=\"hotel_booking\">\n<param name=\"location\" type=\"string\">Manhattan, New York</param>\n<param name=\"room_type\" type=\"string\">single</param>\n<param name=\"duration\" type=\"integer\">3</param>\n<param name=\"start_date\" type=\"string\">March 10th, 2023</param>\n<param name=\"preferences\" type=\"array\">pet friendly</param>\n</function>\n</functions>\n</TOOLCALL>", "possible_answer": [{"hotel_booking": {"location": ["Manhattan, New York", "Manhattan, NY", "NYC", "New York City"], "room_type": ["single"], "duration": [3], "start_date": ["2023-03-10", "03/10/2023", "Mar.10,2023", "March 10th, 2023", "March 10th,2023", "March10th, 2023", "March10th,2023"], "preferences": [["pet_friendly"]]}}]}
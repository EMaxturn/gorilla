{"id": "simple_19", "result": "<TOOLCALL>\nmath.gcd<function name=\"math.gcd\"><param name=\"num1\" type=\"integer\">40</param><param name=\"num2\" type=\"integer\">50</param>\n</TOOLCALL>", "input_token_count": 446, "output_token_count": 53, "latency": 0.5853796005249023}
{"id": "simple_25", "result": "<TOOLCALL><calculate_final_velocity><height=\"150</height><initial_velocity=\"0</initial_velocity><gravity=\"9.81</gravity></toolcall>\n", "input_token_count": 547, "output_token_count": 42, "latency": 0.4755537509918213}
{"id": "simple_58", "result": "<TOOLCALL><function name=\"cell_biology.function_lookup\">\n  <param name=\"molecule\" type=\"string\" required=\"true\">ATP</param>\n  <param name=\"organelle\" type=\"string\" required=\"true\">mitochondria</param>\n  <param name=\"specific_function\" type=\"boolean\">true</param>\n</toolcall>", "input_token_count": 505, "output_token_count": 82, "latency": 0.7925183773040771}
{"id": "simple_94", "result": "<TOOLCALL><function name=\"update_user_info\">\n  <parameters>\n    <param name=\"user_id\" type=\"integer\">43523</param>\n    <param name=\"update_info\" type=\"dict\">\n      {'name': 'John Doe', 'email': 'johndoe@email.com'}\n    </param>\n    <param name=\"database\" type=\"string\">your_database_name</param>\n  </parameters>\n</TOOLCALL>", "input_token_count": 511, "output_token_count": 112, "latency": 0.9999001026153564}
{"id": "simple_96", "result": "<TOOLCALL>\n  <function name=\"database.query\">\n    <param name=\"table\" type=\"string\" required=\"true\">user</param>\n    <param name=\"conditions\" type=\"array\" required=\"true\">\n      <desc>Conditions for the query.</desc>\n    </param>\n  </function>\n</TOOLCALL>", "input_token_count": 452, "output_token_count": 78, "latency": 0.764578104019165}
{"id": "simple_105", "result": "<TOOLCALL><math.power>\n  <function name=\"math.power\">\n    <param name=\"base\" type=\"integer\">3</param>\n    <param name=\"exponent\" type=\"integer\">4</param>\n  </function>\n</TOOLCALL>", "input_token_count": 489, "output_token_count": 61, "latency": 0.6289856433868408}
{"id": "simple_113", "result": "<toolcall>probability.dice_roll><desired_number=\"6\"><param name=\"desired_number\" type=\"integer\">6</param><param name=\"number_of_rolls\" type=\"integer\">2</param></toolcall>", "input_token_count": 527, "output_token_count": 52, "latency": 0.5495953559875488}
{"id": "simple_134", "result": "<toolcall>investment.predictProfit><investment_amount>5000</investment_amount><annual_return>0.07</annual_return><years>5</years></toolcall>", "input_token_count": 511, "output_token_count": 45, "latency": 0.4791717529296875}
{"id": "simple_155", "result": "<TOOLCALL><calculate_future_value><initial_investment=\"1000\" type=\"integer\"></calculate_future_value><interest_rate=\"0.05\" type=\"float\"></calculate_future_value><duration=\"2\" type=\"integer\"></calculate_future_value><compounded=\"1\" type=\"integer\"></toolcall>", "input_token_count": 558, "output_token_count": 79, "latency": 0.7579963207244873}
{"id": "simple_165", "result": "<TOOLCALL><function name=\"civil_cases.retrieve\">\n  <desc>Retrieve civil cases from 2020 about theft crimes in Los Angeles, California.</desc>\n  <params>\n    <param name=\"year\" type=\"integer\" required=\"true\">2020</param>\n    <param name=\"crime_type\" type=\"string\" required=\"true\">theft</param>\n    <param name=\"location\" type=\"string\" required=\"true\">Los Angeles, California</param>\n  </params>\n</toolcall>", "input_token_count": 497, "output_token_count": 123, "latency": 1.0378243923187256}
{"id": "simple_168", "result": "<TOOLCALL><function name=\"lawsuit_search\">\n  <param name=\"company\" type=\"string\" required=\"true\">Google</param>\n  <param name=\"start_date\" type=\"string\" required=\"true\">2021-01-01</param>\n  <param name=\"location\" type=\"string\" required=\"true\">California</param>\n  <param name=\"status\" type=\"string\" required=\"false\">ongoing</param>\n</toolcall>", "input_token_count": 566, "output_token_count": 109, "latency": 0.9471578598022461}
{"id": "simple_174", "result": "<TOOLCALL><function name=\"get_top_cases\">\n  <param name=\"field_of_law\" type=\"string\" required=\"true\">constitutional law</param>\n  <param name=\"top_number\" type=\"integer\" required=\"true\">10</param>\n  <param name=\"country\" type=\"string\" required=\"false\">China</param>\n</TOOLCALL>", "input_token_count": 522, "output_token_count": 87, "latency": 0.8052327632904053}
{"id": "simple_179", "result": "<TOOLCALL><function name=\"find_latest_court_case\">\n  <param name=\"company1\" type=\"string\">Apple</param>\n  <param name=\"company2\" type=\"string\">Samsung</param>\n  <param name=\"country\" type=\"string\">USA</param>\n</toolcall>", "input_token_count": 491, "output_token_count": 71, "latency": 0.6736366748809814}
{"id": "simple_181", "result": "<TOOLCALL><function name=\"get_lawsuit_details\">\n  <parameters>\n    <param name=\"case_number\" type=\"string\" required=\"true\">123456-ABC</param>\n    <param name=\"court_location\" type=\"string\" required=\"true\">Los Angeles</param>\n    <param name=\"with_verdict\" type=\"boolean\" required=\"false\">false</param>\n  </parameters>\n</TOOLCALL>", "input_token_count": 517, "output_token_count": 105, "latency": 0.900606632232666}
{"id": "simple_208", "result": "<TOOLCALL><function name=\"map_service.get_directions\">\n  <parameters>\n    <param name=\"start\" type=\"string\">New York</param>\n    <param name=\"end\" type=\"string\">Los Angeles</param>\n    <param name=\"avoid\" type=\"array\">['highways', 'ferries']</param>\n  </parameters>\n</TOOLCALL>", "input_token_count": 504, "output_token_count": 88, "latency": 0.7903604507446289}
{"id": "simple_213", "result": "<TOOLCALL>\n  <function name=\"flight.book\">\n    <param name=\"departure_location\" type=\"string\">San Francisco</param>\n    <param name=\"destination_location\" type=\"string\">London</param>\n    <param name=\"date\" type=\"string\">2022-04-27</param>\n    <param name=\"time\" type=\"string\">afternoon</param>\n    <param name=\"direct_flight\" type=\"boolean\">true</param>\n  </function>\n</TOOLCALL>", "input_token_count": 607, "output_token_count": 122, "latency": 0.9945788383483887}
{"id": "simple_226", "result": "<TOOLCALL><function name=\"get_zodiac_compatibility\">\n  <param name=\"sign1\" type=\"string\">Aries</param>\n  <param name=\"sign2\" type=\"string\">Gemini</param>\n  <param name=\"scale\" type=\"string\">percentage</param>\n</TOOLCALL>", "input_token_count": 489, "output_token_count": 72, "latency": 0.6762213706970215}
{"id": "simple_244", "result": "<TOOLCALL>publication_year.find</tool>\n<tool>find</tool>\n<tool>author</tool>\n<tool>law of universal gravitation</tool>\n<tool>year</tool>\n<tool>1687</tool>", "input_token_count": 495, "output_token_count": 59, "latency": 0.560598611831665}
{"id": "simple_254", "result": "<TOOLCALL><function name=\"get_religion_history\">\n  <param name=\"religion\" type=\"string\" required=\"true\">Christianity</param>\n  <param name=\"start_year\" type=\"integer\" required=\"true\">300</param>\n  <param name=\"end_year\" type=\"integer\" required=\"true\">400</param>\n  <param name=\"event_type\" type=\"string\" required=\"false\">all</param>\n</toolcall>", "input_token_count": 546, "output_token_count": 110, "latency": 0.9026706218719482}
{"id": "simple_281", "result": "<TOOLCALL><function name=\"get_instrument_info\">\n  <param name=\"name\" type=\"string\" required=\"true\">Violin</param>\n  <param name=\"maker\" type=\"string\" required=\"true\">Stradivarius</param>\n  <param name=\"year\" type=\"integer\" required=\"true\">1721</param>\n</toolcall>", "input_token_count": 513, "output_token_count": 86, "latency": 0.7541236877441406}
{"id": "simple_284", "result": "<TOOLCALL><function name=\"concert_info.get\">\n  <parameters>\n    <param name=\"location\" type=\"string\" value=\"New York\"/>\n    <param name=\"date\" type=\"string\" value=\"next month\"/>\n  </parameters>\n</TOOLCALL>", "input_token_count": 489, "output_token_count": 63, "latency": 0.5769631862640381}
{"id": "simple_295", "result": "<TOOLCALL><function name=\"get_song_lyrics\">\n  <param name=\"song_title\" type=\"string\">Bohemian Rhapsody</param>\n  <param name=\"artist_name\" type=\"string\">Queen</param>\n  <param name=\"lang\" type=\"string\">English</param>\n</toolcall>", "input_token_count": 503, "output_token_count": 74, "latency": 0.6557629108428955}
{"id": "simple_297", "result": "```xml\n<TOOLCALL><function name=\"music.theory.chordProgression\">\n  <desc>Identifies a potential key signature for the given chord progression.</desc>\n  <params>\n    <param name=\"progression\" type=\"array\" required=\"true\">\n      <desc>The chord progression in Roman numerals. Eg: ['I', 'V', 'vi', 'IV'].</desc>\n    </param>\n    <param name=\"returnAllPossibleKeys\" type=\"boolean\" required=\"false\">\n      <desc>Flag indicating if the function should return all possible key signatures that fit the chord progression. If false, the function will return the first valid key it finds. Default is false.</desc>\n    </param>\n    <param name=\"assumeMajor\" type=\"boolean\" required=\"false\">\n      <desc>Assumption if the key signature is Major. If true, the function will assume the key signature to be major and otherwise minor. Default is true.</desc>\n    </param>\n  </params>\n</TOOLCALL>\n```", "input_token_count": 568, "output_token_count": 230, "latency": 1.4626786708831787}
{"id": "simple_327", "result": "<TOOLCALL><function name=\"sports_team.get_schedule\">\n  <parameters>\n    <param name=\"team_name\" type=\"string\" required=\"true\">Manchester United</param>\n    <param name=\"num_of_games\" type=\"integer\" required=\"true\">6</param>\n    <param name=\"league\" type=\"string\" required=\"true\">Premier League</param>\n    <param name=\"location\" type=\"string\" required=\"false\">false</param>\n  </parameters>\n</TOOLCALL>", "input_token_count": 582, "output_token_count": 119, "latency": 0.915931224822998}
{"id": "simple_328", "result": "<TOOLCALL><function name=\"boardgame.get_info\">\n  <desc>Retrieve detailed information of a board game.</desc>\n  <params>\n    <param name=\"name\" type=\"string\" required=\"true\">\n      <desc>Name of the board game.</desc>\n    </param>\n    <param name=\"parameters\" type=\"array\" required=\"true\">\n      <desc>Game characteristics interested.</desc>\n    </param>\n    <param name=\"language\" type=\"string\" required=\"false\">\n      <desc>The preferred language for the game information, default is English</desc>\n    </param>\n  </params>\n</TOOLCALL>", "input_token_count": 487, "output_token_count": 151, "latency": 1.0793745517730713}
{"id": "simple_335", "result": "<TOOLCALL><function name=\"find_card_in_deck\">\n  <param name=\"rank\" type=\"string\">Queen</param>\n  <param name=\"suit\" type=\"string\">Hearts</param>\n  <param name=\"deck\" type=\"array\">\n    <param name=\"card_values\" type=\"array\">\n      <param name=\"card_value\" type=\"string\">Queen</param>\n      <param name=\"card_value\" type=\"string\">Hearts</param>\n    </param>\n  </param>\n</toolcall>", "input_token_count": 527, "output_token_count": 125, "latency": 0.9322607517242432}
{"id": "simple_360", "result": "<TOOLCALL>\n  <function name=\"find_recipe\">\n    <desc>Locate a recipe based on name and its calorie content</desc>\n    <params>\n      <param name=\"recipeName\" type=\"string\" required=\"true\">pasta carbonara</param>\n      <param name=\"maxCalories\" type=\"integer\" required=\"false\">500</param>\n    </params>\n  </function>\n</TOOLCALL>", "input_token_count": 457, "output_token_count": 100, "latency": 0.7947118282318115}
{"id": "simple_380", "result": "<toolcall>\n  <function name=\"hotel_booking\">\n    <param name=\"location\" type=\"string\">Manhattan, New York</param>\n    <param name=\"room_type\" type=\"string\">single</param>\n    <param name=\"duration\" type=\"integer\">3</param>\n    <param name=\"start_date\" type=\"string\">2023-03-10</param>\n    <param name=\"preferences\" type=\"array\">\n      <param name=\"preferences\" type=\"array\">\n        <param name=\"pet_friendly\" type=\"boolean\">true</param>\n        <param name=\"price_range\" type=\"float\">100-200</param>\n      </param>\n    </param>\n  </function>\n</toolcall>", "input_token_count": 614, "output_token_count": 182, "latency": 1.1929922103881836}
{"id": "simple_390", "result": "<TOOLCALL>currency_conversion.convert><amount>150</amount><from_currency>Euros</from_currency><to_currency>Canadian dollars</to_currency></toolcall>", "input_token_count": 482, "output_token_count": 44, "latency": 0.39597415924072266}
{"id": "simple_393", "result": "convert_currency<tool name=\"convert_currency\">convert_currency</tool> 20000</tool> 20000</tool>\n", "input_token_count": 499, "output_token_count": 37, "latency": 0.3376452922821045}

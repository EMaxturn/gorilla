{"id": "simple_19", "result": "```tool\nmath.gcd(40, 50)\n```", "input_token_count": 391, "output_token_count": 17, "latency": 0.24305367469787598}
{"id": "simple_25", "result": "<TOOLCALL>\ncalculate_final_velocity<functions><function name=\"calculate_final_velocity\"><param name=\"height\" type=\"int\">150</param><param name=\"initial_velocity\" type=\"int\">0</param></function><function name=\"calculate_final_velocity\"><param name=\"height\" type=\"int\">150</param><param name=\"initial_velocity\" type=\"int\">0</param><param name=\"gravity\" type=\"float\">9.81</param></function></tools>", "input_token_count": 471, "output_token_count": 114, "latency": 0.8425812721252441}
{"id": "simple_58", "result": "<TOOLCALL>\n```tool_call\ncell_biology.function_lookup(\"ATP synthase\", \"mitochondria\", True)\n```", "input_token_count": 429, "output_token_count": 31, "latency": 0.3443429470062256}
{"id": "simple_94", "result": "<TOOLCALL><update_user_info><user_id=\"43523\"><update_info={'name':'John Doe', 'email':'johndoe@email.com'}></toolcall>", "input_token_count": 440, "output_token_count": 48, "latency": 0.47003960609436035}
{"id": "simple_96", "result": "<TOOLCALL>\ndatabase.query\n    \"\"\"\n    Query the database based on certain conditions. \n\n    Args:\n        table (str): Name of the table to query.\n        conditions (list): Conditions for the query.\n    \"\"\"", "input_token_count": 398, "output_token_count": 54, "latency": 0.5066726207733154}
{"id": "simple_105", "result": "<TOOLCALL>\nmath.pow(3, 4) % 7\n</TOOLCALL>", "input_token_count": 413, "output_token_count": 23, "latency": 0.2791464328765869}
{"id": "simple_113", "result": "<TOOLCALL>probability.dice_roll</toolcall><functions><6>probability.dice_roll</function><param name=\"desired_number\" type=\"int\">6</param><param name=\"number_of_rolls\" type=\"int\">2</param></functions></TOOLCALL>", "input_token_count": 451, "output_token_count": 63, "latency": 0.5568695068359375}
{"id": "simple_134", "result": "<TOOLCALL>\ninvestment.predictProfit<investment_amount=\"5000\"<annual_return=\"0.07\"><years=\"5\"><function=\"calculate_total_profit\">calculate_total_profit</function>", "input_token_count": 435, "output_token_count": 50, "latency": 0.47449421882629395}
{"id": "simple_155", "result": "<TOOLCALL>\ncalculate_future_value<functions><function name=\"calculate_future_value\"><initial_investment=\"1000\"<param name=\"initial_investment\">1000</param><interest_rate=\"0.05\"<param name=\"interest_rate\">0.05</param><duration=\"2\"<param name=\"duration\">2</param><compounded=\"1\"<param name=\"compounded\">1</param></function><function name=\"calculate_future_value\"><initial_investment=\"1000\"<param name=\"initial_investment\">1000</param><interest_rate=\"0.05\"<param name=\"interest_rate\">0.05</param><duration=\"2\"<param name=\"duration\">2\"<param name=\"compounded\">1</param></function>\n", "input_token_count": 460, "output_token_count": 178, "latency": 1.0857975482940674}
{"id": "simple_165", "result": "<TOOLCALL>\ncivil_cases.retrieve<TOOLCALL><functions><civil_cases.retrieve><year=\"2020\"><crime_type=\"theft\"><location=\"Los Angeles, California\"></function><function><TOOLCALL><functions><civil_cases.retrieve><year=\"2020\"><crime_type=\"theft\"><location=\"Los Angeles, California\"></function></TOOLCALL></TOOLCALL>", "input_token_count": 420, "output_token_count": 90, "latency": 0.6943817138671875}
{"id": "simple_168", "result": "<TOOLCALL>\ndef lawsuit_search(company, start_date, location, status):\n    \"\"\"\n    Search for lawsuits related to a specific company within a specific date range and location. \n\n    Args:\n        company (str): The company related to the lawsuit.\n        start_date (str): Start of the date range for when the lawsuit was filed in the format of MM-DD-YYY.\n        location (str): Location where the lawsuit was filed in the format of full state name.\n        status (str): The status of the lawsuit. Default is 'ongoing'.\n    \"\"\"\n    return f\"Ongoing lawsuits related to {company} filed after {start_date} in {location}.\"\n", "input_token_count": 466, "output_token_count": 155, "latency": 0.9814746379852295}
{"id": "simple_174", "result": "<TOOLCALL>get_top_cases><field_of_law=\"constitutional law\"><top_number=10><country=\"China\">\n```tool_code\nget_top_cases\n```", "input_token_count": 446, "output_token_count": 44, "latency": 0.4264943599700928}
{"id": "simple_179", "result": "<TOOLCALL>\nfind_latest_court_case:find_latest_court_case<company1=\"Apple\" company2=\"Samsung\" country=\"USA\">\n", "input_token_count": 419, "output_token_count": 37, "latency": 0.3751218318939209}
{"id": "simple_181", "result": "<TOOLCALL><get_lawsuit_details><case_number=\"123456-ABC\"><court_location=\"Los Angeles\"><with_verdict>False</param></toolcall>", "input_token_count": 440, "output_token_count": 46, "latency": 0.43930840492248535}
{"id": "simple_208", "result": "<TOOLCALL>\nmap_service.get_directions<start=\"New York\" end=\"Los Angeles\" avoid=[\"highways\", \"toll roads\"]>", "input_token_count": 427, "output_token_count": 34, "latency": 0.3526418209075928}
{"id": "simple_213", "result": "<TOOLCALL>\nflight.book\ndeparture_location=\"San Francisco\"\ndestination_location=\"London\"\ndate=\"2022-04-27\"\ntime=\"afternoon\"\ndirect_flight=True\n</TOOLCALL>", "input_token_count": 486, "output_token_count": 55, "latency": 0.48878002166748047}
{"id": "simple_226", "result": "<TOOLCALL>\nget_zodiac_compatibility<sign1=\"Aries\"<sign2=\"Gemini\"<scale=\"percentage\">50</sign>\n</TOOLCALL>", "input_token_count": 412, "output_token_count": 39, "latency": 0.3860318660736084}
{"id": "simple_244", "result": "<TOOLCALL>publication_year.find<tool=\"publication_year\">Isaac Newton<param name=\"author\">Isaac Newton</param><param name=\"work_title\">law of universal gravitation</param><param name=\"location\">all</param></TOOLCALL>", "input_token_count": 418, "output_token_count": 56, "latency": 0.4908459186553955}
{"id": "simple_254", "result": "<TOOLCALL>\nget_religion_history\nreligion=\"Christianity\"\nstart_year=300\nend_year=400\nevent_type=\"all</toolcall>", "input_token_count": 447, "output_token_count": 43, "latency": 0.4086182117462158}
{"id": "simple_281", "result": "<TOOLCALL>get_instrument_info<instrument_name=\"Violin\" maker=\"Stradivarius\" year=\"1721\">\n</TOOLCALL>", "input_token_count": 437, "output_token_count": 37, "latency": 0.35956382751464844}
{"id": "simple_284", "result": "<TOOLCALL>\ndef get_concerts(location, date, genre):\n    \"\"\"\n    Retrieve information about concerts based on specific genre, location and date. \n\n    Args:\n        location (str): The city where the concert will take place.\n        date (str): Time frame to get the concert for.\n        genre (str): Genre of the concert.\n    \"\"\"\n    print(\"Getting pop concerts in New York for next month.\")\n    print(\"Genre: Pop\")\n    print(\"Location: New York\")\n    print(\"Date: Next month\")\n</TOOLCALL>", "input_token_count": 413, "output_token_count": 129, "latency": 0.842677116394043}
{"id": "simple_295", "result": "<TOOLCALL>\nget_song_lyrics\n    \"\"\"\n    Retrieve the lyrics of a song based on the artist's name and song title. \n\n    Args:\n        song_title (str): The title of the song.\n        artist_name (str): The name of the artist who performed the song.\n        lang (str): The language of the lyrics. Default is English.\n    \"\"\"\n</TOOLCALL>", "input_token_count": 427, "output_token_count": 94, "latency": 0.6832764148712158}
{"id": "simple_297", "result": "<TOOLCALL><music.theory.chordProgression><chordProgression=\"I\", returnAllPossibleKeys=False, assumeMajor=True>", "input_token_count": 491, "output_token_count": 31, "latency": 0.3181741237640381}
{"id": "simple_327", "result": "<TOOLCALL>\nsports_team.get_schedule(\"Manchester United\", 6, \"Premier League\", \"London\")\n</TOOLCALL>", "input_token_count": 484, "output_token_count": 32, "latency": 0.3234577178955078}
{"id": "simple_328", "result": "<TOOLCALL>\nboardgame.get_info(\"Ticket to Ride\", [\"rating\", \"player_count\"], \"English\")\n</TOOLCALL>", "input_token_count": 410, "output_token_count": 33, "latency": 0.3205909729003906}
{"id": "simple_335", "result": "<TOOLCALL>find_card_in_deck><rank=\"Queen\"><suit=\"Hearts\"><deck></deck></TOOLCALL>", "input_token_count": 450, "output_token_count": 28, "latency": 0.2566089630126953}
{"id": "simple_360", "result": "<TOOLCALL>\nfind_recipe\n    \"\"\"\n    Locate a recipe based on name and its calorie content \n\n    Args:\n        recipeName (str): The recipe's name.\n        maxCalories (int, default=1000): The maximum calorie content of the recipe.\n    \"\"\"\n", "input_token_count": 409, "output_token_count": 69, "latency": 0.5069589614868164}
{"id": "simple_380", "result": "<TOOLCALL>\nhotel_booking\nBook a single room at a pet friendly hotel near Manhattan, New York for 3 nights starting from March 10th, 2023.\n<tool_name>hotel_booking</tool_name>\n```tool_code\nhotel_booking\nBook a single room at a pet friendly hotel near Manhattan, New York for 3 nights starting from March 10th, 2023.\n```", "input_token_count": 494, "output_token_count": 100, "latency": 0.6554973125457764}
{"id": "simple_390", "result": "<TOOLCALL>\ncurrency_conversion.convert(\"150\", \"EUR\", \"CAD\")", "input_token_count": 406, "output_token_count": 22, "latency": 0.20457196235656738}
{"id": "simple_393", "result": "<TOOLCALL>convert_currency</toolcall><functions><convert_currency><convert_currency(\"JPY\", \"USD\", 20000)></functions></TOOLCALL>", "input_token_count": 423, "output_token_count": 40, "latency": 0.33488893508911133}

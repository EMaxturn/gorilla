{"accuracy": 0.8666666666666667, "correct_count": 26, "total_count": 30}
{"id": "simple_96", "model_name": "DeepSeek-R1", "test_category": "simple", "valid": false, "error": ["Nested type checking failed for parameter 'conditions'. Expected outer type array with inner type <class 'dict'>. Parameter value: [['age', '>', 25], ['job', '=', 'engineer']]."], "error_type": "type_error:nested", "prompt": {"id": "simple_96", "question": [[{"role": "user", "content": "Find records in database in user table where age is greater than 25 and job is 'engineer'."}]], "function": [{"name": "database.query", "description": "Query the database based on certain conditions.", "parameters": {"type": "dict", "properties": {"table": {"type": "string", "description": "Name of the table to query."}, "conditions": {"type": "array", "items": {"type": "dict", "properties": {"field": {"type": "string", "description": "The field to apply the condition."}, "operation": {"type": "string", "description": "The operation to be performed.", "enum": ["<", ">", "=", ">=", "<="]}, "value": {"type": "string", "description": "The value to be compared."}}, "required": ["field", "operation", "value"]}, "description": "Conditions for the query."}}, "required": ["table", "conditions"]}}]}, "model_result_raw": "```json\n[{\"function\":\"database.query\",\"parameters\":{\"table\":\"user\",\"conditions\":[[\"age\", \">\", 25], [\"job\", \"=\", \"engineer\"]]}}]\n```", "model_result_decoded": [{"database.query": {"table": "user", "conditions": [["age", ">", 25], ["job", "=", "engineer"]]}}], "possible_answer": [{"database.query": {"table": ["user"], "conditions": [[{"field": ["age"], "operation": [">"], "value": ["25"]}, {"field": ["job"], "operation": ["="], "value": ["engineer"]}]]}}]}
{"id": "simple_208", "model_name": "DeepSeek-R1", "test_category": "simple", "valid": false, "error": ["Invalid value for parameter 'avoid': ['highways', 'toll roads']. Expected one of [['highways', 'tolls'], ['tolls', 'highways']]."], "error_type": "value_error:list/tuple", "prompt": {"id": "simple_208", "question": [[{"role": "user", "content": "Get me the directions from New York to Los Angeles avoiding highways and toll roads."}]], "function": [{"name": "map_service.get_directions", "description": "Retrieve directions from a starting location to an ending location, including options for route preferences.", "parameters": {"type": "dict", "properties": {"start": {"type": "string", "description": "Starting location for the route."}, "end": {"type": "string", "description": "Ending location for the route."}, "avoid": {"type": "array", "items": {"type": "string", "enum": ["tolls", "highways", "ferries"]}, "description": "Route features to avoid. Default is ['highways', 'ferries']"}}, "required": ["start", "end"]}}]}, "model_result_raw": "```json\n[{\"function\":\"map_service.get_directions\",\"parameters\":{\"start\":\"New York\",\"end\":\"Los Angeles\",\"avoid\":[\"highways\",\"toll roads\"]}}]\n```", "model_result_decoded": [{"map_service.get_directions": {"start": "New York", "end": "Los Angeles", "avoid": ["highways", "toll roads"]}}], "possible_answer": [{"map_service.get_directions": {"start": ["New York", "NYC"], "end": ["Los Angeles", "LA"], "avoid": [["highways", "tolls"], ["tolls", "highways"]]}}]}
{"id": "simple_244", "model_name": "DeepSeek-R1", "test_category": "simple", "valid": false, "error": ["Wrong number of functions."], "error_type": "simple_function_checker:wrong_count", "prompt": {"id": "simple_244", "question": [[{"role": "user", "content": "What year was the law of universal gravitation published by Isaac Newton?"}]], "function": [{"name": "publication_year.find", "description": "Fetches the year a particular scientific work was published.", "parameters": {"type": "dict", "properties": {"author": {"type": "string", "description": "Name of the author of the work."}, "work_title": {"type": "string", "description": "Title of the scientific work."}, "location": {"type": "string", "description": "Place of the publication, if known. Default to 'all'."}}, "required": ["author", "work_title"]}}]}, "model_result_raw": "```json\n[\n  {\n    \"function\": \"publication_year.find\",\n    \"parameters\": {\n      \"author\": \"Isaac Newton\",\n      \"work_title\": \"law of universal gravitation\"\n    }\n  },\n  {\n    \"function\": \"publication_year.find\",\n    \"parameters\": {\n      \"author\": \"Isaac Newton\",\n      \"work_title\": \"Philosophi\u00e6 Naturalis Principia Mathematica\"\n    }\n  }\n]\n```", "model_result_decoded": [{"publication_year.find": {"author": "Isaac Newton", "work_title": "law of universal gravitation"}}, {"publication_year.find": {"author": "Isaac Newton", "work_title": "Philosophi\u00e6 Naturalis Principia Mathematica"}}], "possible_answer": [{"publication_year.find": {"author": ["Isaac Newton"], "work_title": ["Law of Universal Gravitation", "Universal Law of Gravitation", "The law of universal gravitation"], "location": ["", "all"]}}]}
{"id": "simple_360", "model_name": "DeepSeek-R1", "test_category": "simple", "valid": false, "error": ["Invalid value for parameter 'maxCalories': 499. Expected one of [500]."], "error_type": "value_error:others", "prompt": {"id": "simple_360", "question": [[{"role": "user", "content": "Find a recipe for pasta carbonara which contains only less than 500 calories."}]], "function": [{"name": "find_recipe", "description": "Locate a recipe based on name and its calorie content", "parameters": {"type": "dict", "properties": {"recipeName": {"type": "string", "description": "The recipe's name."}, "maxCalories": {"type": "integer", "description": "The maximum calorie content of the recipe.", "default": 1000}}, "required": ["recipeName"]}}]}, "model_result_raw": "```json\n[{\"function\":\"find_recipe\",\"parameters\":{\"recipeName\":\"pasta carbonara\",\"maxCalories\":499}}]\n```", "model_result_decoded": [{"find_recipe": {"recipeName": "pasta carbonara", "maxCalories": 499}}], "possible_answer": [{"find_recipe": {"recipeName": ["pasta carbonara"], "maxCalories": [500]}}]}
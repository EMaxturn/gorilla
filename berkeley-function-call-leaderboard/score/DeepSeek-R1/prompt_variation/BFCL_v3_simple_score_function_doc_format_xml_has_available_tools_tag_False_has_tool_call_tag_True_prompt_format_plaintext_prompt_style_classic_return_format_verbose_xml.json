{"accuracy": 0.8, "correct_count": 24, "total_count": 30}
{"id": "simple_96", "model_name": "DeepSeek-R1", "test_category": "simple", "valid": false, "error": ["Unexpected dict key parameter: 'column'.", "Missing dict key parameter: 'field'."], "error_type": "value_error:dict_key", "prompt": {"id": "simple_96", "question": [[{"role": "user", "content": "Find records in database in user table where age is greater than 25 and job is 'engineer'."}]], "function": [{"name": "database.query", "description": "Query the database based on certain conditions.", "parameters": {"type": "dict", "properties": {"table": {"type": "string", "description": "Name of the table to query."}, "conditions": {"type": "array", "items": {"type": "dict", "properties": {"field": {"type": "string", "description": "The field to apply the condition."}, "operation": {"type": "string", "description": "The operation to be performed.", "enum": ["<", ">", "=", ">=", "<="]}, "value": {"type": "string", "description": "The value to be compared."}}, "required": ["field", "operation", "value"]}, "description": "Conditions for the query."}}, "required": ["table", "conditions"]}}]}, "model_result_raw": "<TOOLCALL><functions><function name=\"database.query\"><params><param name=\"table\" value=\"user\" type=\"string\"/><param name=\"conditions\" value=\"[{&quot;column&quot;:&quot;age&quot;,&quot;operator&quot;:&quot;&gt;&quot;,&quot;value&quot;:25},{&quot;column&quot;:&quot;job&quot;,&quot;operator&quot;:&quot;=&quot;,&quot;value&quot;:&quot;engineer&quot;}]\" type=\"array\"/></params></function></functions></TOOLCALL>", "model_result_decoded": [{"database.query": {"table": "user", "conditions": [{"column": "age", "operator": ">", "value": 25}, {"column": "job", "operator": "=", "value": "engineer"}]}}], "possible_answer": [{"database.query": {"table": ["user"], "conditions": [[{"field": ["age"], "operation": [">"], "value": ["25"]}, {"field": ["job"], "operation": ["="], "value": ["engineer"]}]]}}]}
{"id": "simple_208", "model_name": "DeepSeek-R1", "test_category": "simple", "valid": false, "error": ["Invalid value for parameter 'avoid': ['highways', 'toll roads']. Expected one of [['highways', 'tolls'], ['tolls', 'highways']]."], "error_type": "value_error:list/tuple", "prompt": {"id": "simple_208", "question": [[{"role": "user", "content": "Get me the directions from New York to Los Angeles avoiding highways and toll roads."}]], "function": [{"name": "map_service.get_directions", "description": "Retrieve directions from a starting location to an ending location, including options for route preferences.", "parameters": {"type": "dict", "properties": {"start": {"type": "string", "description": "Starting location for the route."}, "end": {"type": "string", "description": "Ending location for the route."}, "avoid": {"type": "array", "items": {"type": "string", "enum": ["tolls", "highways", "ferries"]}, "description": "Route features to avoid. Default is ['highways', 'ferries']"}}, "required": ["start", "end"]}}]}, "model_result_raw": "<TOOLCALL><functions><function name=\"map_service.get_directions\"><params><param name=\"start\" value=\"New York\" type=\"string\"/><param name=\"end\" value=\"Los Angeles\" type=\"string\"/><param name=\"avoid\" value=\"['highways','toll roads']\" type=\"array\"/></params></function></functions></TOOLCALL>", "model_result_decoded": [{"map_service.get_directions": {"start": "New York", "end": "Los Angeles", "avoid": ["highways", "toll roads"]}}], "possible_answer": [{"map_service.get_directions": {"start": ["New York", "NYC"], "end": ["Los Angeles", "LA"], "avoid": [["highways", "tolls"], ["tolls", "highways"]]}}]}
{"id": "simple_244", "model_name": "DeepSeek-R1", "test_category": "simple", "valid": false, "error": ["Wrong number of functions."], "error_type": "simple_function_checker:wrong_count", "prompt": {"id": "simple_244", "question": [[{"role": "user", "content": "What year was the law of universal gravitation published by Isaac Newton?"}]], "function": [{"name": "publication_year.find", "description": "Fetches the year a particular scientific work was published.", "parameters": {"type": "dict", "properties": {"author": {"type": "string", "description": "Name of the author of the work."}, "work_title": {"type": "string", "description": "Title of the scientific work."}, "location": {"type": "string", "description": "Place of the publication, if known. Default to 'all'."}}, "required": ["author", "work_title"]}}]}, "model_result_raw": "The question lacks the exact title of the scientific work where Newton published the law of universal gravitation. The function requires the specific work title. However, Newton's work is commonly known as \"Philosophi\u00e6 Naturalis Principia Mathematica\" (Mathematical Principles of Natural Philosophy). I will use this title and the English translation as fallbacks.\n\n<TOOLCALL><functions>\n<function name=\"publication_year.find\">\n  <params>\n    <param name=\"author\" value=\"Isaac Newton\" type=\"string\"/>\n    <param name=\"work_title\" value=\"Philosophi\u00e6 Naturalis Principia Mathematica\" type=\"string\"/>\n  </params>\n</function>\n<function name=\"publication_year.find\">\n  <params>\n    <param name=\"author\" value=\"Isaac Newton\" type=\"string\"/>\n    <param name=\"work_title\" value=\"Mathematical Principles of Natural Philosophy\" type=\"string\"/>\n  </params>\n</function>\n</functions></TOOLCALL>", "model_result_decoded": [{"publication_year.find": {"author": "Isaac Newton", "work_title": "Philosophi\u00e6 Naturalis Principia Mathematica"}}, {"publication_year.find": {"author": "Isaac Newton", "work_title": "Mathematical Principles of Natural Philosophy"}}], "possible_answer": [{"publication_year.find": {"author": ["Isaac Newton"], "work_title": ["Law of Universal Gravitation", "Universal Law of Gravitation", "The law of universal gravitation"], "location": ["", "all"]}}]}
{"id": "simple_360", "model_name": "DeepSeek-R1", "test_category": "simple", "valid": false, "error": ["Invalid value for parameter 'maxCalories': 499. Expected one of [500]."], "error_type": "value_error:others", "prompt": {"id": "simple_360", "question": [[{"role": "user", "content": "Find a recipe for pasta carbonara which contains only less than 500 calories."}]], "function": [{"name": "find_recipe", "description": "Locate a recipe based on name and its calorie content", "parameters": {"type": "dict", "properties": {"recipeName": {"type": "string", "description": "The recipe's name."}, "maxCalories": {"type": "integer", "description": "The maximum calorie content of the recipe.", "default": 1000}}, "required": ["recipeName"]}}]}, "model_result_raw": "<TOOLCALL><functions><function name=\"find_recipe\"><params><param name=\"recipeName\" value=\"pasta carbonara\" type=\"string\"/><param name=\"maxCalories\" value=\"499\" type=\"integer\"/></params></function></functions></TOOLCALL>", "model_result_decoded": [{"find_recipe": {"recipeName": "pasta carbonara", "maxCalories": 499}}], "possible_answer": [{"find_recipe": {"recipeName": ["pasta carbonara"], "maxCalories": [500]}}]}
{"id": "simple_380", "model_name": "DeepSeek-R1", "test_category": "simple", "valid": false, "error": ["Invalid value for parameter 'location': 'New York'. Expected one of ['Manhattan, New York', 'Manhattan, NY', 'NYC', 'New York City']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "simple_380", "question": [[{"role": "user", "content": "Book a single room at a pet friendly hotel near Manhattan, New York for 3 nights starting from March 10th, 2023."}]], "function": [{"name": "hotel_booking", "description": "Books a hotel room given the location, room type, stay duration and any additional preferences.", "parameters": {"type": "dict", "properties": {"location": {"type": "string", "description": "The city where you want to book the hotel."}, "room_type": {"type": "string", "description": "Type of the room required. Options: 'single', 'double', 'deluxe', etc."}, "duration": {"type": "integer", "description": "The number of nights you want to book the hotel for."}, "start_date": {"type": "string", "description": "The date when your stay begins."}, "preferences": {"type": "array", "items": {"type": "string", "enum": ["pet_friendly", "gym", "swimming_pool", "free_breakfast", "parking"]}, "description": "Optional preferences of stay at the hotel. Default to use all if not specified."}}, "required": ["location", "room_type", "duration", "start_date"]}}]}, "model_result_raw": "<TOOLCALL><functions>\n<function name=\"hotel_booking\">\n<params>\n<param name=\"location\" value=\"New York\" type=\"string\"/>\n<param name=\"room_type\" value=\"single\" type=\"string\"/>\n<param name=\"duration\" value=\"3\" type=\"integer\"/>\n<param name=\"start_date\" value=\"2023-03-10\" type=\"string\"/>\n<param name=\"preferences\" value=\"['pet friendly']\" type=\"array\"/>\n</params>\n</function>\n</functions></TOOLCALL>", "model_result_decoded": [{"hotel_booking": {"location": "New York", "room_type": "single", "duration": 3, "start_date": "2023-03-10", "preferences": ["pet friendly"]}}], "possible_answer": [{"hotel_booking": {"location": ["Manhattan, New York", "Manhattan, NY", "NYC", "New York City"], "room_type": ["single"], "duration": [3], "start_date": ["2023-03-10", "03/10/2023", "Mar.10,2023", "March 10th, 2023", "March 10th,2023", "March10th, 2023", "March10th,2023"], "preferences": [["pet_friendly"]]}}]}
{"id": "simple_393", "model_name": "DeepSeek-R1", "test_category": "simple", "valid": false, "error": ["Invalid value for parameter 'base_currency': 'Japanese Yen'. Expected one of ['JPY']. Case insensitive."], "error_type": "value_error:string", "prompt": {"id": "simple_393", "question": [[{"role": "user", "content": "How much will 20000 Japanese Yen be in United States Dollar?"}]], "function": [{"name": "convert_currency", "description": "Converts an amount from a particular currency to another currency.", "parameters": {"type": "dict", "properties": {"base_currency": {"type": "string", "description": "The base currency in which the original amount is present."}, "target_currency": {"type": "string", "description": "The currency to which you want to convert."}, "amount": {"type": "integer", "description": "The amount you want to convert."}}, "required": ["base_currency", "target_currency", "amount"]}}]}, "model_result_raw": "The query requires converting 20,000 Japanese Yen (JPY) to United States Dollars (USD). The `convert_currency` function can perform this. Parameters are provided directly in the query:  \n- `base_currency`: \"Japanese Yen\" (string)  \n- `target_currency`: \"United States Dollar\" (string)  \n- `amount`: 20000 (integer)  \n\n<TOOLCALL><functions><function name=\"convert_currency\"><params><param name=\"base_currency\" value=\"Japanese Yen\" type=\"string\"/><param name=\"target_currency\" value=\"United States Dollar\" type=\"string\"/><param name=\"amount\" value=\"20000\" type=\"integer\"/></params></function></functions></TOOLCALL>", "model_result_decoded": [{"convert_currency": {"base_currency": "Japanese Yen", "target_currency": "United States Dollar", "amount": 20000}}], "possible_answer": [{"convert_currency": {"base_currency": ["JPY"], "target_currency": ["USD"], "amount": [20000]}}]}
{"accuracy": 0.6333333333333333, "correct_count": 19, "total_count": 30}
{"id": "simple_19", "model_name": "Qwen_Qwen3-8B", "test_category": "simple", "valid": false, "error": ["Invalid syntax. Failed to decode AST. mismatched tag: line 1, column 139"], "error_type": "ast_decoder:decoder_failed", "prompt": {"id": "simple_19", "question": [[{"role": "user", "content": "Calculate the greatest common divisor of two numbers: 40 and 50"}]], "function": [{"name": "math.gcd", "description": "Compute the greatest common divisor of two numbers", "parameters": {"type": "dict", "properties": {"num1": {"type": "integer", "description": "The first number."}, "num2": {"type": "integer", "description": "The second number."}}, "required": ["num1", "num2"]}}]}, "model_result_raw": "<functions><function name=\"math.gcd\"><params><param name=\"num1\" value=\"40\" type=\"integer\"/><param name=\"num2\" value=\"50\" type=\"integer\"/></function></functions>", "possible_answer": [{"math.gcd": {"num1": [40], "num2": [50]}}]}
{"id": "simple_25", "model_name": "Qwen_Qwen3-8B", "test_category": "simple", "valid": false, "error": ["Incorrect type for parameter 'height'. Expected type integer, got str. Parameter value: '150'."], "error_type": "type_error:simple", "prompt": {"id": "simple_25", "question": [[{"role": "user", "content": "Calculate the final velocity of an object falling from a 150 meter building, assuming initial velocity is zero."}]], "function": [{"name": "calculate_final_velocity", "description": "Calculate the final velocity of a free falling object given the height it's dropped from, the initial velocity and acceleration due to gravity. Ignore air resistance.", "parameters": {"type": "dict", "properties": {"height": {"type": "integer", "description": "The height the object is dropped from, in meters."}, "initial_velocity": {"type": "integer", "description": "The initial velocity of the object in m/s. Default is zero."}, "gravity": {"type": "float", "description": "Acceleration due to gravity. Default value is 9.81 m/s^2, earth's gravity."}}, "required": ["height"]}}]}, "model_result_raw": "<functions><function name=\"calculate_final_velocity\"><params><param name=\"height\" value=\"150\" type=\"int\"/><param name=\"initial_velocity\" value=\"0\" type=\"int\"/></params></function></functions>", "model_result_decoded": [{"calculate_final_velocity": {"height": "150", "initial_velocity": "0"}}], "possible_answer": [{"calculate_final_velocity": {"height": [150], "initial_velocity": [0, ""], "gravity": [9.81, ""]}}]}
{"id": "simple_96", "model_name": "Qwen_Qwen3-8B", "test_category": "simple", "valid": false, "error": ["Invalid syntax. Failed to decode AST. mismatched tag: line 1, column 253"], "error_type": "ast_decoder:decoder_failed", "prompt": {"id": "simple_96", "question": [[{"role": "user", "content": "Find records in database in user table where age is greater than 25 and job is 'engineer'."}]], "function": [{"name": "database.query", "description": "Query the database based on certain conditions.", "parameters": {"type": "dict", "properties": {"table": {"type": "string", "description": "Name of the table to query."}, "conditions": {"type": "array", "items": {"type": "dict", "properties": {"field": {"type": "string", "description": "The field to apply the condition."}, "operation": {"type": "string", "description": "The operation to be performed.", "enum": ["<", ">", "=", ">=", "<="]}, "value": {"type": "string", "description": "The value to be compared."}}, "required": ["field", "operation", "value"]}, "description": "Conditions for the query."}}, "required": ["table", "conditions"]}}]}, "model_result_raw": "<functions><function name=\"database.query\"><params><param name=\"table\" value=\"user\" type=\"string\"/><param name=\"conditions\" value=\"[{'field': 'age', 'operator': '>', 'value': 25}, {'field': 'job', 'operator': '=', 'value': 'engineer'}]\" type=\"array\"/></function></functions>", "possible_answer": [{"database.query": {"table": ["user"], "conditions": [[{"field": ["age"], "operation": [">"], "value": ["25"]}, {"field": ["job"], "operation": ["="], "value": ["engineer"]}]]}}]}
{"id": "simple_105", "model_name": "Qwen_Qwen3-8B", "test_category": "simple", "valid": false, "error": ["Incorrect type for parameter 'base'. Expected type integer, got str. Parameter value: '3'."], "error_type": "type_error:simple", "prompt": {"id": "simple_105", "question": [[{"role": "user", "content": "Calculate the power of 3 raised to the power 4."}]], "function": [{"name": "math.power", "description": "Calculate the power of one number raised to another.", "parameters": {"type": "dict", "properties": {"base": {"type": "integer", "description": "The base number."}, "exponent": {"type": "integer", "description": "The exponent."}, "mod": {"type": "integer", "description": "The modulus. Default is 1. Calculates pow(base, exponent) % mod when provided."}}, "required": ["base", "exponent"]}}]}, "model_result_raw": "<functions><function name=\"math.power\"><params><param name=\"base\" value=\"3\" type=\"int\"/><param name=\"exponent\" value=\"4\" type=\"int\"/></params></function></functions>", "model_result_decoded": [{"math.power": {"base": "3", "exponent": "4"}}], "possible_answer": [{"math.power": {"base": [3], "exponent": [4], "mod": ["", 1]}}]}
{"id": "simple_134", "model_name": "Qwen_Qwen3-8B", "test_category": "simple", "valid": false, "error": ["Wrong number of functions."], "error_type": "simple_function_checker:wrong_count", "prompt": {"id": "simple_134", "question": [[{"role": "user", "content": "Predict the total expected profit of stocks XYZ in 5 years given I have invested $5000 and annual return rate is 7%."}]], "function": [{"name": "investment.predictProfit", "description": "Predict the profit for given investment after specified number of years.", "parameters": {"type": "dict", "properties": {"investment_amount": {"type": "integer", "description": "The amount invested in dollars."}, "annual_return": {"type": "float", "description": "The annual return rate of the investment."}, "years": {"type": "integer", "description": "The time period in years for which the investment is made."}}, "required": ["investment_amount", "annual_return", "years"]}}]}, "model_result_raw": "<functions><function name=\"investment.predict_profit\" type=\"investment\" type=\"investment\" type=\"investment\" type=\"investment\" type=\"investment\" type=\"investment\" type=\"investment\" type=\"investment\" type=\"investment\" type=\"investment\" type=\"investment\" type=\"investment\" type=\"investment\" type=\"investment\" type=\"investment\" type=\"investment\" type=\"investment\" type=\"investment\" type=\"investment\" type=\"investment\" type=\"investment\" type=\"investment\" type=\"investment\" type=\"type\" type=\"type\" value=\"investment\" value=\"value\" value=\"value\" value=\"value\" value=\"value\" value=\"value\" type=\"type\" type=\"type\" type=\"type\" type=\"type\" type=\"type\" type=\"type\" type=\"type\" type=\"type\" type=\"type\" type=\"type\" type=\"type\" type=\"type\" type=\"type\" type=\"type\" value=\"value\" value=\"value\" type=\"type\" type=\"type\" type=\"type\" value=\"value\" value=\"value\" type=\"type\" type=\"string\" type=\"string\" type=\"string\" value=\"value\" value=\"value\" value=\"value\" value=\"value\" value=\"value\" type=\"string\" value=\"value\" value=\"", "model_result_decoded": [], "possible_answer": [{"investment.predictProfit": {"investment_amount": [5000], "annual_return": [0.07], "years": [5]}}]}
{"id": "simple_155", "model_name": "Qwen_Qwen3-8B", "test_category": "simple", "valid": false, "error": ["Incorrect type for parameter 'initial_investment'. Expected type integer, got str. Parameter value: '1000'."], "error_type": "type_error:simple", "prompt": {"id": "simple_155", "question": [[{"role": "user", "content": "Calculate the future value of my investment of $1000 with an annual interest rate of 5% over 2 years."}]], "function": [{"name": "calculate_future_value", "description": "Calculate the future value of an investment given the initial amount, interest rate, and investment duration.", "parameters": {"type": "dict", "properties": {"initial_investment": {"type": "integer", "description": "The initial investment amount."}, "interest_rate": {"type": "float", "description": "The annual interest rate in decimal form."}, "duration": {"type": "integer", "description": "The investment duration in years."}, "compounded": {"type": "integer", "description": "The number of times the interest is compounded per year. Default is 1 (annual compounding)."}}, "required": ["initial_investment", "interest_rate", "duration"]}}]}, "model_result_raw": "<functions><function name=\"calculate_future_value\"><params><param name=\"initial_investment\" value=\"1000\" type=\"int\"/><param name=\"interest_rate\" value=\"0.05\" type=\"float\"/><param name=\"duration\" value=\"2\" type=\"int\"/><param name=\"compounded\" value=\"1\" type=\"int\"/></params></function></functions>", "model_result_decoded": [{"calculate_future_value": {"initial_investment": "1000", "interest_rate": 0.05, "duration": "2", "compounded": "1"}}], "possible_answer": [{"calculate_future_value": {"initial_investment": [1000], "interest_rate": [0.05], "duration": [2], "compounded": ["", 1]}}]}
{"id": "simple_168", "model_name": "Qwen_Qwen3-8B", "test_category": "simple", "valid": false, "error": ["Wrong number of functions."], "error_type": "simple_function_checker:wrong_count", "prompt": {"id": "simple_168", "question": [[{"role": "user", "content": "Search for ongoing lawsuits related to the company 'Google' filed after January 1, 2021 in California."}]], "function": [{"name": "lawsuit_search", "description": "Search for lawsuits related to a specific company within a specific date range and location.", "parameters": {"type": "dict", "properties": {"company": {"type": "string", "description": "The company related to the lawsuit."}, "start_date": {"type": "string", "description": "Start of the date range for when the lawsuit was filed in the format of MM-DD-YYY."}, "location": {"type": "string", "description": "Location where the lawsuit was filed in the format of full state name."}, "status": {"type": "string", "enum": ["ongoing", "settled", "dismissed"], "description": "The status of the lawsuit. Default is 'ongoing'."}}, "required": ["company", "start_date", "location"]}}]}, "model_result_raw": "<think>\nOkay, let's tackle this query. The user wants to search for ongoing lawsuits related to Google filed after January 1, 2021, in California.\n\nFirst, I need to check the available function. The function is lawsuit_search. Let me look at its parameters. The parameters are company (str), start_date (str), location (str), and status (str) with a default of 'ongoing'.\n\nThe user specified 'ongoing' status, which matches the default. So I don't need to set status unless they want something else. The company is Google. The start_date is after January 1, 2021. The function's start_date is a string in MM-DD-YYY format. So January 1, 2021 would be '01-01-2021'. The location is California, which is the full state name. \n\nWait, the user says \"filed after January 1, 2021\". Does the function's start_date parameter represent the start of the date range? The description says \"date range\", but the example might be inclusive. However, the user wants lawsuits filed after that date. But the function'", "model_result_decoded": [], "possible_answer": [{"lawsuit_search": {"company": ["Google", "GOOG"], "start_date": ["01-01-2021", "January 1, 2021"], "location": ["California"], "status": ["ongoing", ""]}}]}
{"id": "simple_208", "model_name": "Qwen_Qwen3-8B", "test_category": "simple", "valid": false, "error": ["Invalid syntax. Failed to decode AST. mismatched tag: line 1, column 238"], "error_type": "ast_decoder:decoder_failed", "prompt": {"id": "simple_208", "question": [[{"role": "user", "content": "Get me the directions from New York to Los Angeles avoiding highways and toll roads."}]], "function": [{"name": "map_service.get_directions", "description": "Retrieve directions from a starting location to an ending location, including options for route preferences.", "parameters": {"type": "dict", "properties": {"start": {"type": "string", "description": "Starting location for the route."}, "end": {"type": "string", "description": "Ending location for the route."}, "avoid": {"type": "array", "items": {"type": "string", "enum": ["tolls", "highways", "ferries"]}, "description": "Route features to avoid. Default is ['highways', 'ferries']"}}, "required": ["start", "end"]}}]}, "model_result_raw": "<functions><function name=\"map_service.get_directions\"><params><param name=\"start\" value=\"New York\" type=\"string\"/><param name=\"end\" value=\"Los Angeles\" type=\"string\"/><param name=\"avoid\" value=\"['highways', 'tollroads']\" type=\"array\"/></function></functions>", "possible_answer": [{"map_service.get_directions": {"start": ["New York", "NYC"], "end": ["Los Angeles", "LA"], "avoid": [["highways", "tolls"], ["tolls", "highways"]]}}]}
{"id": "simple_328", "model_name": "Qwen_Qwen3-8B", "test_category": "simple", "valid": false, "error": ["Invalid syntax. Failed to decode AST. mismatched tag: line 1, column 242"], "error_type": "ast_decoder:decoder_failed", "prompt": {"id": "simple_328", "question": [[{"role": "user", "content": "Find the rating and player count of the board game 'Ticket to Ride'."}]], "function": [{"name": "boardgame.get_info", "description": "Retrieve detailed information of a board game.", "parameters": {"type": "dict", "properties": {"name": {"type": "string", "description": "Name of the board game."}, "parameters": {"type": "array", "items": {"type": "string", "enum": ["player count", "playing time", "age", "mechanics", "rating"]}, "description": "Game characteristics interested."}, "language": {"type": "string", "description": "The preferred language for the game information, default is English"}}, "required": ["name", "parameters"]}}]}, "model_result_raw": "<functions><function name=\"boardgame.get_info\"><params><param name=\"name\" value=\"Ticket to Ride\" type=\"string\"/><param name=\"parameters\" value=\"['rating', 'player_count']\" type=\"array\"/><param name=\"language\" value=\"English\" type=\"string\"/></function></functions>", "possible_answer": [{"boardgame.get_info": {"name": ["Ticket to Ride"], "parameters": [["rating", "player count"], ["player count", "rating"]], "language": ["", "English"]}}]}
{"id": "simple_380", "model_name": "Qwen_Qwen3-8B", "test_category": "simple", "valid": false, "error": ["Invalid syntax. Failed to decode AST. mismatched tag: line 1, column 345"], "error_type": "ast_decoder:decoder_failed", "prompt": {"id": "simple_380", "question": [[{"role": "user", "content": "Book a single room at a pet friendly hotel near Manhattan, New York for 3 nights starting from March 10th, 2023."}]], "function": [{"name": "hotel_booking", "description": "Books a hotel room given the location, room type, stay duration and any additional preferences.", "parameters": {"type": "dict", "properties": {"location": {"type": "string", "description": "The city where you want to book the hotel."}, "room_type": {"type": "string", "description": "Type of the room required. Options: 'single', 'double', 'deluxe', etc."}, "duration": {"type": "integer", "description": "The number of nights you want to book the hotel for."}, "start_date": {"type": "string", "description": "The date when your stay begins."}, "preferences": {"type": "array", "items": {"type": "string", "enum": ["pet_friendly", "gym", "swimming_pool", "free_breakfast", "parking"]}, "description": "Optional preferences of stay at the hotel. Default to use all if not specified."}}, "required": ["location", "room_type", "duration", "start_date"]}}]}, "model_result_raw": "<functions><function name=\"hotel_booking\"><params><param name=\"location\" value=\"Manhattan, New York\" type=\"string\"/><param name=\"room_type\" value=\"single\" type=\"string\"/><param name=\"duration\" value=\"3\" type=\"integer\"/><param name=\"start_date\" value=\"2023-03-10\" type=\"string\"/><param name=\"preferences\" value=\"['pet friendly']\" type=\"array\"/></function></params></functions>", "possible_answer": [{"hotel_booking": {"location": ["Manhattan, New York", "Manhattan, NY", "NYC", "New York City"], "room_type": ["single"], "duration": [3], "start_date": ["2023-03-10", "03/10/2023", "Mar.10,2023", "March 10th, 2023", "March 10th,2023", "March10th, 2023", "March10th,2023"], "preferences": [["pet_friendly"]]}}]}
{"id": "simple_393", "model_name": "Qwen_Qwen3-8B", "test_category": "simple", "valid": false, "error": ["Invalid syntax. Failed to decode AST. mismatched tag: line 1, column 218"], "error_type": "ast_decoder:decoder_failed", "prompt": {"id": "simple_393", "question": [[{"role": "user", "content": "How much will 20000 Japanese Yen be in United States Dollar?"}]], "function": [{"name": "convert_currency", "description": "Converts an amount from a particular currency to another currency.", "parameters": {"type": "dict", "properties": {"base_currency": {"type": "string", "description": "The base currency in which the original amount is present."}, "target_currency": {"type": "string", "description": "The currency to which you want to convert."}, "amount": {"type": "integer", "description": "The amount you want to convert."}}, "required": ["base_currency", "target_currency", "amount"]}}]}, "model_result_raw": "<functions><function name=\"convert_currency\"><params><param name=\"base_currency\" value=\"JPY\" type=\"string\"/><param name=\"target_currency\" value=\"USD\" type=\"string\"/><param name=\"amount\" value=\"20000\" type=\"integer\"/></function></functions>", "possible_answer": [{"convert_currency": {"base_currency": ["JPY"], "target_currency": ["USD"], "amount": [20000]}}]}
{"accuracy": 0.7333333333333333, "correct_count": 11, "total_count": 15}
{"id": "multiple_46", "model_name": "meta-llama_Llama-3.1-8B-Instruct", "test_category": "multiple", "valid": false, "error": ["Invalid syntax. Failed to decode AST. mismatched tag: line 1, column 165"], "error_type": "ast_decoder:decoder_failed", "prompt": {"id": "multiple_46", "question": [[{"role": "user", "content": "Sort this list of names in ascending order: ['Sam', 'Alice', 'Jack']"}]], "function": [{"name": "filter_list", "description": "Filters elements of a list based on a given condition", "parameters": {"type": "dict", "properties": {"elements": {"type": "array", "items": {"type": "string"}, "description": "The list of elements to filter."}, "condition": {"type": "string", "description": "The condition to filter the elements on."}}, "required": ["elements", "condition"]}}, {"name": "sum_elements", "description": "Add all elements of a numeric list", "parameters": {"type": "dict", "properties": {"elements": {"type": "array", "items": {"type": "integer"}, "description": "The list of numeric elements to add."}}, "required": ["elements"]}}, {"name": "sort_list", "description": "Sort the elements of a list in ascending or descending order", "parameters": {"type": "dict", "properties": {"elements": {"type": "array", "items": {"type": "string"}, "description": "The list of elements to sort."}, "order": {"type": "string", "description": "The order in which to sort the elements. This can be 'asc' for ascending order, or 'desc' for descending order.", "default": "asc"}}, "required": ["elements"]}}]}, "model_result_raw": "<functions><function name=\"sort_list\"><params><param name=\"elements\" value=\"['Sam', 'Alice', 'Jack']\" type=\"array\"/><param name=\"order\" value=\"asc\" type=\"string\"/></function></functions>", "possible_answer": [{"sort_list": {"elements": [["Sam", "Alice", "Jack"]], "order": ["asc", ""]}}]}
{"id": "multiple_54", "model_name": "meta-llama_Llama-3.1-8B-Instruct", "test_category": "multiple", "valid": false, "error": ["Invalid syntax. Failed to decode AST. mismatched tag: line 1, column 227"], "error_type": "ast_decoder:decoder_failed", "prompt": {"id": "multiple_54", "question": [[{"role": "user", "content": "Find out the historical dividend payments of Apple Inc for last five years."}]], "function": [{"name": "corporate_finance.dividend_data", "description": "Get historical dividend data of a specific company within a particular duration.", "parameters": {"type": "dict", "properties": {"company": {"type": "string", "description": "The company that you want to get the dividend data for."}, "years": {"type": "integer", "description": "Number of past years for which to retrieve the data."}, "frequency": {"type": "string", "enum": ["quarterly", "annually"], "description": "The frequency of the dividend payment. Default annually"}}, "required": ["company", "years"]}}, {"name": "stock_market_data", "description": "Retrieve stock market data for a specific company and time frame.", "parameters": {"type": "dict", "properties": {"company": {"type": "string", "description": "The company that you want to get the stock market data for."}, "days": {"type": "integer", "description": "Number of past days for which to retrieve the data."}}, "required": ["company", "days"]}}]}, "model_result_raw": "<functions><function name=\"corporate_finance.dividend_data\"><params><param name=\"company\" value=\"Apple Inc\" type=\"string\"/><param name=\"years\" value=\"5\" type=\"integer\"/><param name=\"frequency\" value=\"annually\" type=\"string\"/></function></functions>", "possible_answer": [{"corporate_finance.dividend_data": {"company": ["Apple Inc", "Apple", "Apple Inc."], "years": [5], "frequency": ["", "annually"]}}]}
{"id": "multiple_71", "model_name": "meta-llama_Llama-3.1-8B-Instruct", "test_category": "multiple", "valid": false, "error": ["Invalid syntax. Failed to decode AST. mismatched tag: line 1, column 156"], "error_type": "ast_decoder:decoder_failed", "prompt": {"id": "multiple_71", "question": [[{"role": "user", "content": "How many veterans were there in the United States in the year 1954?"}]], "function": [{"name": "get_bureau_statistics", "description": "Retrieve statistical data for a specific year and statistical category", "parameters": {"type": "dict", "properties": {"year": {"type": "integer", "description": "The year for which to retrieve the statistical data"}, "category": {"type": "string", "description": "The statistical category (e.g., employment, crime, health)"}}, "required": ["year", "category"]}}, {"name": "get_population", "description": "Retrieve population data for a specific year and population category", "parameters": {"type": "dict", "properties": {"year": {"type": "integer", "description": "The year for which to retrieve the population data"}, "category": {"type": "string", "description": "The population category (e.g., total, veterans, women)"}}, "required": ["year", "category"]}}, {"name": "get_demographics", "description": "Retrieve demographic data for a specific year and demographic category", "parameters": {"type": "dict", "properties": {"year": {"type": "integer", "description": "The year for which to retrieve the demographic data"}, "category": {"type": "string", "description": "The demographic category (e.g., gender, race, age)"}}, "required": ["year", "category"]}}]}, "model_result_raw": "<functions><function name=\"get_population\"><params><param name=\"year\" value=\"1954\" type=\"integer\"/><param name=\"category\" value=\"veterans\" type=\"string\"/></function></functions>", "possible_answer": [{"get_population": {"year": [1954], "category": ["veterans"]}}]}
{"id": "multiple_161", "model_name": "meta-llama_Llama-3.1-8B-Instruct", "test_category": "multiple", "valid": false, "error": ["Invalid syntax. Failed to decode AST. mismatched tag: line 1, column 279"], "error_type": "ast_decoder:decoder_failed", "prompt": {"id": "multiple_161", "question": [[{"role": "user", "content": "Find the top rated modern sculpture exhibition happening in New York in the upcoming month."}]], "function": [{"name": "card_game_probability.calculate", "description": "Calculate the probability of drawing a certain card or suit from a deck of cards.", "parameters": {"type": "dict", "properties": {"total_cards": {"type": "integer", "description": "Total number of cards in the deck."}, "desired_cards": {"type": "integer", "description": "Number of cards in the deck that satisfy the conditions."}, "cards_drawn": {"type": "integer", "default": 1, "description": "Number of cards drawn from the deck."}}, "required": ["total_cards", "desired_cards"]}}, {"name": "find_exhibition", "description": "Locate the most popular exhibitions based on criteria like location, time, art form, and user ratings.", "parameters": {"type": "dict", "properties": {"location": {"type": "string", "description": "The city where the exhibition is held, e.g., New York, NY."}, "art_form": {"type": "string", "description": "The form of art the exhibition is displaying e.g., sculpture."}, "month": {"type": "string", "description": "The month of exhibition. Default value will return upcoming events."}, "user_ratings": {"type": "string", "enum": ["low", "average", "high"], "description": "Select exhibitions with user rating threshold. Default is 'high'"}}, "required": ["location", "art_form"]}}, {"name": "get_sculpture_info", "description": "Retrieves the most recent artwork by a specified artist with its detailed description.", "parameters": {"type": "dict", "properties": {"artist_name": {"type": "string", "description": "The name of the artist."}, "year": {"type": "integer", "description": "Year of the sculpture. This is optional. Default 2024"}, "detail": {"type": "boolean", "description": "If True, it provides detailed description of the sculpture. Defaults to False."}}, "required": ["artist_name"]}}]}, "model_result_raw": "<functions><function name=\"find_exhibition\"><params><param name=\"location\" value=\"New York\" type=\"string\"/><param name=\"art_form\" value=\"modern sculpture\" type=\"string\"/><param name=\"month\" value=\"upcoming\" type=\"string\"/><param name=\"user_ratings\" value=\"high\" type=\"string\"/></function></functions>", "possible_answer": [{"find_exhibition": {"location": ["New York", "New York, NY", "New York City", "NYC", "NY"], "art_form": ["sculpture", "modern sculpture"], "month": ["upcoming", "next month", "upcoming month", "next", ""], "user_ratings": ["high", ""]}}]}